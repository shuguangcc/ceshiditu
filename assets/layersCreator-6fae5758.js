import{j as d}from"./Collection-78126e82.js";import"./string-cdf077e6.js";import{E as T}from"./promiseUtils-6684e352.js";import{a as n}from"./lazyLayerLoader-c3848c13.js";import f from"./PortalItem-aa42c739.js";import{selectLayerClassPath as g}from"./portalLayers-ea9cba81.js";import{t as G}from"./styleUtils-da81b13f.js";import"./cast-7928d7aa.js";import"./typedArrayUtil-a8b5b3e9.js";import"./Error-653283ae.js";import"./ensureType-cf29afa9.js";import"./nextTick-3ee5a785.js";import"./Evented-515b9d9c.js";import"./SimpleObservable-7dcdef1d.js";import"./preload-helper-41c905a7.js";import"./assets-0b172f07.js";import"./request-d3e98716.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./Extent-69509002.js";import"./Ellipsoid-89682c5e.js";import"./Portal-8b65c9c4.js";import"./locale-30120714.js";import"./PortalGroup-bfe93c76.js";import"./jsonMap-c1f958cf.js";import"./PortalUser-4c8e1adc.js";import"./layersLoader-6e370ed5.js";import"./Layer-f0696768.js";import"./geometry-5a216427.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./Identifiable-aa6d459d.js";import"./arcgisLayerUrl-0b2b7691.js";import"./persistableUrlUtils-a16d0f55.js";import"./jsonContext-c2303d72.js";import"./portalItemUtils-e098e7d9.js";import"./projection-d7b57a6c.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./unitUtils-47abac71.js";import"./mat4-44a0988f.js";import"./aaBoundingRect-4a760199.js";import"./zscale-1e1fc911.js";import"./asyncUtils-62e8a185.js";function M(e){return s(e,"notes")}function A(e){return s(e,"markup")}function v(e){return s(e,"route")}function s(e,r){return!(!e.layerType||e.layerType!=="ArcGISFeatureLayer")&&e.featureCollectionType===r}async function w(e,r,a){if(!r)return;const i=[];for(const t of r){const y=B(t,a);t.layerType==="GroupLayer"?i.push(x(y,t,a)):i.push(y)}const o=await T(i);for(const t of o)!t.value||a.filter&&!a.filter(t.value)||e.add(t.value)}const b={ArcGISDimensionLayer:"DimensionLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",PointCloudLayer:"PointCloudLayer",ArcGISSceneServiceLayer:"SceneLayer",IntegratedMeshLayer:"IntegratedMeshLayer",OGCFeatureLayer:"OGCFeatureLayer",BuildingSceneLayer:"BuildingSceneLayer",ArcGISTiledElevationServiceLayer:"ElevationLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",GroupLayer:"GroupLayer",GeoJSON:"GeoJSONLayer",WebTiledLayer:"WebTileLayer",CSV:"CSVLayer",VectorTileLayer:"VectorTileLayer",WFS:"WFSLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer",KML:"KMLLayer",RasterDataLayer:"UnsupportedLayer",Voxel:"VoxelLayer",LineOfSightLayer:"LineOfSightLayer"},W={ArcGISTiledElevationServiceLayer:"ElevationLayer",DefaultTileLayer:"ElevationLayer",RasterDataElevationLayer:"UnsupportedLayer"},F={ArcGISTiledMapServiceLayer:"TileLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",OpenStreetMap:"OpenStreetMapLayer",WebTiledLayer:"WebTileLayer",VectorTileLayer:"VectorTileLayer",ArcGISImageServiceLayer:"UnsupportedLayer",WMS:"UnsupportedLayer",ArcGISMapServiceLayer:"UnsupportedLayer",DefaultTileLayer:"TileLayer"},C={ArcGISAnnotationLayer:"UnsupportedLayer",ArcGISDimensionLayer:"UnsupportedLayer",ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISStreamLayer:"StreamLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",CSV:"CSVLayer",DefaultTileLayer:"TileLayer",GeoRSS:"GeoRSSLayer",GeoJSON:"GeoJSONLayer",GroupLayer:"GroupLayer",KML:"KMLLayer",OGCFeatureLayer:"OGCFeatureLayer",OrientedImageryLayer:"OrientedImageryLayer",SubtypeGroupLayer:"SubtypeGroupLayer",VectorTileLayer:"VectorTileLayer",WFS:"WFSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},O={ArcGISFeatureLayer:"FeatureLayer"},V={ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WebTiledLayer:"WebTileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer"};async function B(e,r){return h(await D(e,r),e,r)}async function h(e,r,a){const i=new e;return i.read(r,a.context),i.type==="group"&&S(r)&&await k(i,r,a.context),await G(i,a.context),i}async function D(e,r){const a=r.context,i=U(a);let o=e.layerType||e.type;!o&&r&&r.defaultLayerType&&(o=r.defaultLayerType);const t=i[o];let y=t?n[t]:n.UnknownLayer;if(I(e)){const l=a==null?void 0:a.portal;if(e.itemId){const L=new f({id:e.itemId,portal:l});await L.load();const p=(await g(L)).className||"UnknownLayer";y=n[p]}}else o==="ArcGISFeatureLayer"?M(e)||A(e)?y=n.MapNotesLayer:v(e)?y=n.RouteLayer:S(e)&&(y=n.GroupLayer):e.wmtsInfo&&e.wmtsInfo.url&&e.wmtsInfo.layerIdentifier?y=n.WMTSLayer:o==="WFS"&&e.wfsInfo.version!=="2.0.0"&&(y=n.UnsupportedLayer);return y()}function S(e){var r,a;return e.layerType!=="ArcGISFeatureLayer"||I(e)?!1:(((a=(r=e.featureCollection)==null?void 0:r.layers)==null?void 0:a.length)??0)>1}function I(e){return e.type==="Feature Collection"}function U(e){let r;if(e.origin==="web-scene")switch(e.layerContainerType){case"basemap":r=F;break;case"ground":r=W;break;default:r=b}else switch(e.layerContainerType){case"basemap":r=V;break;case"tables":r=O;break;default:r=C}return r}async function x(e,r,a){const i=new d,o=w(i,Array.isArray(r.layers)?r.layers:[],a),t=await e;if(await o,t.type==="group")return t.layers.addMany(i),t}async function k(e,r,a){const i=n.FeatureLayer,o=await i(),t=r.featureCollection,y=t.showLegend,l=t.layers.map((L,p)=>{var m;const c=new o;c.read(L,a);const u={...a,ignoreDefaults:!0};return c.read({id:`${e.id}-sublayer-${p}`,visibility:((m=r.visibleLayers)==null?void 0:m.includes(p))??!0},u),y!=null&&c.read({showLegend:y},u),c});e.layers.addMany(l)}export{w as populateOperationalLayers};
