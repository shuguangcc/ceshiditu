import{j as l}from"./asyncUtils-62e8a185.js";import{a as n,s as g}from"./Error-653283ae.js";import{r as _,e as f}from"./typedArrayUtil-a8b5b3e9.js";import{f as m,j as d}from"./promiseUtils-6684e352.js";import{E as w,v as p}from"./Extent-69509002.js";import{n as E,r as q}from"./featureConversionUtils-01cdde8a.js";import{u as F}from"./FeatureStore-b1ba4c29.js";import{g as S,f as T}from"./utils-1f4fcfec.js";import{Y as x}from"./QueryEngine-a5c074c3.js";import{T as j,I}from"./geojson-e3044c2f.js";import{m as b}from"./sourceUtils-17bbc359.js";import{K as C}from"./wfsUtils-2489b407.js";import{r as P}from"./FieldsIndex-aa6dd3fa.js";import"./cast-7928d7aa.js";import"./string-cdf077e6.js";import"./ensureType-cf29afa9.js";import"./nextTick-3ee5a785.js";import"./Ellipsoid-89682c5e.js";import"./jsonUtils-03c4af61.js";import"./Polyline-bf268e7b.js";import"./OptimizedFeature-3de538c1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Evented-515b9d9c.js";import"./aaBoundingBox-fc742a4e.js";import"./aaBoundingRect-4a760199.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./PooledRBush-26ba8fba.js";import"./quickselect-322ec8e1.js";import"./optimizedFeatureQueryEngineAdapter-4b9881eb.js";import"./centroid-13995b22.js";import"./preload-helper-41c905a7.js";import"./jsonMap-c1f958cf.js";import"./unitUtils-47abac71.js";import"./projection-d7b57a6c.js";import"./SimpleObservable-7dcdef1d.js";import"./mat4-44a0988f.js";import"./assets-0b172f07.js";import"./request-d3e98716.js";import"./zscale-1e1fc911.js";import"./normalizeUtils-ee4bf39f.js";import"./geometry-5a216427.js";import"./typeUtils-eb9416d0.js";import"./json-48e3ea08.js";import"./MemCache-4b976a8b.js";import"./QueryEngineResult-665bf7fb.js";import"./quantizationUtils-33aba427.js";import"./ItemCache-ee28c7ba.js";import"./WhereClause-2b5b05b2.js";import"./utils-30a9a7e0.js";import"./generateRendererUtils-a996108f.js";import"./colorRamps-3a8ac20b.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./enumeration-3c281341.js";import"./Symbol-fc4312a4.js";import"./fieldUtils-31bfecd2.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-b43dc94c.js";import"./Scheduler-8433672d.js";import"./reactiveUtils-f41a4e00.js";import"./xmlUtils-444cb4c0.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";class Yt{constructor(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async t=>{const{objectIdField:e}=this._queryEngine,i=await C(this._getFeatureUrl??"",this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map(r=>r.name),signal:t});await j(i),m(t);const o=I(i,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:e});if(!w(this._queryEngine.spatialReference,p))for(const r of o)_(r.geometry)&&(r.geometry=E(S(q(r.geometry,this._queryEngine.geometryType,!1,!1),p,this._queryEngine.spatialReference)));let a=1;for(const r of o){const s={};b(this._fieldsIndex,s,r.attributes,!0),r.attributes=s,r.attributes[e]==null&&(r.objectId=r.attributes[e]=a++)}return o}}destroy(){var t;(t=this._queryEngine)==null||t.destroy(),this._queryEngine=null}async load(t,e){const{getFeatureUrl:i,getFeatureOutputFormat:o,spatialReference:a,fields:r,geometryType:s,featureType:u,objectIdField:h,customParameters:y}=t;this._featureType=u,this._customParameters=y,this._getFeatureUrl=i,this._getFeatureOutputFormat=o,this._fieldsIndex=new P(r),await this._checkProjection(a),m(e),this._queryEngine=new x({fields:r,geometryType:s,hasM:!1,hasZ:!1,objectIdField:h,spatialReference:a,timeInfo:null,featureStore:new F({geometryType:s,hasM:!1,hasZ:!1})});const c=await this._snapshotFeatures(f(e.signal));return this._queryEngine.featureStore.addMany(c),{extent:this._queryEngine.fullExtent}}async applyEdits(){throw new n("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){var e;return this._customParameters=t,(e=this._snapshotTask)==null||e.abort(),this._snapshotTask=l(this._snapshotFeatures),this._snapshotTask.promise.then(i=>{this._queryEngine.featureStore.clear(),i&&this._queryEngine.featureStore.addMany(i)},i=>{this._queryEngine.featureStore.clear(),d(i)||g.getLogger("esri.layers.WFSLayer").error(new n("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:i}))}),await this._waitSnapshotComplete(),{extent:this._queryEngine.fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _checkProjection(t){try{await T(p,t)}catch{throw new n("unsupported-projection","Projection not supported",{spatialReference:t})}}}export{Yt as default};
