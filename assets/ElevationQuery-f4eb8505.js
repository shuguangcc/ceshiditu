import{b as U}from"./asyncUtils-62e8a185.js";import{a as d}from"./Error-653283ae.js";import{r as T,t as w,c as b}from"./typedArrayUtil-a8b5b3e9.js";import{y as E,w as L,E as j}from"./promiseUtils-6684e352.js";import{$ as q}from"./unitUtils-47abac71.js";import{a as R,m as Q}from"./Polyline-bf268e7b.js";import{w as O}from"./Extent-69509002.js";import{_ as I,r as A}from"./projection-d7b57a6c.js";import{c as W,u as B,R as V}from"./aaBoundingRect-4a760199.js";import{t as H,p as k}from"./ElevationSamplerData-7decf898.js";import{t as P}from"./TileInfo-34f80a8e.js";import"./cast-7928d7aa.js";import"./string-cdf077e6.js";import"./ensureType-cf29afa9.js";import"./nextTick-3ee5a785.js";import"./jsonMap-c1f958cf.js";import"./Ellipsoid-89682c5e.js";import"./preload-helper-41c905a7.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./SimpleObservable-7dcdef1d.js";import"./mat4-44a0988f.js";import"./assets-0b172f07.js";import"./request-d3e98716.js";import"./zscale-1e1fc911.js";import"./geometry-5a216427.js";import"./typeUtils-eb9416d0.js";class ${constructor(e,t=null){if(this.tile=e,this.zmin=0,this.zmax=0,T(t)&&T(e)){const i=e.extent;this._samplerData=new H(t,i),this.zmin=t.minValue,this.zmax=t.maxValue}}sample(e,t){if(w(this._samplerData))return;const{safeWidth:i,width:n,pixelData:o,noDataValue:s,dx:a,dy:l,y1:r,x0:c}=this._samplerData,p=G(l*(r-t),0,i),h=G(a*(e-c),0,i),u=Math.floor(p),D=Math.floor(h),x=u*n+D,F=x+n,g=o[x],_=o[F],C=o[x+1],z=o[F+1];if(g!==s&&_!==s&&C!==s&&z!==s){const M=h-D,S=g+(C-g)*M;return S+(_+(z-_)*M-S)*(p-u)}}}function G(f,e,t){return f<e?e:f>t?t:f}class De{async queryAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(r=>r.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const n=y.fromGeometry(t);let o=!1;i&&i.returnSampleInfo||(o=!0);const s={...v,...i,returnSampleInfo:!0},a=await this.query(e[e.length-1],n,s),l=await this._queryAllContinue(e,a,s);return l.geometry=l.geometry.export(),o&&delete l.sampleInfo,l}async query(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof y)&&t.type!=="point"&&t.type!=="multipoint"&&t.type!=="polyline")throw new d("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const n={...v,...i},o=new J(e,t.spatialReference,n),s=n.signal;return await e.load({signal:s}),await this._createGeometryDescriptor(o,t,s),await this._selectTiles(o,s),await this._populateElevationTiles(o,s),this._sampleGeometryWithElevation(o),this._createQueryResult(o,s)}async createSampler(e,t,i){if(!e)throw new d("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...v,...i};return this._createSampler(e,t,n)}async createSamplerAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter(s=>s.visible):e.slice()).length)throw new d("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||t.type!=="extent")throw new d("elevation-query:invalid-extent","Invalid or undefined extent");const n={...v,...i,returnSampleInfo:!0},o=await this._createSampler(e[e.length-1],t,n);return this._createSamplerAllContinue(e,t,o,n)}async _createSampler(e,t,i,n){const o=i.signal;await e.load({signal:o});const s=t.spatialReference,a=e.tileInfo.spatialReference;s.equals(a)||(await I([{source:s,dest:a}],{signal:o}),t=A(t,a));const l=new K(e,t,i,n);return await this._selectTiles(l,o),await this._populateElevationTiles(l,o),new k(l.elevationTiles,l.layer.tileInfo,l.options.noDataValue)}async _createSamplerAllContinue(e,t,i,n){if(e.pop(),!e.length)return i;const o=i.samplers.map(r=>W(r.extent)),s=await this._createSampler(e[e.length-1],t,n,o);if(s.samplers.length===0)return i;const a=i.samplers.concat(s.samplers),l=new k(a,n.noDataValue);return this._createSamplerAllContinue(e,t,l,n)}async _queryAllContinue(e,t,i){const n=e.pop(),o=t.geometry.coordinates,s=t.sampleInfo;b(s);const a=[],l=[];for(let h=0;h<o.length;h++){const u=s[h];u.demResolution>=0?u.source||(u.source=n):e.length&&(a.push(o[h]),l.push(h))}if(!e.length||a.length===0)return t;const r=t.geometry.clone(a),c=await this.query(e[e.length-1],r,i),p=c.sampleInfo;if(!p)throw new Error("no sampleInfo");return l.forEach((h,u)=>{o[h].z=c.geometry.coordinates[u].z,s[h].demResolution=p[u].demResolution}),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i=await e.geometry.project(e.outSpatialReference,t);b(i);const n={geometry:i.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(n.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach(o=>{o.tile=null,o.elevationTile=null}),n}async _createGeometryDescriptor(e,t,i){let n;const o=e.layer.tileInfo.spatialReference;if(t instanceof y?n=await t.project(o,i):(await I([{source:t.spatialReference,dest:o}],{signal:i}),n=A(t,o)),!n)throw new d("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${o.wkid}'`);e.geometry=y.fromGeometry(n)}async _selectTiles(e,t){const i=e.options.demResolution;if(e.type==="geometry"&&this._preselectOutsideLayerExtent(e),typeof i=="number")this._selectTilesClosestResolution(e);else if(i==="finest-contiguous")await this._selectTilesFinestContiguous(e,t);else{if(i!=="auto")throw new d("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}_preselectOutsideLayerExtent(e){if(w(e.layer.fullExtent))return;const t=new $(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach(n=>{const o=n.x,s=n.y;(o<i.xmin||o>i.xmax||s<i.ymin||s>i.ymax)&&(n.elevationTile=t)})}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/q(e.spatialReference);let n=e.lods[0],o=0;for(let s=1;s<e.lods.length;s++){const a=e.lods[s];Math.abs(a.resolution-i)<Math.abs(n.resolution-i)&&(n=a,o=s)}return o}async _selectTilesFinestContiguous(e,t){const i=N(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,t,i){const n=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const o=n.tilemapCache,s=e.getTilesToFetch();try{if(o)await E(Promise.all(s.map(a=>o.fetchAvailability(a.level,a.row,a.col,{signal:i}))),i);else if(await this._populateElevationTiles(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new d("elevation-query:has-unavailable-tiles")}catch(a){L(a),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),n={},o=e.options.cache,s=e.options.noDataValue,a=i.map(async l=>{if(l.id==null)return;const r=`${e.layer.uid}:${l.id}:${s}`,c=T(o)?o.get(r):null,p=T(c)?c:await e.layer.fetchTile(l.level,l.row,l.col,{noDataValue:s,signal:t});T(o)&&o.put(r,p),n[l.id]=new $(l,p)});await E(j(a),t),e.populateElevationTiles(n)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const i=e.layer.tilemapCache;if(!i)return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),o={},s=n.map(async a=>{const l=new P(null,0,0,0,B()),r=await U(i.fetchAvailabilityUpsample(a.level,a.row,a.col,l,{signal:t}));r.ok!==!1?a.id!=null&&(o[a.id]=l):L(r.error)});await E(Promise.all(s),t),e.remapTiles(o)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const n={},o=l=>{l.id!=null&&(l.id in n?n[l.id]++:(n[l.id]=1,i++))},s=l=>{if(l.id==null)return;const r=n[l.id];r===1?(delete n[l.id],i--):n[l.id]=r-1};e.forEachTileToFetch(o,s);let a=!0;for(;a&&(a=!1,e.forEachTileToFetch(l=>{i<=e.options.maximumAutoTileRequests||(s(l),t.upsampleTile(l)&&(a=!0),o(l))},s),a););}_selectTilesAutoFinest(e){const t=N(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let n=!1;e.forEachTileToFetch((o,s)=>{i.upsampleTile(o)?n=!0:s()}),n&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach(t=>{const i=t.elevationTile;let n=e.options.noDataValue;if(i){const o=i.sample(t.x,t.y);T(o)?n=o:t.elevationTile=null}t.z=n})}_extractSampleInfo(e){const t=e.layer.tileInfo,i=q(t.spatialReference);return e.geometry.coordinates.map(n=>{let o=-1;return n.elevationTile&&n.elevationTile!==e.outsideExtentTile&&(o=t.lodAt(n.elevationTile.tile.level).resolution*i),{demResolution:o}})}}class y{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new y;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map(i=>i.clone()),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await I([{source:this.spatialReference,dest:e}],{signal:t});const i=new R({spatialReference:this.spatialReference,points:this.coordinates.map(a=>[a.x,a.y])}),n=A(i,e);if(!n)return null;const o=this.coordinates.map((a,l)=>{const r=a.clone(),c=n.points[l];return r.x=c[0],r.y=c[1],r}),s=this.clone(o);return s.spatialReference=e,s}static fromGeometry(e){const t=new y;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof y)t.coordinates=e.coordinates.map(i=>i.clone()),t._exporter=(i,n)=>{const o=e.clone(i);return o.spatialReference=n,o};else switch(e.type){case"point":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?[new m(i.x,i.y,i.z,i.m)]:n?[new m(i.x,i.y,i.z)]:o?[new m(i.x,i.y,null,i.m)]:[new m(i.x,i.y)],t._exporter=(s,a)=>e.hasM?new O(s[0].x,s[0].y,s[0].z,s[0].m,a):new O(s[0].x,s[0].y,s[0].z,a);break}case"multipoint":{const i=e,{hasZ:n,hasM:o}=i;t.coordinates=n&&o?i.points.map(s=>new m(s[0],s[1],s[2],s[3])):n?i.points.map(s=>new m(s[0],s[1],s[2])):o?i.points.map(s=>new m(s[0],s[1],null,s[2])):i.points.map(s=>new m(s[0],s[1])),t._exporter=(s,a)=>e.hasM?new R({points:s.map(l=>[l.x,l.y,l.z,l.m]),hasZ:!0,hasM:!0,spatiaReference:a}):new R(s.map(l=>[l.x,l.y,l.z]),a);break}case"polyline":{const i=e,n=[],o=[],{hasZ:s,hasM:a}=e;let l=0;for(const r of i.paths)if(o.push([l,l+r.length]),l+=r.length,s&&a)for(const c of r)n.push(new m(c[0],c[1],c[2],c[3]));else if(s)for(const c of r)n.push(new m(c[0],c[1],c[2]));else if(a)for(const c of r)n.push(new m(c[0],c[1],null,c[2]));else for(const c of r)n.push(new m(c[0],c[1]));t.coordinates=n,t._exporter=(r,c)=>{const p=e.hasM?r.map(u=>[u.x,u.y,u.z,u.m]):r.map(u=>[u.x,u.y,u.z]),h=o.map(u=>p.slice(u[0],u[1]));return new Q({paths:h,hasM:e.hasM,hasZ:!0,spatialReference:c})};break}}return t}}class m{constructor(e,t,i=null,n=null,o=null,s=null){this.x=e,this.y=t,this.z=i,this.m=n,this.tile=o,this.elevationTile=s}clone(){return new m(this.x,this.y,this.z,this.m)}}class Z{constructor(e,t){this.layer=e,this.options=t}}class J extends Z{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach(t=>{t.tile=null});else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach(n=>{n.tile=t.tileAt(i,n.x,n.y)})}}allElevationTilesFetched(){return!this.geometry.coordinates.some(e=>!e.elevationTile)}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){var t;for(const i of this.geometry.coordinates)!i.elevationTile&&((t=i.tile)!=null&&t.id)&&(i.elevationTile=e[i.tile.id])}remapTiles(e){var t;for(const i of this.geometry.coordinates){const n=(t=i.tile)==null?void 0:t.id;i.tile=n?e[n]:null}}getTilesToFetch(){var i;const e={},t=[];for(const n of this.geometry.coordinates){const o=n.tile;if(!o)continue;const s=(i=n.tile)==null?void 0:i.id;n.elevationTile||!s||e[s]||(e[s]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,()=>{t.tile=null})}}class K extends Z{constructor(e,t,i,n){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=n}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),n=Math.min(i,e);n<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(n)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;if(w(i))return-1;for(let n=t.lods.length-1;n>=0;n--){const o=t.lods[n],s=o.resolution*t.size[0],a=o.resolution*t.size[1];if(Math.ceil(i.width/s)*Math.ceil(i.height/a)<=e)return n}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map(t=>e[t.id]))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach(n=>{if(this._fetchedCandidates.has(n))return void(t&&t(n));let o=!1;e(n,()=>o=!0),o?t&&t(n):this._candidateTiles.push(n)}),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},n=[];for(const s of e){const a=s.id;a&&!i[a]?(i[a]=s,n.push(s)):t&&t(s)}const o=n.sort((s,a)=>s.level-a.level);return o.filter((s,a)=>{for(let l=0;l<a;l++){const r=o[l].extent;if(r&&s.extent&&V(r,s.extent))return t&&t(s),!1}return!0})}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if(w(t))return;const i=this.layer.tileInfo,n=i.lods[e],o=i.tileAt(n.level,t.xmin,t.ymin),s=o.extent;if(w(s))return;const a=n.resolution*i.size[0],l=n.resolution*i.size[1],r=Math.ceil((t.xmax-s[0])/a),c=Math.ceil((t.ymax-s[1])/l);for(let p=0;p<c;p++)for(let h=0;h<r;h++){const u=new P(null,o.level,o.row-p,o.col+h);i.updateTileInfo(u),this._tileIsMasked(u)||this._candidateTiles.push(u)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some(t=>e.extent&&V(t,e.extent))}}function N(f,e=0){let t=f.lods.length-1;if(e>0){const i=e/q(f.spatialReference),n=f.lods.findIndex(o=>o.resolution<i);n===0?t=0:n>0&&(t=n-1)}return t}const v={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0};export{De as ElevationQuery,y as GeometryDescriptor,N as getFinestLodIndex};
