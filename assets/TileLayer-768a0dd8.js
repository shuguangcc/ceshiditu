import{e as o,y as a,s as v,n as g}from"./cast-7928d7aa.js";import{j as _,U as c,h as S,Q as T}from"./request-d3e98716.js";import{a as h}from"./Error-653283ae.js";import{a as b}from"./HandleOwner-e1406413.js";import{r as u}from"./typedArrayUtil-a8b5b3e9.js";import{O as w}from"./MultiOriginJSONSupport-27362d57.js";import{w as O}from"./promiseUtils-6684e352.js";import{k as y,o as $,r as R}from"./Extent-69509002.js";import{b as U}from"./Layer-f0696768.js";import{i as W}from"./APIKeyMixin-34d76a46.js";import{s as P}from"./ArcGISCachedService-3ce6199a.js";import{E as j,y as B,z as I}from"./SublayersOwner-6ae4fb1a.js";import{p as L}from"./ArcGISService-ea748edf.js";import{n as k}from"./BlendLayer-d8293c8d.js";import{o as D}from"./CustomParametersMixin-807d2055.js";import{c as M,f as A}from"./OperationalLayer-24e6fa34.js";import{v as C}from"./PortalLayer-f1a64f99.js";import{p as N}from"./RefreshableLayer-1c078c47.js";import{t as J}from"./ScaleRangeLayer-271178b7.js";import{m as q,g as G,d as E}from"./arcgisLayerUrl-0b2b7691.js";import"./string-cdf077e6.js";import"./ensureType-cf29afa9.js";import"./nextTick-3ee5a785.js";import"./preload-helper-41c905a7.js";import"./reactiveUtils-f41a4e00.js";import"./Ellipsoid-89682c5e.js";import"./geometry-5a216427.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./Evented-515b9d9c.js";import"./Identifiable-aa6d459d.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./TilemapCache-37ec7033.js";import"./TileInfo-34f80a8e.js";import"./unitUtils-47abac71.js";import"./aaBoundingRect-4a760199.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./byteSizeEstimations-f0cab514.js";import"./LRUCache-14115d91.js";import"./MemCache-4b976a8b.js";import"./Version-9baeb7ac.js";import"./Collection-78126e82.js";import"./SimpleObservable-7dcdef1d.js";import"./CollectionFlattener-3dd1f479.js";import"./PopupTemplate-6eb885db.js";import"./Clonable-ba795b08.js";import"./fieldUtils-31bfecd2.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./enumeration-3c281341.js";import"./number-347a3a44.js";import"./locale-30120714.js";import"./UniqueValueRenderer-103ec66d.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./collectionUtils-3831b7c4.js";import"./Portal-8b65c9c4.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./LegendOptions-e65e7a9c.js";import"./diffUtils-1ac65748.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./Graphic-b46e2684.js";import"./jsonUtils-03c4af61.js";import"./compilerUtils-034cacb8.js";import"./lengthUtils-d2d33f94.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./jsonUtils-c56f8821.js";import"./DictionaryLoader-2cf5144e.js";import"./deprecate-b9088bd3.js";import"./heatmapUtils-84e8c43b.js";import"./vec4f64-e407da96.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./FeatureType-c83c5f49.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./FeatureTemplate-746d033e.js";import"./FieldsIndex-aa6dd3fa.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./Query-ff8c2cfb.js";import"./TimeExtent-744afd75.js";import"./popupUtils-07fe66a7.js";import"./sublayerUtils-ba7f61bc.js";import"./parser-2b40deea.js";import"./mat4f32-77b3d8ac.js";import"./mat4-44a0988f.js";import"./ElevationInfo-ce9cacc2.js";import"./asyncUtils-62e8a185.js";import"./PortalItem-aa42c739.js";import"./assets-0b172f07.js";const d=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let t=class extends k(j(J(M(C(P(B(L(w(b(N(W(D(U))))))))))))){constructor(...r){super(...r),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(r,e){return typeof r=="string"?{url:r,...e}:r}load(r){const e=u(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch(O).then(()=>this._fetchService(e))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=(e=this.parsedUrl)==null?void 0:e.path.toLowerCase();return r?this._getDefaultAttribution(this._getMapName(r)):null}readSpatialReference(r,e){return(r=r||e.tileInfo&&e.tileInfo.spatialReference)&&y.fromJSON(r)}writeSublayers(r,e,i,s){if(!this.loaded||!r)return;const n=r.slice().reverse().flatten(({sublayers:l})=>l&&l.toArray().reverse()).toArray(),p=[],m={writeSublayerStructure:!1,...s};n.forEach(l=>{const f=l.write({},m);p.push(f)}),p.some(l=>Object.keys(l).length>1)&&(e.layers=p)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl.path)}castTileServers(r){return Array.isArray(r)?r.map(e=>_(e).path):null}fetchTile(r,e,i,s={}){const{signal:n}=s,p=this.getTileUrl(r,e,i),m={responseType:"image",signal:n,query:{...this.refreshParameters}};return c(p,m).then(l=>l.data)}async fetchImageBitmapTile(r,e,i,s={}){const{signal:n}=s,p=this.getTileUrl(r,e,i),m={responseType:"blob",signal:n,query:{...this.refreshParameters}},l=await c(p,m);return createImageBitmap(l.data)}getTileUrl(r,e,i){const s=!this.tilemapCache&&this.supportsBlankTile,n=S({...this.parsedUrl.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),p=this.tileServers;return`${p&&p.length?p[e%p.length]:this.parsedUrl.path}/tile/${r}/${e}/${i}${n?"?"+n:""}`}_fetchService(r){return new Promise((e,i)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void e({data:this.sourceJSON})}if(!this.parsedUrl)throw new h("tile-layer:undefined-url","layer's url is not defined");const s=q(this.parsedUrl.path);if(u(s)&&s.serverType==="ImageServer")throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(e,i)}).then(e=>{if(e.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=e.data,this.read(e.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!G(this.url))return this._fetchServerVersion(this.url,r).then(i=>{this.read({currentVersion:i})}).catch(()=>{})})}_fetchServerVersion(r,e){if(!E(r))return Promise.reject();const i=r.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(i,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(s=>{if(s.data&&s.data.currentVersion)return s.data.currentVersion;throw new h("tile-layer:version-not-available")})}_getMapName(r){const e=r.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return e&&e[2]}_getDefaultAttribution(r){if(!r)return;let e;r=r.toLowerCase();for(let i=0,s=d.length;i<s;i++)if(e=d[i],e.toLowerCase().includes(r))return T("//static.arcgis.com/attribution/"+e)}_getDefaultTileServers(r){const e=r.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,i=r.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return e||i?[r,r.replace(e?/server\.arcgisonline/i:/services\.arcgisonline/i,e?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};o([a({readOnly:!0})],t.prototype,"attributionDataUrl",null),o([a({type:["show","hide","hide-children"]})],t.prototype,"listMode",void 0),o([a({json:{read:!0,write:!0}})],t.prototype,"blendMode",void 0),o([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],t.prototype,"isReference",void 0),o([a({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],t.prototype,"operationalLayerType",void 0),o([a({type:Boolean})],t.prototype,"resampling",void 0),o([a()],t.prototype,"sourceJSON",void 0),o([a({type:y})],t.prototype,"spatialReference",void 0),o([$("spatialReference",["spatialReference","tileInfo"])],t.prototype,"readSpatialReference",null),o([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),o([a({readOnly:!0})],t.prototype,"sublayers",void 0),o([R("sublayers",{layers:{type:[I]}})],t.prototype,"writeSublayers",null),o([a({json:{read:!1,write:!1}})],t.prototype,"popupEnabled",void 0),o([a()],t.prototype,"tileServers",null),o([v("tileServers")],t.prototype,"castTileServers",null),o([a({readOnly:!0,json:{read:!1}})],t.prototype,"type",void 0),o([a(A)],t.prototype,"url",void 0),t=o([g("esri.layers.TileLayer")],t),t.prototype.fetchTile.__isDefault__=!0;const xe=t;export{xe as default};
