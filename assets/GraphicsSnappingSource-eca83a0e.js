import{m as E,e as s,y as n,n as k}from"./cast-7928d7aa.js";import{r as a,t as c,v as b}from"./typedArrayUtil-a8b5b3e9.js";import{j as F}from"./asyncUtils-62e8a185.js";import{a as $}from"./HandleOwner-e1406413.js";import{L as A,f as d,y as C}from"./promiseUtils-6684e352.js";import{h as f,l as G}from"./reactiveUtils-f41a4e00.js";import"./ensureType-cf29afa9.js";import{v as R}from"./Polyline-bf268e7b.js";import{_ as I,A as P,r as x}from"./projection-d7b57a6c.js";import{p as H}from"./normalizeUtilsSync-9c84b89e.js";import{i as O}from"./typeUtils-eb9416d0.js";import{n as Z}from"./featureConversionUtils-01cdde8a.js";import{s as z}from"./OptimizedFeature-3de538c1.js";import{u as L}from"./FeatureStore-b1ba4c29.js";import{Y as M}from"./QueryEngine-a5c074c3.js";import{y as W,E as j}from"./elevationInfoUtils-427916a5.js";import{B as _}from"./utils-725f8b4e.js";import{dK as q,dJ as T}from"./index-455b69b8.js";import{r as B,a as J}from"./queryEngineUtils-db3552dc.js";import{r as v,a as U,n as S}from"./symbologySnappingCandidates-3493a4d4.js";import"./string-cdf077e6.js";import"./Error-653283ae.js";import"./nextTick-3ee5a785.js";import"./Extent-69509002.js";import"./Ellipsoid-89682c5e.js";import"./preload-helper-41c905a7.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./unitUtils-47abac71.js";import"./jsonMap-c1f958cf.js";import"./SimpleObservable-7dcdef1d.js";import"./mat4-44a0988f.js";import"./assets-0b172f07.js";import"./request-d3e98716.js";import"./aaBoundingRect-4a760199.js";import"./zscale-1e1fc911.js";import"./jsonUtils-03c4af61.js";import"./normalizeUtils-ee4bf39f.js";import"./geometry-5a216427.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Evented-515b9d9c.js";import"./aaBoundingBox-fc742a4e.js";import"./PooledRBush-26ba8fba.js";import"./quickselect-322ec8e1.js";import"./optimizedFeatureQueryEngineAdapter-4b9881eb.js";import"./centroid-13995b22.js";import"./MemCache-4b976a8b.js";import"./QueryEngineResult-665bf7fb.js";import"./quantizationUtils-33aba427.js";import"./ItemCache-ee28c7ba.js";import"./WhereClause-2b5b05b2.js";import"./utils-30a9a7e0.js";import"./generateRendererUtils-a996108f.js";import"./colorRamps-3a8ac20b.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./enumeration-3c281341.js";import"./Symbol-fc4312a4.js";import"./utils-1f4fcfec.js";import"./json-48e3ea08.js";import"./fieldUtils-31bfecd2.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-b43dc94c.js";import"./FieldsIndex-aa6dd3fa.js";import"./Scheduler-8433672d.js";import"./ElevationInfo-ce9cacc2.js";import"./lengthUtils-d2d33f94.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./Collection-78126e82.js";import"./collectionUtils-3831b7c4.js";import"./Portal-8b65c9c4.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./locale-30120714.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./Clonable-ba795b08.js";import"./BlendLayer-d8293c8d.js";import"./parser-2b40deea.js";import"./mat4f32-77b3d8ac.js";import"./cimSymbolUtils-2e4dde89.js";import"./utils-c81a5c52.js";import"./Basemap-a8f7f439.js";import"./deprecate-b9088bd3.js";import"./loadAll-7fd968fe.js";import"./PortalItem-aa42c739.js";import"./messages-be07754e.js";import"./writeUtils-067c4f82.js";import"./layerUtils-034678f6.js";import"./compilerUtils-034cacb8.js";import"./CollectionFlattener-3dd1f479.js";import"./TablesMixin-e7a6aab1.js";import"./Layer-f0696768.js";import"./Identifiable-aa6d459d.js";import"./Graphic-b46e2684.js";import"./PopupTemplate-6eb885db.js";import"./number-347a3a44.js";import"./Cyclical-b66238c6.js";import"./workers-898a7c4c.js";import"./Connection-a681777e.js";import"./Queue-3a0c055d.js";import"./intl-f1e98361.js";import"./TileInfo-34f80a8e.js";import"./widget-f7489a3f.js";import"./uuid-73213768.js";import"./dom-5b7af1bf.js";import"./byteSizeEstimations-f0cab514.js";import"./executeQueryJSON-bcd96e1a.js";import"./query-922e6fbf.js";import"./pbfQueryUtils-72f9b45b.js";import"./pbf-e1a6c35b.js";import"./queryZScale-d9d8ef40.js";import"./FeatureSet-0573546e.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./Query-ff8c2cfb.js";import"./TimeExtent-744afd75.js";import"./RelationshipQuery-db5fcd0c.js";import"./LegendOptions-e65e7a9c.js";import"./jsonUtils-c56f8821.js";import"./UniqueValueRenderer-103ec66d.js";import"./diffUtils-1ac65748.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./DictionaryLoader-2cf5144e.js";import"./LRUCache-14115d91.js";import"./heatmapUtils-84e8c43b.js";import"./vec4f64-e407da96.js";import"./TopFeaturesQuery-785f5453.js";import"./FeatureLayer-a9f3e6ec.js";import"./MultiOriginJSONSupport-27362d57.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./FeatureLayerBase-aebdf2da.js";import"./HeightModelInfo-22ad72d7.js";import"./arcgisLayerUrl-0b2b7691.js";import"./OperationalLayer-24e6fa34.js";import"./editsZScale-2015e7db.js";import"./APIKeyMixin-34d76a46.js";import"./ArcGISService-ea748edf.js";import"./CustomParametersMixin-807d2055.js";import"./EditBusLayer-40671d1a.js";import"./FeatureReductionLayer-4077b2ae.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-e7edf19c.js";import"./PortalLayer-f1a64f99.js";import"./RefreshableLayer-1c078c47.js";import"./ScaleRangeLayer-271178b7.js";import"./TemporalLayer-39c07299.js";import"./TimeInfo-c89d0ef4.js";import"./FeatureTemplate-746d033e.js";import"./FeatureType-c83c5f49.js";import"./fieldProperties-7547b373.js";import"./versionUtils-92993d41.js";import"./styleUtils-da81b13f.js";import"./popupUtils-07fe66a7.js";import"./colorUtils-82440b70.js";import"./mat2d-d0b91e3e.js";import"./GraphicsLayer-10573c27.js";import"./ViewingMode-5d7d590b.js";import"./enums-0fc02184.js";import"./vec2-2cef68de.js";import"./vec2f64-30dc1443.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./TileStrategy-4189758f.js";import"./TileStore-787dbea4.js";import"./TileKey-0750ad58.js";import"./rbush-8e36784a.js";import"./capabilities-3636c6a4.js";import"./context-util-1e3c8cfc.js";import"./sphere-4f5e644f.js";import"./mat3f64-c6305894.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./lineSegment-e6f72ff2.js";import"./plane-45609588.js";import"./scaleUtils-b32a50d8.js";import"./ElevationSamplerData-7decf898.js";import"./PhysicallyBasedRendering.glsl-a986c926.js";import"./View.glsl-8b12b8c2.js";import"./ShaderBuilder-93e8045e.js";import"./FloatPassUniform-d2dfc562.js";import"./Float4PassUniform-3a47b7b3.js";import"./RgbaFloatEncoding.glsl-6036ca34.js";import"./Texture2DPassUniform-6e8ae673.js";import"./vec3f32-c9aa289f.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-22924c6f.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-0c0898f0.js";import"./ReadLinearDepth.glsl-7ff30f7d.js";import"./WaterSurface.glsl-fc8a5726.js";import"./ForwardLinearDepth.glsl-36f9eb3b.js";import"./Matrix3PassUniform-da8eddae.js";import"./Slice.glsl-a612de15.js";import"./Transform.glsl-f15542a7.js";import"./OutputHighlight.glsl-7364b03b.js";import"./MultipassTerrainTest.glsl-e79d40de.js";import"./NormalUtils.glsl-a59958d7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-cd195b0e.js";import"./EvaluateSceneLighting.glsl-3bbc6edf.js";import"./VisualVariablePassParameters-5807c7dc.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./FramebufferObject-50e1b68f.js";import"./Texture-e79b14e7.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-c6f142fc.js";import"./ScreenSpacePass-00f8c8a4.js";import"./SSAO.glsl-6f3b4065.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-80cf9a21.js";import"./VerticalOffset.glsl-86460edb.js";import"./objectResourceUtils-ef6e3cdf.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-646ba1de.js";import"./vec33-ce3aa99b.js";import"./DefaultMaterial_COLOR_GAMMA-9831d979.js";import"./types-e1c0a5bf.js";import"./Version-9baeb7ac.js";import"./quat-5b263584.js";import"./Texture-bbae5d9d.js";import"./TextureOnly.glsl-18701a3b.js";import"./InterleavedLayout-5e9cf734.js";import"./MixExternalColor.glsl-25f0049c.js";import"./symbolColorUtils-604c5345.js";import"./ObjectAndLayerIdColor.glsl-73c19386.js";import"./OutputDepth.glsl-179f1d8f.js";import"./VisualVariables.glsl-b8290512.js";import"./DiscardOrAdjustAlphaBlend.glsl-5f837994.js";import"./Normals.glsl-90e28525.js";import"./DefaultMaterial.glsl-b4f4cbc5.js";import"./VertexColor.glsl-db21b96c.js";import"./DefaultTechniqueConfiguration-e8962072.js";import"./RealisticTree.glsl-2b30ed32.js";import"./edgeProcessing-3ca548e1.js";import"./deduplicate-b0bc48cc.js";import"./projection-aa2a8986.js";import"./Octree-1a841545.js";import"./HUDMaterial.glsl-4bf3c7df.js";import"./sdfPrimitives-a24e9cb2.js";import"./floatRGBA-fa8308d2.js";import"./dehydratedFeatures-4eeb381a.js";import"./labelFormatUtils-4d730eaa.js";import"./I3SUtil-3ffd3baa.js";import"./I3SBinaryReader-3d2c2faa.js";import"./LineCallout.glsl-a0056465.js";import"./earcut-58237617.js";import"./MeshComponent-f50df6af.js";import"./MarkerSizing.glsl-c6fa192a.js";import"./RibbonLine.glsl-2a3b4d4e.js";import"./LineStipple.glsl-de782d6a.js";import"./callExpressionWithFeature-a7532499.js";import"./LineMarker.glsl-8f444621.js";import"./NativeLine.glsl-cdbbf172.js";import"./Path.glsl-60b36878.js";import"./ColorMaterial.glsl-8310ffb3.js";import"./Pattern.glsl-d3388745.js";import"./EffectView-d3bf37ed.js";import"./LercDecoder-73115fd2.js";import"./config-1337d16e.js";import"./workerHelper-c6d4a8cb.js";import"./Subtype-5b01b21f.js";import"./datetime-4f774298.js";import"./ExportImageParameters-f328a234.js";import"./sublayerUtils-ba7f61bc.js";import"./webStyleSymbolUtils-55ed91cd.js";import"./enums-4b2a86a0.js";import"./VertexSnappingCandidate-6fb04b2b.js";const w="graphics-collections";let m=class extends $(E){constructor(t){super(t),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0}get updating(){return this.updatingHandles.updating}get _hasZ(){const t=this.view;return a(t)&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:t}=this,{layer:o}=this.layerSource,r=a(t)&&t.type==="3d";if(!r||o.type==="map-notes")return v();const i=async(p,e)=>(await C(t.whenLayerView(o),e)).elevationAlignPointsInFeatures(p,e);return v(r,{elevationInfo:o.elevationInfo,alignPointsInFeatures:i,spatialReference:t.spatialReference})}get _snappingElevationFilter(){const{view:t}=this,o=a(t)&&t.type==="3d"&&this.layerSource.layer.type!=="map-notes";return U(o)}get _symbologySnappingFetcher(){const{view:t}=this,{layer:o}=this.layerSource,r=a(t)&&t.type==="3d",i=this._extrudedPolygonSymbolsCount>0;return r&&o.type!=="map-notes"&&i?S(i,async(p,e)=>{const l=await t.whenLayerView(o);return d(e),l.queryForSymbologySnapping({candidates:p,spatialReference:t.spatialReference},e)}):S()}destroy(){for(const t of this._pendingAdds)t.task.abort();this._pendingAdds.length=0,this._mapSources(t=>this._destroySource(t))}initialize(){this.updatingHandles.add(()=>this.getGraphicsLayers(),r=>{this.updatingHandles.removeHandles(w);for(const i of r)this._addMany(i.graphics.toArray()),this.handles.add([i.on("graphic-update",p=>this._onGraphicUpdate(p)),this.updatingHandles.addOnCollectionChange(()=>i.graphics,p=>this._onGraphicsChanged(p))],w)},f);const{view:t}=this,{layer:o}=this.layerSource;a(t)&&t.type==="3d"&&o.type!=="map-notes"&&this.addHandles([t.elevationProvider.on("elevation-change",({context:r})=>{W(r,o.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),G(()=>o.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),f)])}async fetchCandidates(t,o){const{point:r,coordinateHelper:i,elevationInfo:p}=t,e=await A(this._mapSources(y=>this._fetchCandidatesForSource(y,t,o)));d(o);const l=i.hasZ()?j:p,u=this._getGroundElevation,g=e.flat().map(y=>B(y,i,l,u));return q(r,g,i),g}get _getGroundElevation(){return J(this.view)}async _fetchCandidatesForSource(t,o,r){const i=T(o),p=await t.queryEngine.executeQueryForSnapping(i,r);d(r);const e=await this._snappingElevationAligner.alignCandidates(p.candidates,r);d(r);const l=await this._symbologySnappingFetcher.fetch(e,r);d(r);const u=l.length===0?e:[...e,...l];return this._snappingElevationFilter.filter(i,u)}refresh(){}_onGraphicUpdate(t){if(this.getGraphicsLayers().some(o=>o.graphics.includes(t.graphic)))switch(t.property){case"geometry":case"visible":this._remove(t.graphic),this._addMany([t.graphic])}}_onGraphicsChanged(t){for(const o of t.removed)this._remove(o);this._addMany(t.added)}_addMany(t){const o=[],r=new Map;for(const i of t)c(i.geometry)||(this._needsInitializeProjection(i.geometry.spatialReference)?(o.push(i.geometry.spatialReference),r.set(i.uid,i)):this._add(i));this._createPendingAdd(o,r)}_createPendingAdd(t,o){if(!t.length)return;const r=F(async e=>{await I(t.map(l=>({source:l,dest:this.spatialReference})),{signal:e}),this._markLoadedSpatialReferences(t);for(const[,l]of o)this._add(l)});this.updatingHandles.addPromise(r.promise);const i={task:r,graphics:o},p=()=>b(this._pendingAdds,i);r.promise.then(p,p),this._pendingAdds.push(i)}_markLoadedSpatialReferences(t){for(const o of t)o.wkid!=null&&this._loadedWkids.add(o.wkid),o.wkt!=null&&this._loadedWkts.add(o.wkt)}_add(t){if(c(t.geometry)||!t.visible)return;let o=t.geometry;if(o.type==="mesh")return;o.type==="extent"&&(o=R.fromExtent(o));const r=this._ensureSource(o.type);if(c(r))return;const i=this._createOptimizedFeature(t.uid,o);c(i)||(r.featureStore.add(i),_(t.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(t){return(t.wkid==null||!this._loadedWkids.has(t.wkid))&&(t.wkt==null||!this._loadedWkts.has(t.wkt))&&!P(t,this.spatialReference)}_createOptimizedFeature(t,o){const r=x(H(o),this.spatialReference);if(!r)return null;const i=this._ensureGeometryHasZ(r),p=Z(i,this._hasZ,!1);return new z(p,{[h]:t},null,t)}_ensureGeometryHasZ(t){if(!this._hasZ)return t;const o=i=>{for(;i.length<3;)i.push(0)},r=t.clone();switch(r.hasZ=!0,r.type){case"point":r.z=r.z??0;break;case"multipoint":r.points.forEach(o);break;case"polyline":r.paths.forEach(i=>i.forEach(o));break;case"polygon":r.rings.forEach(i=>i.forEach(o))}return r}_ensureSource(t){const o=this._sources[t];if(a(o))return o;const r=this._createSource(t);return this._sources[t]=r,r}_createSource(t){const o=O.toJSON(t),r=this._hasZ,i=new L({geometryType:o,hasZ:r,hasM:!1});return{featureStore:i,queryEngine:new M({featureStore:i,fields:[{name:h,type:"esriFieldTypeOID",alias:h}],geometryType:o,hasM:!1,hasZ:r,objectIdField:h,spatialReference:this.spatialReference,scheduler:a(this.view)&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:t}}_remove(t){this._mapSources(o=>this._removeFromSource(o,t));for(const o of this._pendingAdds)o.graphics.delete(t.uid),o.graphics.size===0&&o.task.abort()}_removeFromSource(t,o){const r=o.uid;t.featureStore.has(r)&&(t.featureStore.removeById(o.uid),_(o.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(t){t.queryEngine.destroy(),this._sources[t.type]=null}_mapSources(t){const{point:o,polygon:r,polyline:i,multipoint:p}=this._sources,e=[];return a(o)&&e.push(t(o)),a(r)&&e.push(t(r)),a(i)&&e.push(t(i)),a(p)&&e.push(t(p)),e}};s([n()],m.prototype,"getGraphicsLayers",void 0),s([n({constructOnly:!0})],m.prototype,"layerSource",void 0),s([n({constructOnly:!0})],m.prototype,"spatialReference",void 0),s([n({constructOnly:!0})],m.prototype,"view",void 0),s([n({readOnly:!0})],m.prototype,"updating",null),s([n({readOnly:!0})],m.prototype,"availability",void 0),s([n()],m.prototype,"_hasZ",null),s([n()],m.prototype,"_snappingElevationAligner",null),s([n()],m.prototype,"_snappingElevationFilter",null),s([n()],m.prototype,"_symbologySnappingFetcher",null),s([n()],m.prototype,"_extrudedPolygonSymbolsCount",void 0),s([n()],m.prototype,"_getGroundElevation",null),m=s([k("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],m);const h="OBJECTID";export{m as GraphicsSnappingSource};
