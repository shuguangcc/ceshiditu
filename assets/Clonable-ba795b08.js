import{e as d,n as A,K as b,C as t,m as C}from"./cast-7928d7aa.js";import{m as O}from"./string-cdf077e6.js";import"./Error-653283ae.js";import{f as U}from"./typedArrayUtil-a8b5b3e9.js";const h=f=>{let c=class extends f{clone(){var $;const m=U(b(this),"unable to clone instance of non-accessor class"),p=m.metadatas,i=m.store,u={},a=new Map;for(const o in p){const s=p[o],e=i==null?void 0:i.originOf(o),n=s.clonable;if(s.readOnly||n===!1||e!==t.USER&&e!==t.DEFAULTS&&e!==t.WEB_MAP&&e!==t.WEB_SCENE)continue;const r=this[o];let l=null;l=typeof n=="function"?n(r):n==="reference"?r:O(r),r!=null&&l==null||(e===t.DEFAULTS?a.set(o,l):u[o]=l)}const E=new(Object.getPrototypeOf(this)).constructor(u);if(a.size){const o=($=b(E))==null?void 0:$.store;if(o)for(const[s,e]of a)o.set(s,e,t.DEFAULTS)}return E}};return c=d([A("esri.core.Clonable")],c),c};let S=class extends h(C){};S=d([A("esri.core.Clonable")],S);export{h as i,S as l};
