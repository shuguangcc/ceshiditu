import{t as k,e as d,y as v,n as F}from"./cast-7928d7aa.js";import"./geometry-5a216427.js";import{g as G}from"./Graphic-b46e2684.js";import{j as D}from"./asyncUtils-62e8a185.js";import{j as I}from"./Collection-78126e82.js";import{s as U,a as L}from"./Error-653283ae.js";import{n as z}from"./Evented-515b9d9c.js";import{s as V,t as u,r as g,p as O,q as P}from"./typedArrayUtil-a8b5b3e9.js";import{b as C}from"./quantityFormatUtils-ba1f6cd1.js";import{f as j,P as S,l as q,w as J}from"./reactiveUtils-f41a4e00.js";import{c as R}from"./screenUtils-410d12c0.js";import"./ensureType-cf29afa9.js";import{j as Q,m as B,r as M,x as T}from"./Polyline-bf268e7b.js";import{h as K}from"./GraphicsLayer-10573c27.js";import{y as b}from"./symbols-fa594797.js";import{l as N}from"./ViewingMode-5d7d590b.js";import{cJ as W,c7 as H,aQ as X,bq as Y,c3 as Z,cI as tt,br as et,cH as it,P as ot}from"./index-455b69b8.js";import{h as rt,D as st}from"./GraphicMover-5e891e04.js";import{h as $,c as pt,b as nt}from"./automaticLengthMeasurementUtils-24c52b73.js";import{r as at,n as ht}from"./TranslateTooltipInfos-4fb7abcc.js";import{u as ct}from"./automaticAreaMeasurementUtils-d516ac98.js";import{w as f}from"./Extent-69509002.js";import"./string-cdf077e6.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-6684e352.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./PopupTemplate-6eb885db.js";import"./Clonable-ba795b08.js";import"./fieldUtils-31bfecd2.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./enumeration-3c281341.js";import"./number-347a3a44.js";import"./locale-30120714.js";import"./Identifiable-aa6d459d.js";import"./jsonUtils-03c4af61.js";import"./SimpleObservable-7dcdef1d.js";import"./unitUtils-47abac71.js";import"./Ellipsoid-89682c5e.js";import"./collectionUtils-3831b7c4.js";import"./HandleOwner-e1406413.js";import"./Layer-f0696768.js";import"./request-d3e98716.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./BlendLayer-d8293c8d.js";import"./parser-2b40deea.js";import"./colorUtils-639f4d25.js";import"./mat4f32-77b3d8ac.js";import"./mat4-44a0988f.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./ScaleRangeLayer-271178b7.js";import"./ElevationInfo-ce9cacc2.js";import"./lengthUtils-d2d33f94.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./Color-a42a8267.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec4-790471c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./aaBoundingRect-4a760199.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./Portal-8b65c9c4.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./Basemap-a8f7f439.js";import"./deprecate-b9088bd3.js";import"./loadAll-7fd968fe.js";import"./PortalItem-aa42c739.js";import"./assets-0b172f07.js";import"./messages-be07754e.js";import"./writeUtils-067c4f82.js";import"./layerUtils-034678f6.js";import"./compilerUtils-034cacb8.js";import"./CollectionFlattener-3dd1f479.js";import"./TablesMixin-e7a6aab1.js";import"./Cyclical-b66238c6.js";import"./workers-898a7c4c.js";import"./Connection-a681777e.js";import"./Queue-3a0c055d.js";import"./intl-f1e98361.js";import"./projection-d7b57a6c.js";import"./zscale-1e1fc911.js";import"./TileInfo-34f80a8e.js";import"./widget-f7489a3f.js";import"./uuid-73213768.js";import"./dom-5b7af1bf.js";import"./byteSizeEstimations-f0cab514.js";import"./executeQueryJSON-bcd96e1a.js";import"./normalizeUtils-ee4bf39f.js";import"./query-922e6fbf.js";import"./pbfQueryUtils-72f9b45b.js";import"./pbf-e1a6c35b.js";import"./OptimizedFeature-3de538c1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-d9d8ef40.js";import"./FeatureSet-0573546e.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./Query-ff8c2cfb.js";import"./TimeExtent-744afd75.js";import"./RelationshipQuery-db5fcd0c.js";import"./LegendOptions-e65e7a9c.js";import"./utils-725f8b4e.js";import"./ItemCache-ee28c7ba.js";import"./MemCache-4b976a8b.js";import"./cimSymbolUtils-2e4dde89.js";import"./utils-c81a5c52.js";import"./jsonUtils-c56f8821.js";import"./UniqueValueRenderer-103ec66d.js";import"./diffUtils-1ac65748.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./DictionaryLoader-2cf5144e.js";import"./LRUCache-14115d91.js";import"./heatmapUtils-84e8c43b.js";import"./vec4f64-e407da96.js";import"./featureConversionUtils-01cdde8a.js";import"./TopFeaturesQuery-785f5453.js";import"./FeatureLayer-a9f3e6ec.js";import"./MultiOriginJSONSupport-27362d57.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./FeatureLayerBase-aebdf2da.js";import"./HeightModelInfo-22ad72d7.js";import"./arcgisLayerUrl-0b2b7691.js";import"./OperationalLayer-24e6fa34.js";import"./editsZScale-2015e7db.js";import"./APIKeyMixin-34d76a46.js";import"./ArcGISService-ea748edf.js";import"./CustomParametersMixin-807d2055.js";import"./EditBusLayer-40671d1a.js";import"./FeatureReductionLayer-4077b2ae.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-e7edf19c.js";import"./PortalLayer-f1a64f99.js";import"./RefreshableLayer-1c078c47.js";import"./TemporalLayer-39c07299.js";import"./TimeInfo-c89d0ef4.js";import"./FeatureTemplate-746d033e.js";import"./FeatureType-c83c5f49.js";import"./fieldProperties-7547b373.js";import"./FieldsIndex-aa6dd3fa.js";import"./versionUtils-92993d41.js";import"./styleUtils-da81b13f.js";import"./popupUtils-07fe66a7.js";import"./colorUtils-82440b70.js";import"./mat2d-d0b91e3e.js";import"./Scheduler-8433672d.js";import"./enums-0fc02184.js";import"./vec2-2cef68de.js";import"./vec2f64-30dc1443.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./TileStrategy-4189758f.js";import"./TileStore-787dbea4.js";import"./TileKey-0750ad58.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./capabilities-3636c6a4.js";import"./context-util-1e3c8cfc.js";import"./sphere-4f5e644f.js";import"./mat3f64-c6305894.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./lineSegment-e6f72ff2.js";import"./plane-45609588.js";import"./scaleUtils-b32a50d8.js";import"./ElevationSamplerData-7decf898.js";import"./PhysicallyBasedRendering.glsl-a986c926.js";import"./View.glsl-8b12b8c2.js";import"./ShaderBuilder-93e8045e.js";import"./FloatPassUniform-d2dfc562.js";import"./Float4PassUniform-3a47b7b3.js";import"./RgbaFloatEncoding.glsl-6036ca34.js";import"./Texture2DPassUniform-6e8ae673.js";import"./vec3f32-c9aa289f.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-22924c6f.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-0c0898f0.js";import"./ReadLinearDepth.glsl-7ff30f7d.js";import"./WaterSurface.glsl-fc8a5726.js";import"./ForwardLinearDepth.glsl-36f9eb3b.js";import"./Matrix3PassUniform-da8eddae.js";import"./Slice.glsl-a612de15.js";import"./Transform.glsl-f15542a7.js";import"./OutputHighlight.glsl-7364b03b.js";import"./MultipassTerrainTest.glsl-e79d40de.js";import"./NormalUtils.glsl-a59958d7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-cd195b0e.js";import"./EvaluateSceneLighting.glsl-3bbc6edf.js";import"./VisualVariablePassParameters-5807c7dc.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./FramebufferObject-50e1b68f.js";import"./Texture-e79b14e7.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-c6f142fc.js";import"./ScreenSpacePass-00f8c8a4.js";import"./SSAO.glsl-6f3b4065.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-80cf9a21.js";import"./VerticalOffset.glsl-86460edb.js";import"./objectResourceUtils-ef6e3cdf.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-646ba1de.js";import"./vec33-ce3aa99b.js";import"./DefaultMaterial_COLOR_GAMMA-9831d979.js";import"./types-e1c0a5bf.js";import"./Version-9baeb7ac.js";import"./quat-5b263584.js";import"./Texture-bbae5d9d.js";import"./TextureOnly.glsl-18701a3b.js";import"./InterleavedLayout-5e9cf734.js";import"./MixExternalColor.glsl-25f0049c.js";import"./symbolColorUtils-604c5345.js";import"./ObjectAndLayerIdColor.glsl-73c19386.js";import"./OutputDepth.glsl-179f1d8f.js";import"./VisualVariables.glsl-b8290512.js";import"./DiscardOrAdjustAlphaBlend.glsl-5f837994.js";import"./Normals.glsl-90e28525.js";import"./DefaultMaterial.glsl-b4f4cbc5.js";import"./VertexColor.glsl-db21b96c.js";import"./DefaultTechniqueConfiguration-e8962072.js";import"./RealisticTree.glsl-2b30ed32.js";import"./edgeProcessing-3ca548e1.js";import"./deduplicate-b0bc48cc.js";import"./projection-aa2a8986.js";import"./Octree-1a841545.js";import"./HUDMaterial.glsl-4bf3c7df.js";import"./sdfPrimitives-a24e9cb2.js";import"./floatRGBA-fa8308d2.js";import"./dehydratedFeatures-4eeb381a.js";import"./quantizationUtils-33aba427.js";import"./labelFormatUtils-4d730eaa.js";import"./I3SUtil-3ffd3baa.js";import"./I3SBinaryReader-3d2c2faa.js";import"./LineCallout.glsl-a0056465.js";import"./earcut-58237617.js";import"./QueryEngineResult-665bf7fb.js";import"./WhereClause-2b5b05b2.js";import"./utils-30a9a7e0.js";import"./generateRendererUtils-a996108f.js";import"./utils-1f4fcfec.js";import"./json-48e3ea08.js";import"./MeshComponent-f50df6af.js";import"./MarkerSizing.glsl-c6fa192a.js";import"./RibbonLine.glsl-2a3b4d4e.js";import"./LineStipple.glsl-de782d6a.js";import"./callExpressionWithFeature-a7532499.js";import"./LineMarker.glsl-8f444621.js";import"./NativeLine.glsl-cdbbf172.js";import"./Path.glsl-60b36878.js";import"./ColorMaterial.glsl-8310ffb3.js";import"./Pattern.glsl-d3388745.js";import"./EffectView-d3bf37ed.js";import"./LercDecoder-73115fd2.js";import"./config-1337d16e.js";import"./workerHelper-c6d4a8cb.js";import"./Subtype-5b01b21f.js";import"./datetime-4f774298.js";import"./elevationInfoUtils-427916a5.js";import"./ExportImageParameters-f328a234.js";import"./sublayerUtils-ba7f61bc.js";import"./webStyleSymbolUtils-55ed91cd.js";import"./enums-4b2a86a0.js";import"./GraphicManipulator-7826bc29.js";import"./euclideanLengthMeasurementUtils-3ebdcf15.js";import"./measurementUtils-c86e49dc.js";import"./geometryEngine-62e3ccf4.js";import"./geometryEngineBase-3dd302e0.js";import"./hydrated-be86c8b3.js";import"./euclideanAreaMeasurementUtils-0db711c3.js";class mt{constructor(e,i,o){this.graphic=e,this.mover=i,this.selected=o,this.type="reshape-start"}}class lt{constructor(e,i,o){this.graphic=e,this.mover=i,this.selected=o,this.type="reshape"}}class dt{constructor(e,i,o){this.graphic=e,this.mover=i,this.selected=o,this.type="reshape-stop"}}class vt{constructor(e,i,o){this.mover=e,this.dx=i,this.dy=o,this.type="move-start"}}class _t{constructor(e,i,o){this.mover=e,this.dx=i,this.dy=o,this.type="move"}}class yt{constructor(e,i,o){this.mover=e,this.dx=i,this.dy=o,this.type="move-stop"}}class gt{constructor(e){this.added=e,this.type="vertex-select"}}class ut{constructor(e){this.removed=e,this.type="vertex-deselect"}}class xt{constructor(e,i,o,r){this.added=e,this.graphic=i,this.oldGraphic=o,this.vertices=r,this.type="vertex-add"}}class ft{constructor(e,i,o,r){this.removed=e,this.graphic=i,this.oldGraphic=o,this.vertices=r,this.type="vertex-remove"}}const _=W.reshapeGraphics,E={vertices:{default:new b({style:"circle",size:_.vertex.size,color:_.vertex.color,outline:{color:_.vertex.outlineColor,width:1}}),hover:new b({style:"circle",size:_.vertex.hoverSize,color:_.vertex.hoverColor,outline:{color:_.vertex.hoverOutlineColor,width:1}}),selected:new b({style:"circle",size:_.selected.size,color:_.selected.color,outline:{color:_.selected.outlineColor,width:1}})},midpoints:{default:new b({style:"circle",size:_.midpoint.size,color:_.midpoint.color,outline:{color:_.midpoint.outlineColor,width:1}}),hover:new b({style:"circle",size:_.midpoint.size,color:_.midpoint.color,outline:{color:_.midpoint.outlineColor,width:1}})}};let l=class extends z.EventedAccessor{constructor(t){super(t),this._activeOperationInfo=null,this._editGeometryOperations=null,this._handles=new k,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingTask=null,this._stagedVertex=null,this._tooltip=null,this._viewHandles=new k,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.layer=null,this.midpointGraphics=new I,this.midpointSymbol=new b({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=[],this.snappingManager=null,this.tooltipOptions=new H,this.type="reshape",this.vertexGraphics=new I,this.view=null}initialize(){const t=this.view;this._highlightHelper=new rt({view:t}),this._setup(),this._handles.add([j(()=>t==null?void 0:t.ready,()=>{const{layer:e,view:i}=this;it(i,e),this._viewHandles.add(i.on("key-down",o=>this._keyDownHandler(o),ot.TOOL))},{once:!0,initial:!0}),S(()=>this.graphic,()=>this.refresh()),S(()=>this.layer,(e,i)=>{i&&(this._clearSelection(),this._resetGraphics(i)),this.refresh()}),S(()=>this.enableMidpoints,()=>this.refresh()),q(()=>this.tooltipOptions.enabled,e=>{this._tooltip=e?new nt({view:this.view}):V(this._tooltip)},J)])}destroy(){var t;this._reset(),(t=this._mover)==null||t.destroy(),this._mover=null,this._tooltip=V(this._tooltip),this._handles=V(this._handles),this._viewHandles=V(this._viewHandles)}set highlightsEnabled(t){var e;(e=this._highlightHelper)==null||e.removeAll(),this._set("highlightsEnabled",t),this._setUpHighlights()}get state(){const t=!!this.get("view.ready"),e=!(!this.get("graphic")||!this.get("layer"));return t&&e?"active":t?"ready":"disabled"}set symbols(t){const{midpoints:e=E.midpoints,vertices:i=E.vertices}=t||{};this._set("symbols",{midpoints:e,vertices:i})}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_setup(){const{graphic:t,layer:e}=this;if(!e||!t||u(t.geometry))return;const i=t.geometry;i.type!=="mesh"&&i.type!=="extent"?(i.type==="polygon"&&Q(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper.add(this.graphic)}_setUpGeometryHelper(){const t=this.graphic.geometry;if(u(t)||t.type==="mesh"||t.type==="extent")return void this._logGeometryTypeError();const e=t.type==="multipoint"?new B({paths:t.points,spatialReference:t.spatialReference}):t;this._editGeometryOperations=X.fromGeometry(e,N.Local)}_saveSnappingContextForHandle(t,e){var i;this._snappingGraphicsLayer=new K({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer),this._snappingContext=new Y({editGeometryOperations:this._editGeometryOperations,elevationInfo:{mode:"on-the-ground",offset:0},pointer:((i=e.viewEvent)==null?void 0:i.pointerType)||"mouse",excludeFeature:this.graphic,visualizer:new Z(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._highlightHelper.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){var t;g(this.snappingManager)&&this.snappingManager.doneSnapping(),g(this._snappingGraphicsLayer)&&((t=this.view)!=null&&t.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=V(this._editGeometryOperations),this._snappingTask=O(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this._set("selectedVertices",[])}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach(i=>i.destroy()),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach(i=>i.destroy()),this.vertexGraphics.removeAll()}_getCoordinatesForUI(t){const e=M(t.clone());if(t.type==="polygon")for(const i of e){const o=i[i.length-1];i[0][0]===o[0]&&i[0][1]===o[1]&&i.length>2&&i.pop()}return e}_setupGraphics(){const t=this.graphic.geometry;if(g(t)&&(t.type==="polyline"||t.type==="polygon")){const e=this._getCoordinatesForUI(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:e,symbols:i,view:{spatialReference:o}}=this,r=[];return t==null||t.forEach((p,s)=>{p.forEach((a,h)=>{var m;const[n,c]=a;r.push(new G({geometry:new f({x:n,y:c,spatialReference:o}),symbol:(m=i==null?void 0:i.vertices)==null?void 0:m.default,attributes:{...e,pathIndex:s,pointIndex:h}}))})}),r}_createMidpointGraphics(t){const{_graphicAttributes:e,symbols:i,view:{spatialReference:o}}=this,r=[];return t==null||t.forEach((p,s)=>{p.forEach((a,h)=>{const[n,c]=a,m=p[h+1]?h+1:0;if(P(this.graphic.geometry,"type")==="polygon"||m!==0){const[y,x]=p[m],[w,A]=T([n,c],[y,x]);r.push(new G({geometry:new f({x:w,y:A,spatialReference:o}),symbol:i.midpoints.default,attributes:{...e,pathIndex:s,pointIndexStart:h,pointIndexEnd:m}}))}})}),r}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map(({geometry:i})=>({x:i.x,y:i.y}));for(let i=0;i<e.length;i++){const o=[];for(let r=0;r<e.length;r++){if(i===r)continue;const p=e[i],s=e[r];p.x===s.x&&p.y===s.y&&o.push(r)}t[i].attributes.relatedGraphicIndices=o}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:o,view:r}=this,p=o.concat(i).items;t&&p.push(e),this._mover=new st({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:p,view:r,callbacks:{onGraphicClick:s=>this._onGraphicClickCallback(s),onGraphicMoveStart:s=>this._onGraphicMoveStartCallback(s),onGraphicMove:s=>this._onGraphicMoveCallback(s),onGraphicMoveStop:s=>this._onGraphicMoveStopCallback(s),onGraphicPointerOver:s=>this._onGraphicPointerOverCallback(s),onGraphicPointerOut:s=>this._onGraphicPointerOutCallback(s)}})}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick&&this.callbacks.onGraphicClick(t);else if(this._isMidpoint(e)){if(t.viewEvent.button===2)return;const i=this.graphic.clone(),o=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],i,o)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),t.viewEvent.button===2?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:o}=t,r=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:r?"move":"reshape",totalDx:i,totalDy:o}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:o}=t;if(o===this.graphic){const{geometry:r}=o;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),void(g(r)&&r.type==="point"&&this._onHandleMove(o,e,i,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)}))}if(!this.selectedVertices.includes(o)){if(this._clearSelection(),this._isMidpoint(o)){const r=this.graphic.clone(),p=this._createVertexFromMidpoint(o);this._emitVertexAddEvent([o],r,p)}this._addToSelection(o)}this._setUpOperation(t),this._emitReshapeStartEvent(o),this._onHandleMove(o,e,i,t,()=>{this._updateTooltip(o,t.viewEvent),this._emitReshapeEvent(o)})}_onGraphicMoveCallback(t){const{dx:e,dy:i,graphic:o}=t;this._activeOperationInfo.totalDx+=e,this._activeOperationInfo.totalDy+=i;const{operationType:r}=this._activeOperationInfo,{geometry:p}=o;if(!u(p)){if(r!=="move")this._onHandleMove(o,e,i,t,()=>{this._updateTooltip(o,t.viewEvent),this._emitReshapeEvent(o)});else if(p.type==="point")this._onHandleMove(o,e,i,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)});else if(p.type==="polyline"||p.type==="polygon"){const s=this._getCoordinatesForUI(p);this._updateVertexGraphicLocations(s),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)}}}_onGraphicMoveStopCallback(t){const{dx:e,dy:i,graphic:o}=t,{operationType:r}=this._activeOperationInfo;this._activeOperationInfo.totalDx+=e,this._activeOperationInfo.totalDy+=i,this._onHandleMove(o,e,i,t,()=>r==="move"?this._emitMoveStopEvent():this._emitReshapeStopEvent(o)),this._isMidpoint(o)?this.refresh():(this._updateTooltip(this._isVertex(o)?o:null),this._resetSnappingStateVars(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const e=this.view.spatialReference;for(const i of this.vertexGraphics){const{pathIndex:o,pointIndex:r}=i.attributes,[p,s]=t[o][r];i.geometry=new f({x:p,y:s,spatialReference:e})}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:o,pointIndexEnd:r}=e.attributes,[p,s]=t[i][o],[a,h]=t[i][r],[n,c]=T([p,s],[a,h]);e.geometry=new f({x:n,y:c,spatialReference:this.view.spatialReference})}}_getIndicesForVertexGraphic({attributes:t}){return[(t==null?void 0:t.pathIndex)||0,(t==null?void 0:t.pointIndex)||0]}_getVertexFromEditGeometry(t){const[e,i]=this._getIndicesForVertexGraphic(t);return this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,i,o,r){if(O(this._snappingTask),!this._snappingContext)return;const p=t.geometry,s=o.type==="graphic-move-stop";if(g(this.snappingManager)&&this.selectedVertices.length<2&&!s){const a=this.snappingManager;this._stagedVertex=a.update({point:p,context:this._snappingContext}),this._syncGeometryAfterVertexMove(t,new f(this._stagedVertex),e,i,s),r(),this._snappingTask=D(async h=>{const n=await a.snap({point:p,context:this._snappingContext,signal:h});n.valid&&(this._stagedVertex=n.apply(),this._syncGeometryAfterVertexMove(t,new f(this._stagedVertex),e,i,s),r())})}else{const a=g(this._stagedVertex)?new f(this._stagedVertex):p;this._syncGeometryAfterVertexMove(t,a,e,i,s),r()}}async _syncGeometryAfterVertexMove(t,e,i,o,r=!1){const p=this._editGeometryOperations.data.geometry;if(p.type==="point")t.geometry=e;else{const{x:s,y:a}=e,[h,n]=this._getIndicesForVertexGraphic(t);let c=M(p);const m=c[h].length-1;c[h][n]=[s,a],p.type==="polygon"&&(n===0?c[h][m]=[s,a]:n===m&&(c[h][0]=[s,a])),this._isVertex(t)&&(c=this._moveRelatedCoordinates(c,t,s,a),c=this._moveSelectedHandleCoordinates(c,t,i,o,p.type==="polygon"),this._updateMidpointGraphicLocations(c)),this.graphic.geometry=p.clone();const y=this._getVertexFromEditGeometry(t),x=s-y.pos[0],w=a-y.pos[1];this._editGeometryOperations.moveVertices([y],x,w,0),r&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i,o){const{relatedGraphicIndices:r}=e.attributes;for(const p of r){const s=this.vertexGraphics.getItemAt(p),{pathIndex:a,pointIndex:h}=s.attributes;t[a][h]=[i,o],s.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,o,r){for(const p of this.selectedVertices)if(p!==e){const{pathIndex:s,pointIndex:a,relatedGraphicIndices:h}=p.attributes,n=tt(p.geometry,i,o,this.view),c=t[s].length-1;t[s][a]=[n.x,n.y],p.geometry=n,r&&(a===0?t[s][c]=[n.x,n.y]:a===c&&(t[s][0]=[n.x,n.y]));for(const m of h){const y=this.vertexGraphics.getItemAt(m),{pathIndex:x,pointIndex:w}=y.attributes;t[x][w]=[n.x,n.y],y.geometry=n}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic,i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,o=i.geometry;if(u(o)||o.type!=="polygon"&&o.type!=="polyline")return[];const r=o.clone(),p=[],{pathIndex:s,pointIndexStart:a,pointIndexEnd:h}=t.attributes,{x:n,y:c}=t.geometry,m=h===0?a+1:h,y=M(r);return y[s].splice(m,0,[n,c]),t.attributes={...e,pathIndex:s,pointIndex:m,relatedGraphicIndices:[]},p.push({coordinates:y[s][m],componentIndex:s,vertexIndex:m}),this.graphic.geometry=r,p}_addToSelection(t){t instanceof G&&(t=[t]);for(const e of t)e.symbol=this.symbols.vertices.selected;this._set("selectedVertices",this.selectedVertices.concat(t)),this._emitSelectEvent(t)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,o=e?i.hover:i.default;t instanceof G&&(t=[t]);for(const r of t)this.selectedVertices.splice(this.selectedVertices.indexOf(r),1),this._set("selectedVertices",this.selectedVertices),r.set("symbol",o);this._emitDeselectEvent(t)}_clearSelection(){if(this.selectedVertices.length){const t=this.selectedVertices;for(const e of this.selectedVertices)e.set("symbol",this.symbols.vertices.default);this._set("selectedVertices",[]),this._emitDeselectEvent(t)}}_keyDownHandler(t){et.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const e=this.graphic.geometry;if(u(e)||e.type!=="polygon"&&e.type!=="polyline"||e.type==="polygon"&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;t instanceof G&&(t=[t]);const i=this.graphic.clone(),o=e.clone();let r=M(o);const p=[];t instanceof G&&(t=[t]);for(const s of t){const{x:a,y:h}=s.geometry;for(let n=0;n<r.length;n++){const c=r[n];for(let m=0;m<c.length;m++){const[y,x]=c[m];a===y&&h===x&&(p.push({coordinates:r[n][m],componentIndex:n,vertexIndex:m}),r[n].splice(Number(m),1))}}}if(o.type==="polygon")r=r.filter(s=>{if(s.length<2)return!1;const[a,h]=s[0],[n,c]=s[s.length-1];return(s.length!==2||a!==n||h!==c)&&(a===n&&h===c||s.push(s[0]),!0)}),o.rings=r;else{for(const s of r)s.length===1&&r.splice(r.indexOf(s),1);o.paths=r}this.graphic.geometry=o,this.refresh(),this._emitVertexRemoveEvent(t,i,p)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){u(this._tooltip)||(t?t===this.graphic?this._updateMoveGraphicTooltip(e):this._updateMoveVertexTooltip(e):this._tooltip.clear())}_updateMoveGraphicTooltip(t){const{_tooltip:e,tooltipOptions:i,view:o}=this;if(u(e))return;const r=new at({tooltipOptions:i});if(t){const{x:p,y:s}=t.origin,a=o.toMap(t),h=o.toMap(R(p,s)),n=$(h,a);r.distance=g(n)?n:C}e.info=r}_updateMoveVertexTooltip(t){const{_tooltip:e,graphic:{geometry:i},tooltipOptions:o,view:r}=this;if(u(e))return;const p=new ht({tooltipOptions:o});if(g(i)&&(i.type==="polygon"?p.area=ct(i):i.type==="polyline"&&(p.totalLength=pt(i))),t){const{x:s,y:a}=t.origin,h=r.toMap(t),n=r.toMap(R(s,a)),c=$(n,h);p.distance=g(c)?c:C}e.info=p}_emitMoveStartEvent(t,e){const i=new vt(this.graphic,t,e);this.emit("move-start",i),this.callbacks.onMoveStart&&this.callbacks.onMoveStart(i)}_emitMoveEvent(t,e){const i=new _t(this.graphic,t,e);this.emit("move",i),this.callbacks.onMove&&this.callbacks.onMove(i)}_emitMoveStopEvent(){const{totalDx:t,totalDy:e}=this._activeOperationInfo,i=new yt(this.graphic,t,e);this.emit("move-stop",i),this.callbacks.onMoveStop&&this.callbacks.onMoveStop(i)}_emitReshapeStartEvent(t){const e=new mt(this.graphic,t,this.selectedVertices);this.emit("reshape-start",e),this.callbacks.onReshapeStart&&this.callbacks.onReshapeStart(e)}_emitReshapeEvent(t){const e=new lt(this.graphic,t,this.selectedVertices);this.emit("reshape",e),this.callbacks.onReshape&&this.callbacks.onReshape(e)}_emitReshapeStopEvent(t){const e=new dt(this.graphic,t,this.selectedVertices);this.emit("reshape-stop",e),this.callbacks.onReshapeStop&&this.callbacks.onReshapeStop(e)}_emitSelectEvent(t){const e=new gt(t);this.emit("select",e),this.callbacks.onVertexSelect&&this.callbacks.onVertexSelect(e)}_emitDeselectEvent(t){const e=new ut(t);this.emit("deselect",e),this.callbacks.onVertexDeselect&&this.callbacks.onVertexDeselect(e)}_emitVertexAddEvent(t,e,i){const o=new xt(t,this.graphic,e,i);this.emit("vertex-add",o),this.callbacks.onVertexAdd&&this.callbacks.onVertexAdd(o)}_emitVertexRemoveEvent(t,e,i){const o=new ft(t,this.graphic,e,i);this.emit("vertex-remove",o),this.callbacks.onVertexRemove&&this.callbacks.onVertexRemove(o)}_logGeometryTypeError(){U.getLogger(this.declaredClass).error(new L("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};d([v()],l.prototype,"_tooltip",void 0),d([v()],l.prototype,"callbacks",void 0),d([v()],l.prototype,"enableMidpoints",void 0),d([v()],l.prototype,"enableMovement",void 0),d([v()],l.prototype,"enableVertices",void 0),d([v()],l.prototype,"graphic",void 0),d([v({value:!0})],l.prototype,"highlightsEnabled",null),d([v()],l.prototype,"layer",void 0),d([v({readOnly:!0})],l.prototype,"midpointGraphics",void 0),d([v()],l.prototype,"midpointSymbol",void 0),d([v({readOnly:!0})],l.prototype,"selectedVertices",void 0),d([v()],l.prototype,"snappingManager",void 0),d([v({readOnly:!0})],l.prototype,"state",null),d([v({value:E})],l.prototype,"symbols",null),d([v({type:H})],l.prototype,"tooltipOptions",void 0),d([v({readOnly:!0})],l.prototype,"type",void 0),d([v({readOnly:!0})],l.prototype,"vertexGraphics",void 0),d([v()],l.prototype,"view",void 0),l=d([F("esri.views.draw.support.Reshape")],l);const Ds=l;export{Ds as default};
