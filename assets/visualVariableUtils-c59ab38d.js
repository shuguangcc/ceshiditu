import{l as D}from"./Color-a42a8267.js";import{g as k}from"./Graphic-b46e2684.js";import{n as T}from"./compilerUtils-034cacb8.js";import{s as U}from"./Error-653283ae.js";import{t as g,r as w}from"./typedArrayUtil-a8b5b3e9.js";import{m as q}from"./lengthUtils-d2d33f94.js";import{e as I,l as z,i as x,n as E}from"./sizeVariableUtils-d4870b0d.js";import"./colorUtils-639f4d25.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./ensureType-cf29afa9.js";import"./string-cdf077e6.js";import"./cast-7928d7aa.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-6684e352.js";import"./geometry-5a216427.js";import"./Extent-69509002.js";import"./Ellipsoid-89682c5e.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./PopupTemplate-6eb885db.js";import"./Clonable-ba795b08.js";import"./Collection-78126e82.js";import"./Evented-515b9d9c.js";import"./SimpleObservable-7dcdef1d.js";import"./fieldUtils-31bfecd2.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./enumeration-3c281341.js";import"./number-347a3a44.js";import"./locale-30120714.js";import"./Identifiable-aa6d459d.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./aaBoundingRect-4a760199.js";import"./request-d3e98716.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./collectionUtils-3831b7c4.js";import"./Portal-8b65c9c4.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./jsonUtils-03c4af61.js";import"./unitUtils-47abac71.js";const y=U.getLogger("esri.renderers.visualVariables.support.visualVariableUtils"),M=new k,S=Math.PI,Xe=/^\s*(return\s+)?\$view\.scale\s*(;)?\s*$/i;function A(t,a,i){const e="visualVariables"in t&&t.visualVariables?t.visualVariables.find(c=>c.type==="color"):t;if(!e)return;if(e.declaredClass!=="esri.renderers.visualVariables.ColorVariable")return void y.warn("The visualVariable should be an instance of esri.renderers.visualVariables.ColorVariable");const n=typeof a=="number",r=n?null:a,o=r&&r.attributes;let l=n?a:null;const s=e.field,{ipData:p,hasExpression:m}=e.cache;let u=e.cache.compiledFunc;if(!s&&!m){const c=e.stops;return c&&c[0]&&c[0].color}if(typeof l!="number")if(m){if(g(i)||g(i.arcade))return void y.error("Use of arcade expressions requires an arcade context");const c={viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference},f=i.arcade.arcadeUtils,h=f.getViewInfo(c),V=f.createExecContext(r,h);if(!u){const F=f.createSyntaxTree(e.valueExpression);u=f.createFunction(F),e.cache.compiledFunc=u}l=f.executeFunction(u,V)}else o&&(l=o[s]);const d=e.normalizationField,v=o!=null&&d!=null?parseFloat(o[d]):void 0;if(l!=null&&(!d||n||!isNaN(v)&&v!==0)){isNaN(v)||n||(l/=v);const c=C(l,p);if(c){const f=c[0],h=c[1],V=f===h?e.stops[f].color:D.blendColors(e.stops[f].color,e.stops[h].color,c[2],w(i)?i.color:void 0);return new D(V)}}}function O(t,a,i){const e="visualVariables"in t&&t.visualVariables?t.visualVariables.find(c=>c.type==="opacity"):t;if(!e)return;if(e.declaredClass!=="esri.renderers.visualVariables.OpacityVariable")return void y.warn("The visualVariable should be an instance of esri.renderers.visualVariables.OpacityVariable");const n=typeof a=="number",r=n?null:a,o=r&&r.attributes;let l=n?a:null;const s=e.field,{ipData:p,hasExpression:m}=e.cache;let u=e.cache.compiledFunc;if(!s&&!m){const c=e.stops;return c&&c[0]&&c[0].opacity}if(typeof l!="number")if(m){if(g(i)||g(i.arcade))return void y.error("Use of arcade expressions requires an arcade context");const c={viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference},f=i.arcade.arcadeUtils,h=f.getViewInfo(c),V=f.createExecContext(r,h);if(!u){const F=f.createSyntaxTree(e.valueExpression);u=f.createFunction(F),e.cache.compiledFunc=u}l=f.executeFunction(u,V)}else o&&(l=o[s]);const d=e.normalizationField,v=o!=null&&d!=null?parseFloat(o[d]):void 0;if(l!=null&&(!d||n||!isNaN(v)&&v!==0)){isNaN(v)||n||(l/=v);const c=C(l,p);if(c){const f=c[0],h=c[1];if(f===h)return e.stops[f].opacity;{const V=e.stops[f].opacity;return V+(e.stops[h].opacity-V)*c[2]}}}}function L(t,a,i){const e="visualVariables"in t&&t.visualVariables?t.visualVariables.find(v=>v.type==="rotation"):t;if(!e)return;if(e.declaredClass!=="esri.renderers.visualVariables.RotationVariable")return void y.warn("The visualVariable should be an instance of esri.renderers.visualVariables.RotationVariable");const n=e.axis||"heading",r=n==="heading"&&e.rotationType==="arithmetic"?90:0,o=n==="heading"&&e.rotationType==="arithmetic"?-1:1,l=typeof a=="number"?null:a,s=l&&l.attributes,p=e.field,{hasExpression:m}=e.cache;let u=e.cache.compiledFunc,d=0;if(!p&&!m)return d;if(m){if(g(i)||g(i.arcade))return void y.error("Use of arcade expressions requires an arcade context");const v={viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference},c=i.arcade.arcadeUtils,f=c.getViewInfo(v),h=c.createExecContext(l,f);if(!u){const V=c.createSyntaxTree(e.valueExpression);u=c.createFunction(V),e.cache.compiledFunc=u}d=c.executeFunction(u,h)}else s&&(d=s[p]||0);return d=typeof d!="number"||isNaN(d)?null:r+o*d,d}function P(t,a,i){const e=typeof a=="number",n=e?null:a,r=n&&n.attributes;let o=e?a:null;const{isScaleDriven:l}=t.cache;let s=t.cache.compiledFunc;if(l){const m=w(i)?i.scale:void 0,u=w(i)?i.view:void 0;o=m==null||u==="3d"?$(t):m}else if(!e)switch(t.inputValueType){case E.Expression:{if(g(i)||g(i.arcade))return void y.error("Use of arcade expressions requires an arcade context");const m={viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference},u=i.arcade.arcadeUtils,d=u.getViewInfo(m),v=u.createExecContext(n,d);if(!s){const c=u.createSyntaxTree(t.valueExpression);s=u.createFunction(c),t.cache.compiledFunc=s}o=u.executeFunction(s,v);break}case E.Field:r&&(o=r[t.field]);break;case E.Unknown:o=null}if(!z(o))return null;if(e||!t.normalizationField)return o;const p=r?parseFloat(r[t.normalizationField]):null;return z(p)&&p!==0?o/p:null}function $(t){let a=null,i=null;const e=t.stops;return e?(a=e[0].value,i=e[e.length-1].value):(a=t.minDataValue||0,i=t.maxDataValue||0),(a+i)/2}function R(t,a,i){const e="visualVariables"in t&&t.visualVariables?t.visualVariables.find(r=>r.type==="size"):t;if(!e)return;if(e.declaredClass!=="esri.renderers.visualVariables.SizeVariable")return void y.warn("The visualVariable should be an instance of esri.renderers.visualVariables.SizeVariable");const n=K(P(e,a,i),e,a,i,e.cache.ipData);return n==null||isNaN(n)?0:n}function b(t,a,i){return t==null?null:I(t)?R(t,a,i):z(t)?t:null}function N(t,a,i){return z(i)&&t>i?i:z(a)&&t<a?a:t}function B(t,a,i,e){return t+((b(a.minSize,i,e)||a.minDataValue)??0)}function W(t,a,i){const e=t.stops;let n=e&&e.length&&e[0].size;return n==null&&(n=t.minSize),b(n,a,i)}function j(t,a,i,e){const n=(t-a.minDataValue)/(a.maxDataValue-a.minDataValue),r=b(a.minSize,i,e),o=b(a.maxSize,i,e),l=w(e)?e.shape:void 0;if(t<=a.minDataValue)return r;if(t>=a.maxDataValue)return o;if(r==null||o==null)return null;if(a.scaleBy==="area"&&l){const s=l==="circle",p=s?S*(r/2)**2:r*r,m=p+n*((s?S*(o/2)**2:o*o)-p);return s?2*Math.sqrt(m/S):Math.sqrt(m)}return r+n*(o-r)}function G(t,a,i,e){const n=w(e)?e.shape:void 0,r=t/a.minDataValue,o=b(a.minSize,i,e),l=b(a.maxSize,i,e);let s=null;return s=n==="circle"?2*Math.sqrt(r*(o/2)**2):n==="square"||n==="diamond"||n==="image"?Math.sqrt(r*o**2):r*o,N(s,o,l)}function H(t,a,i,e,n){var s,p,m;const[r,o,l]=C(t,n);if(r===o)return b((s=a.stops)==null?void 0:s[r].size,i,e);{const u=b((p=a.stops)==null?void 0:p[r].size,i,e);return u+(b((m=a.stops)==null?void 0:m[o].size,i,e)-u)*l}}function J(t,a,i,e){const n=(w(e)&&e.resolution?e.resolution:1)*q[a.valueUnit],r=b(a.minSize,i,e),o=b(a.maxSize,i,e),{valueRepresentation:l}=a;let s=null;return s=l==="area"?2*Math.sqrt(t/S)/n:l==="radius"||l==="distance"?2*t/n:t/n,N(s,r,o)}function K(t,a,i,e,n){switch(a.transformationType){case x.Additive:return B(t,a,i,e);case x.Constant:return W(a,i,e);case x.ClampedLinear:return j(t,a,i,e);case x.Proportional:return G(t,a,i,e);case x.Stops:return H(t,a,i,e,n);case x.RealWorldSize:return J(t,a,i,e);case x.Identity:return t;case x.Unknown:return null}}function Ye(t,a,i){const{isScaleDriven:e}=t.cache;if(!(e&&i==="3d"||a))return null;const n={scale:a,view:i};let r=b(t.minSize,M,n),o=b(t.maxSize,M,n);if(r!=null||o!=null){if(r>o){const l=o;o=r,r=l}return{minSize:r,maxSize:o}}}function Ze(t,a,i){if(!t.visualVariables)return;const e=[],n=[],r=[],o=[],l=[];for(const s of t.visualVariables)switch(s.type){case"color":n.push(s);break;case"opacity":r.push(s);break;case"rotation":l.push(s);break;case"size":o.push(s)}return n.forEach(s=>{const p=A(s,a,i);e.push({variable:s,value:p})}),r.forEach(s=>{const p=O(s,a,i);e.push({variable:s,value:p})}),l.forEach(s=>{const p=L(s,a,i);e.push({variable:s,value:p})}),o.forEach(s=>{const p=R(s,a,i);e.push({variable:s,value:p})}),e.filter(s=>s.value!=null)}function C(t,a){if(!a)return;let i=0,e=a.length-1;return a.some((n,r)=>t<n?(e=r,!0):(i=r,!1)),[i,e,(t-a[i])/(a[e]-a[i])]}function _e(t,a,i){const e=["proportional","proportional","proportional"];for(const n of t){const r=n.useSymbolValue?"symbol-value":R(n,a,i);switch(n.axis){case"width":e[0]=r;break;case"depth":e[1]=r;break;case"height":e[2]=r;break;case"width-and-depth":e[0]=r,e[1]=r;break;case"all":case void 0:case null:e[0]=r,e[1]=r,e[2]=r;break;default:T(n.axis)}}return e}export{_e as getAllSizes,A as getColor,O as getOpacity,L as getRotationAngle,R as getSize,K as getSizeForValue,b as getSizeFromNumberOrVariable,Ye as getSizeRangeAtScale,Ze as getVisualVariableValues,Xe as viewScaleRE};
