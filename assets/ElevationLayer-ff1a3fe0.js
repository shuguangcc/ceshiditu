import{_ as m}from"./preload-helper-41c905a7.js";import{e as a,y as p,n as v}from"./cast-7928d7aa.js";import{U as d,h as f}from"./request-d3e98716.js";import{a as w}from"./Error-653283ae.js";import{w as g,r as h}from"./typedArrayUtil-a8b5b3e9.js";import{O as _}from"./MultiOriginJSONSupport-27362d57.js";import{w as T,f as c}from"./promiseUtils-6684e352.js";import"./ensureType-cf29afa9.js";import{o as S}from"./Extent-69509002.js";import{v as $}from"./HeightModelInfo-22ad72d7.js";import{b as I}from"./Layer-f0696768.js";import{s as D}from"./ArcGISCachedService-3ce6199a.js";import{p as E}from"./ArcGISService-ea748edf.js";import{c as O,f as V}from"./OperationalLayer-24e6fa34.js";import{v as x}from"./PortalLayer-f1a64f99.js";import{n as b}from"./LercDecoder-73115fd2.js";import"./string-cdf077e6.js";import"./nextTick-3ee5a785.js";import"./Ellipsoid-89682c5e.js";import"./jsonMap-c1f958cf.js";import"./unitUtils-47abac71.js";import"./geometry-5a216427.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./Evented-515b9d9c.js";import"./Identifiable-aa6d459d.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./TilemapCache-37ec7033.js";import"./TileInfo-34f80a8e.js";import"./aaBoundingRect-4a760199.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./byteSizeEstimations-f0cab514.js";import"./HandleOwner-e1406413.js";import"./reactiveUtils-f41a4e00.js";import"./LRUCache-14115d91.js";import"./MemCache-4b976a8b.js";import"./arcgisLayerUrl-0b2b7691.js";import"./persistableUrlUtils-a16d0f55.js";import"./TimeExtent-744afd75.js";import"./ElevationInfo-ce9cacc2.js";import"./fieldUtils-31bfecd2.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./lengthUtils-d2d33f94.js";import"./opacityUtils-243aae26.js";import"./asyncUtils-62e8a185.js";import"./Portal-8b65c9c4.js";import"./locale-30120714.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./PortalItem-aa42c739.js";import"./assets-0b172f07.js";import"./workers-898a7c4c.js";import"./Connection-a681777e.js";import"./Queue-3a0c055d.js";import"./intl-f1e98361.js";import"./number-347a3a44.js";import"./messages-be07754e.js";let o=class extends D(E(O(x(_(I))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=b()}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}destroy(){this._lercDecoder=g(this._lercDecoder)}readVersion(e,r){let t=r.currentVersion;return t||(t=9.3),t}load(e){const r=h(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{for(let i=0;i<t.typeKeywords.length;i++)if(t.typeKeywords[i].toLowerCase()==="elevation 3d layer")return!0;throw new w("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(T).then(()=>this._fetchImageService(r))),Promise.resolve(this)}fetchTile(e,r,t,i){const s=h((i=i||{signal:null}).signal)?i.signal:i.signal=new AbortController().signal,y={responseType:"array-buffer",signal:s},u={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(e,r,t,i)).then(()=>d(this.getTileUrl(e,r,t),y)).then(l=>this._lercDecoder.decode(l.data,u,s)).then(l=>{var n;return{values:l.pixelData,width:l.width,height:l.height,maxZError:(n=l.fileInfo)==null?void 0:n.maxZError,noDataValue:l.noDataValue,minValue:l.minValue,maxValue:l.maxValue}})}getTileUrl(e,r,t){const i=!this.tilemapCache&&this.supportsBlankTile,s=f({...this.parsedUrl.query,blankTile:!i&&null});return`${this.parsedUrl.path}/tile/${e}/${r}/${t}${s?"?"+s:""}`}async queryElevation(e,r){const{ElevationQuery:t}=await m(()=>import("./ElevationQuery-f4eb8505.js"),["./ElevationQuery-f4eb8505.js","./asyncUtils-62e8a185.js","./cast-7928d7aa.js","./typedArrayUtil-a8b5b3e9.js","./string-cdf077e6.js","./Error-653283ae.js","./ensureType-cf29afa9.js","./nextTick-3ee5a785.js","./promiseUtils-6684e352.js","./unitUtils-47abac71.js","./jsonMap-c1f958cf.js","./Extent-69509002.js","./Ellipsoid-89682c5e.js","./Polyline-bf268e7b.js","./projection-d7b57a6c.js","./preload-helper-41c905a7.js","./mathUtils-2519596a.js","./vec3-a020a6f6.js","./vec3f64-2f9cef06.js","./common-c186b691.js","./vec4-790471c0.js","./SimpleObservable-7dcdef1d.js","./mat4-44a0988f.js","./assets-0b172f07.js","./request-d3e98716.js","./aaBoundingRect-4a760199.js","./zscale-1e1fc911.js","./ElevationSamplerData-7decf898.js","./geometry-5a216427.js","./typeUtils-eb9416d0.js","./TileInfo-34f80a8e.js"],import.meta.url);return c(r),new t().query(this,e,r)}async createElevationSampler(e,r){const{ElevationQuery:t}=await m(()=>import("./ElevationQuery-f4eb8505.js"),["./ElevationQuery-f4eb8505.js","./asyncUtils-62e8a185.js","./cast-7928d7aa.js","./typedArrayUtil-a8b5b3e9.js","./string-cdf077e6.js","./Error-653283ae.js","./ensureType-cf29afa9.js","./nextTick-3ee5a785.js","./promiseUtils-6684e352.js","./unitUtils-47abac71.js","./jsonMap-c1f958cf.js","./Extent-69509002.js","./Ellipsoid-89682c5e.js","./Polyline-bf268e7b.js","./projection-d7b57a6c.js","./preload-helper-41c905a7.js","./mathUtils-2519596a.js","./vec3-a020a6f6.js","./vec3f64-2f9cef06.js","./common-c186b691.js","./vec4-790471c0.js","./SimpleObservable-7dcdef1d.js","./mat4-44a0988f.js","./assets-0b172f07.js","./request-d3e98716.js","./aaBoundingRect-4a760199.js","./zscale-1e1fc911.js","./ElevationSamplerData-7decf898.js","./geometry-5a216427.js","./typeUtils-eb9416d0.js","./TileInfo-34f80a8e.js"],import.meta.url);return c(r),new t().createSampler(this,e,r)}_fetchTileAvailability(e,r,t,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,r,t,i):Promise.resolve("unknown")}async _fetchImageService(e){var i;if(this.sourceJSON)return this.sourceJSON;const r={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},t=await d(this.parsedUrl.path,r);t.ssl&&(this.url=(i=this.url)==null?void 0:i.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};a([p({json:{read:{source:"copyrightText"}}})],o.prototype,"copyright",void 0),a([p({readOnly:!0,type:$})],o.prototype,"heightModelInfo",void 0),a([p({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),a([p({type:["show","hide"]})],o.prototype,"listMode",void 0),a([p({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],o.prototype,"minScale",void 0),a([p({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],o.prototype,"maxScale",void 0),a([p({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],o.prototype,"opacity",void 0),a([p({type:["ArcGISTiledElevationServiceLayer"]})],o.prototype,"operationalLayerType",void 0),a([p()],o.prototype,"sourceJSON",void 0),a([p({json:{read:!1},value:"elevation",readOnly:!0})],o.prototype,"type",void 0),a([p(V)],o.prototype,"url",void 0),a([p()],o.prototype,"version",void 0),a([S("version",["currentVersion"])],o.prototype,"readVersion",null),o=a([v("esri.layers.ElevationLayer")],o),o.prototype.fetchTile.__isDefault__=!0;const Ne=o;export{Ne as default};
