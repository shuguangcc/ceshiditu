import{r as a}from"./typedArrayUtil-a8b5b3e9.js";import{j as m,h as i,U as s}from"./euclideanAreaMeasurementUtils-0db711c3.js";import"./geometry-5a216427.js";import{o as e}from"./quantityFormatUtils-ba1f6cd1.js";import{geodesicArea as f}from"./geometryEngine-62e3ccf4.js";import{W as c}from"./projection-d7b57a6c.js";import{c9 as u}from"./index-455b69b8.js";import{r as p}from"./automaticLengthMeasurementUtils-24c52b73.js";import{k as h}from"./Extent-69509002.js";function l(r){const{spatialReference:t}=r;return p(t,q,g,$,r)}function q(r){return e(Math.abs(u([r],"square-meters")[0]),"square-meters")}function g(r){try{return e(Math.abs(f(r,"square-meters")),"square-meters")}catch{return null}}function $(r){const t=[];return c(r,t)?e(Math.abs(u([{type:"polygon",rings:t,spatialReference:h.WGS84}],"square-meters")[0]),"square-meters"):null}function b(r,t,o=s()){if(t==="on-the-ground"){const n=l(r);return a(n)?n:m(r,o)}return i(r,o)}function A(r,t=s()){return b(r,"on-the-ground",t)}export{b as i,A as u};
