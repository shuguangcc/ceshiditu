import{e as n,y as l,n as v,m as q,B as Q}from"./cast-7928d7aa.js";import{g as _}from"./Graphic-b46e2684.js";import{t as m,r as p,p as N,X as G}from"./typedArrayUtil-a8b5b3e9.js";import{j as E}from"./Collection-78126e82.js";import{s as c,a as x}from"./Error-653283ae.js";import{j as U,L as B,D as j}from"./promiseUtils-6684e352.js";import{h as S,l as V,w as I}from"./reactiveUtils-f41a4e00.js";import"./ensureType-cf29afa9.js";import"./BuildingGroupSublayer-e396dfb3.js";import{WhereClause as W}from"./WhereClause-2b5b05b2.js";import"./BuildingComponentSublayer-80f74d57.js";import{y as T}from"./FeatureReductionLayer-4077b2ae.js";import{T as w,v as C,g as k}from"./fieldUtils-31bfecd2.js";import{x as $}from"./Query-ff8c2cfb.js";import{n as D}from"./Evented-515b9d9c.js";import{a as z}from"./HandleOwner-e1406413.js";import{s as H}from"./Identifiable-aa6d459d.js";import{m as X}from"./Promise-dfdee8ba.js";import{y as Y,u as J,L as K,I as L}from"./I3SMeshView3D-4e176d72.js";import{t as Z}from"./vec4f64-e407da96.js";import{p as tt,b as et,w as rt,M as it}from"./I3SUtil-3ffd3baa.js";import{r as ot}from"./symbolColorUtils-604c5345.js";import{L as M,d as st,f as nt,n as lt}from"./I3SQueryFeatureStore-f22918fe.js";import{t as pt}from"./DefinitionExpressionSceneLayerView-5a30c6e1.js";import"./string-cdf077e6.js";import{d as at,s as R}from"./popupUtils-e8f3d062.js";import{I as ut}from"./Scheduler-8433672d.js";import{n as mt}from"./LayerView3D-9d740636.js";import{a8 as dt}from"./index-455b69b8.js";import{u as ht}from"./LayerView-b83ced89.js";import"./nextTick-3ee5a785.js";import"./geometry-5a216427.js";import"./Extent-69509002.js";import"./Ellipsoid-89682c5e.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./PopupTemplate-6eb885db.js";import"./Clonable-ba795b08.js";import"./enumeration-3c281341.js";import"./number-347a3a44.js";import"./locale-30120714.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./aaBoundingRect-4a760199.js";import"./request-d3e98716.js";import"./preload-helper-41c905a7.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./collectionUtils-3831b7c4.js";import"./Portal-8b65c9c4.js";import"./Loadable-48bc1293.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./jsonUtils-03c4af61.js";import"./SimpleObservable-7dcdef1d.js";import"./loadAll-7fd968fe.js";import"./asyncUtils-62e8a185.js";import"./UniqueValueRenderer-103ec66d.js";import"./LegendOptions-e65e7a9c.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./diffUtils-1ac65748.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./compilerUtils-034cacb8.js";import"./lengthUtils-d2d33f94.js";import"./unitUtils-47abac71.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./jsonUtils-c56f8821.js";import"./DictionaryLoader-2cf5144e.js";import"./LRUCache-14115d91.js";import"./MemCache-4b976a8b.js";import"./deprecate-b9088bd3.js";import"./heatmapUtils-84e8c43b.js";import"./FeatureLayer-a9f3e6ec.js";import"./MultiOriginJSONSupport-27362d57.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./FeatureLayerBase-aebdf2da.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./HeightModelInfo-22ad72d7.js";import"./arcgisLayerUrl-0b2b7691.js";import"./OperationalLayer-24e6fa34.js";import"./TimeExtent-744afd75.js";import"./ElevationInfo-ce9cacc2.js";import"./RelationshipQuery-db5fcd0c.js";import"./Layer-f0696768.js";import"./workers-898a7c4c.js";import"./Connection-a681777e.js";import"./Queue-3a0c055d.js";import"./assets-0b172f07.js";import"./intl-f1e98361.js";import"./messages-be07754e.js";import"./editsZScale-2015e7db.js";import"./queryZScale-d9d8ef40.js";import"./zscale-1e1fc911.js";import"./FeatureSet-0573546e.js";import"./APIKeyMixin-34d76a46.js";import"./ArcGISService-ea748edf.js";import"./BlendLayer-d8293c8d.js";import"./parser-2b40deea.js";import"./mat4f32-77b3d8ac.js";import"./mat4-44a0988f.js";import"./CustomParametersMixin-807d2055.js";import"./EditBusLayer-40671d1a.js";import"./OrderedLayer-e7edf19c.js";import"./PortalLayer-f1a64f99.js";import"./PortalItem-aa42c739.js";import"./RefreshableLayer-1c078c47.js";import"./ScaleRangeLayer-271178b7.js";import"./TemporalLayer-39c07299.js";import"./TimeInfo-c89d0ef4.js";import"./FeatureTemplate-746d033e.js";import"./FeatureType-c83c5f49.js";import"./fieldProperties-7547b373.js";import"./FieldsIndex-aa6dd3fa.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./versionUtils-92993d41.js";import"./styleUtils-da81b13f.js";import"./TopFeaturesQuery-785f5453.js";import"./popupUtils-07fe66a7.js";import"./capabilities-a18453f6.js";import"./I3SIndexInfo-acc8ea15.js";import"./I3SLayerDefinitions-f6c057a8.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./mat4f64-1e28eae0.js";import"./projection-d7b57a6c.js";import"./I3SOverrides-02bb416c.js";import"./dehydratedFeatures-4eeb381a.js";import"./quantizationUtils-33aba427.js";import"./ViewingMode-5d7d590b.js";import"./I3SNode-42b7a44e.js";import"./sphere-4f5e644f.js";import"./mat3f64-c6305894.js";import"./quatf64-7fd38d64.js";import"./vec2f64-30dc1443.js";import"./I3SBinaryReader-3d2c2faa.js";import"./VertexAttribute-9c5c630d.js";import"./RenderTexture-efcfcb1e.js";import"./PhysicallyBasedRendering.glsl-a986c926.js";import"./View.glsl-8b12b8c2.js";import"./ShaderBuilder-93e8045e.js";import"./FloatPassUniform-d2dfc562.js";import"./Float4PassUniform-3a47b7b3.js";import"./RgbaFloatEncoding.glsl-6036ca34.js";import"./Texture2DPassUniform-6e8ae673.js";import"./vec2-2cef68de.js";import"./vec3f32-c9aa289f.js";import"./Texture2DDrawUniform-22924c6f.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-0c0898f0.js";import"./AlphaCutoff-96178e0d.js";import"./Texture-bbae5d9d.js";import"./VisualVariablePassParameters-5807c7dc.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./FramebufferObject-50e1b68f.js";import"./Texture-e79b14e7.js";import"./context-util-1e3c8cfc.js";import"./Util-a48361c6.js";import"./TextureOnly.glsl-18701a3b.js";import"./ScreenSpacePass-00f8c8a4.js";import"./Octree-1a841545.js";import"./plane-45609588.js";import"./FeatureLayerView3D-23021139.js";import"./FeatureLayerViewBase3D-f9a2841f.js";import"./FeatureLikeLayerView3D-e095b99c.js";import"./utils-725f8b4e.js";import"./ItemCache-ee28c7ba.js";import"./cimSymbolUtils-2e4dde89.js";import"./utils-c81a5c52.js";import"./queryForSymbologySnapping-f3902574.js";import"./elevationInfoUtils-427916a5.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-2cd67a8a.js";import"./OptimizedFeature-3de538c1.js";import"./optimizedFeatureQueryEngineAdapter-4b9881eb.js";import"./centroid-13995b22.js";import"./PooledRBush-26ba8fba.js";import"./quickselect-322ec8e1.js";import"./ExportImageParameters-f328a234.js";import"./sublayerUtils-ba7f61bc.js";import"./QueryEngine-a5c074c3.js";import"./normalizeUtils-ee4bf39f.js";import"./featureConversionUtils-01cdde8a.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./QueryEngineResult-665bf7fb.js";import"./utils-30a9a7e0.js";import"./generateRendererUtils-a996108f.js";import"./utils-1f4fcfec.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-b43dc94c.js";import"./scaleUtils-b32a50d8.js";import"./FeatureStore-b1ba4c29.js";import"./EvaluateSceneLighting.glsl-3bbc6edf.js";import"./SSAOBlur.glsl-c6f142fc.js";import"./ReadLinearDepth.glsl-7ff30f7d.js";import"./SSAO.glsl-6f3b4065.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./objectResourceUtils-ef6e3cdf.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-646ba1de.js";import"./vec33-ce3aa99b.js";import"./DefaultMaterial_COLOR_GAMMA-9831d979.js";import"./types-e1c0a5bf.js";import"./Version-9baeb7ac.js";import"./quat-5b263584.js";import"./vec2f32-461e65a9.js";import"./lineSegment-e6f72ff2.js";import"./InterleavedLayout-5e9cf734.js";import"./Matrix3PassUniform-da8eddae.js";import"./MixExternalColor.glsl-25f0049c.js";import"./ForwardLinearDepth.glsl-36f9eb3b.js";import"./Slice.glsl-a612de15.js";import"./Transform.glsl-f15542a7.js";import"./ObjectAndLayerIdColor.glsl-73c19386.js";import"./OutputDepth.glsl-179f1d8f.js";import"./OutputHighlight.glsl-7364b03b.js";import"./VisualVariables.glsl-b8290512.js";import"./DiscardOrAdjustAlphaBlend.glsl-5f837994.js";import"./TransparencyPassType-cd195b0e.js";import"./Normals.glsl-90e28525.js";import"./DefaultMaterial.glsl-b4f4cbc5.js";import"./VertexColor.glsl-db21b96c.js";import"./VerticalOffset.glsl-86460edb.js";import"./MultipassTerrainTest.glsl-e79d40de.js";import"./DefaultTechniqueConfiguration-e8962072.js";import"./RealisticTree.glsl-2b30ed32.js";import"./Heatmap.glsl-07ebb671.js";import"./HeatmapDensity.glsl-028179cd.js";import"./heatmapTextureUtils-d1d96768.js";import"./projectExtentUtils-9adea3ba.js";import"./query-922e6fbf.js";import"./pbfQueryUtils-72f9b45b.js";import"./pbf-e1a6c35b.js";import"./LercDecoder-73115fd2.js";import"./EventedSet-7223bfeb.js";import"./FeatureLayerView-dbb9730b.js";import"./RefreshableLayerView-1faf24ee.js";import"./layerUtils-034678f6.js";import"./SceneModification-17ca2be5.js";import"./persistable-19c823da.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./uuid-73213768.js";import"./SceneLayerWorker-dd02c2a0.js";import"./edgeProcessing-3ca548e1.js";import"./deduplicate-b0bc48cc.js";import"./Basemap-a8f7f439.js";import"./writeUtils-067c4f82.js";import"./CollectionFlattener-3dd1f479.js";import"./TablesMixin-e7a6aab1.js";import"./Cyclical-b66238c6.js";import"./TileInfo-34f80a8e.js";import"./widget-f7489a3f.js";import"./dom-5b7af1bf.js";import"./executeQueryJSON-bcd96e1a.js";import"./colorUtils-82440b70.js";import"./mat2d-d0b91e3e.js";import"./GraphicsLayer-10573c27.js";import"./enums-0fc02184.js";import"./TileStrategy-4189758f.js";import"./TileStore-787dbea4.js";import"./TileKey-0750ad58.js";import"./rbush-8e36784a.js";import"./capabilities-3636c6a4.js";import"./ElevationSamplerData-7decf898.js";import"./WaterSurface.glsl-fc8a5726.js";import"./NormalUtils.glsl-a59958d7.js";import"./HUD.glsl-80cf9a21.js";import"./projection-aa2a8986.js";import"./HUDMaterial.glsl-4bf3c7df.js";import"./sdfPrimitives-a24e9cb2.js";import"./floatRGBA-fa8308d2.js";import"./labelFormatUtils-4d730eaa.js";import"./LineCallout.glsl-a0056465.js";import"./earcut-58237617.js";import"./MeshComponent-f50df6af.js";import"./MarkerSizing.glsl-c6fa192a.js";import"./RibbonLine.glsl-2a3b4d4e.js";import"./LineStipple.glsl-de782d6a.js";import"./callExpressionWithFeature-a7532499.js";import"./LineMarker.glsl-8f444621.js";import"./NativeLine.glsl-cdbbf172.js";import"./Path.glsl-60b36878.js";import"./ColorMaterial.glsl-8310ffb3.js";import"./Pattern.glsl-d3388745.js";import"./EffectView-d3bf37ed.js";import"./config-1337d16e.js";import"./workerHelper-c6d4a8cb.js";import"./Subtype-5b01b21f.js";import"./datetime-4f774298.js";import"./webStyleSymbolUtils-55ed91cd.js";import"./enums-4b2a86a0.js";const O=(t,e)=>{let r=class extends X(z(H(D.EventedMixin(t)))){constructor(i){super(i),this.sublayer=null,this.parent=null,this.view=null}initialize(){}get suspended(){return!this.canResume()}get updating(){return!this.suspended&&this.isUpdating()}get visible(){var i;return!!((i=this.sublayer)!=null&&i.visible)}set visible(i){this._overrideIfSome("visible",i)}get fullOpacity(){const i=o=>o??1;return i(this.get("sublayer.opacity"))*i(this.get("parent.fullOpacity"))}canResume(){var i,o;return!((i=this.parent)!=null&&i.suspended)&&((o=this.view)==null?void 0:o.ready)&&this.visible||!1}isUpdating(){return!1}};return n([l()],r.prototype,"sublayer",void 0),n([l()],r.prototype,"parent",void 0),n([l({readOnly:!0})],r.prototype,"suspended",null),n([l({type:Boolean,readOnly:!0})],r.prototype,"updating",null),n([l()],r.prototype,"view",void 0),n([l()],r.prototype,"visible",null),n([l()],r.prototype,"fullOpacity",null),r=n([v("esri.views.3d.layers.BuildingSublayerView3D")],r),r};var d;(function(t){t[t.Solid=0]="Solid",t[t.WireFrame=1]="WireFrame",t[t.XRay=2]="XRay"})(d||(d={}));const P=.15,yt=.5*P;function ct(t){switch(t.filterMode.type){case"solid":return{mode:d.Solid};case"wire-frame":return{mode:d.WireFrame,edgeMaterial:tt(t.filterMode.edges,{})};case"x-ray":return{mode:d.XRay}}}function A(t,e){if(m(e))return t.color[3]=0,t.edgeMaterial=null,void(t.pickable=!1);switch(e.mode){case d.Solid:return;case d.WireFrame:return t.color[3]=0,t.edgeMaterial=e.edgeMaterial,void(t.pickable=!1);case d.XRay:return t.color[0]=1,t.color[1]=1,t.color[2]=1,t.color[3]*=P,t.colorMixMode=ot.Replace,t.castShadows=!1,t.pickable=!1,void(t.edgeMaterial=ft(t.edgeMaterial))}}function ft(t){return m(t)?null:(g.lastMaterial!==t&&(g.cachedMaterial=gt(t),g.lastMaterial=t),g.cachedMaterial)}function gt(t){const e=Z(t.color);return e[3]*=yt,{...t,color:e}}const g={cachedMaterial:null,lastMaterial:null};class b extends q{constructor(){super(...arguments),this.sublayer=null}get updating(){return!1}get suspended(){return!1}get availableFields(){return[]}get filter(){return null}set filter(e){throw new Error("Not implemented")}queryFeatures(e,r){throw new Error("Not implemented")}queryObjectIds(e,r){throw new Error("Not implemented")}queryFeatureCount(e,r){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(e,r){throw new Error("Not implemented")}highlight(e){throw new Error("Not implemented")}}n([l()],b.prototype,"sublayer",void 0),n([l()],b.prototype,"availableFields",null),n([l()],b.prototype,"filter",null);let a=class extends pt(Y(O(b))){constructor(){super(...arguments),this.type="building-component-sublayer-3d",this.layerView=null,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!1,this.requiredFields=[],this.progressiveLoadFactor=1,this._queryEngine=null}get i3slayer(){return this.sublayer}get layerUid(){return this.sublayer.layer.uid}get sublayerUid(){return this.sublayer.uid}get layerId(){return this.sublayer.layer.id}get sublayerId(){return this.sublayer.id}get layerPopupEnabled(){return this.sublayer.popupEnabled}initialize(){this.updatingHandles.add(()=>[this.sublayer.renderer,this.definitionExpressionFields,this.filterExpressionFields],()=>this._updateRequiredFields()),this.updatingHandles.add(()=>this.sublayer.renderer,e=>this._rendererChange(e),S);const t=()=>this._filterChange();this.updatingHandles.add(()=>this.parsedDefinitionExpression,t),this.updatingHandles.add(()=>p(this._filter)?this._filter.sortedObjectIds:null,t),this.updatingHandles.add(()=>p(this._filter)?this._filter.parsedWhereClause:null,t),this.updatingHandles.add(()=>[p(this._filter)?this._filter.parsedGeometry:null,p(this.filter)?this.filter.spatialRelationship:null],()=>this._geometryFilterChange()),this.updatingHandles.add(()=>this.parsedFilterExpressions,()=>this._updateSymbologyOverride(),S),this.addResolvingPromise(this._updateRequiredFields())}get lodFactor(){return this.view.qualitySettings.sceneService.object.lodFactor}get parsedFilterExpressions(){return this.sublayer.modelName!=="Overview"&&this.layerView?this.layerView.filterExpressions.map(([t,e])=>{let r;try{r=W.create(t,this.sublayer.fieldsIndex)}catch(s){return c.getLogger(this.declaredClass).error("Failed to parse filterExpression: "+s),null}if(!r.isStandardized)return c.getLogger(this.declaredClass).error("filterExpression is using non standard function"),null;const i=[],o=r.fieldNames;return et(o,this.sublayer.fields,{missingFields:i}),i.length>0?(c.getLogger(this.declaredClass).error(`filterExpression references unknown fields: ${i.join(", ")}`),null):[r,e]}).filter(t=>t!=null):[]}get filter(){return p(this._filter)?this._filter.viewFilter:null}set filter(t){!m(t)&&M.checkSupport(t)?p(this._filter)?this._filter.viewFilter=t:this._filter=new M({viewFilter:t,layerFieldsIndex:this.sublayer.fieldsIndex,loadAsyncModule:e=>this._loadAsyncModule(e),addSqlFilter:(e,r)=>this.addSqlFilter(e,r,this.logError)}):this._filter=null}isUpdating(){return super.isUpdating()||p(this._filter)&&this._filter.updating}_updateSymbologyOverride(){const t=this.parsedFilterExpressions;t.length>0?this._setSymbologyOverride((e,r)=>{for(const[i,o]of t)try{if(i.testFeature(e))return A(r,o)}catch(s){this.logError(s)}return A(r,null)},this.filterExpressionFields):this._setSymbologyOverride(null,null)}get filterExpressionFields(){return w(this.sublayer.fieldsIndex,this.parsedFilterExpressions.reduce((t,[e])=>t.concat(e.fieldNames),new Array))}get availableFields(){const t=this.sublayer,e=t.fieldsIndex;let r=this.requiredFields;if(t.outFields||t.layer.outFields){const i=[...t.outFields||[],...t.layer.outFields||[]];r=[...C(e,i),...r]}return w(e,r)}_createLayerGraphic(t){const e=new _(null,null,t);return e.layer=this.sublayer.layer,e.sourceLayer=this.sublayer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}async fetchPopupFeatures(t,e){const r=this._validateFetchPopupFeatures(e);if(r)throw r;if(m(e)||!e.clientGraphics||e.clientGraphics.length===0)return[];const i=[],o=[],s=p(this.sublayer.associatedLayer)?await this.sublayer.associatedLayer.load():this.sublayer,h=C(this.sublayer.fieldsIndex,await at(s,R(this.sublayer,e))),f=new Set;for(const y of e.clientGraphics)k(h,y,f)?o.push(y):i.push(y);return o.length===0?i:(p(this.sublayer.associatedLayer)&&await this.sublayer.associatedLayer.load().catch(()=>c.getLogger(this.declaredClass).warn("Failed to load associated feature layer. Displaying popup attributes from cached attributes.")),this.whenGraphicAttributes(o,Array.from(f)).catch(()=>o).then(y=>i.concat(y)))}async _updateRequiredFields(){const t=w(this.sublayer.fieldsIndex,[...this.sublayer.renderer?await this.sublayer.renderer.getRequiredFields(this.sublayer.fieldsIndex):[],...this.definitionExpressionFields||[],...this.filterExpressionFields||[]]);this._set("requiredFields",t)}_validateFetchPopupFeatures(t){const{sublayer:e}=this,{popupEnabled:r}=e;return r?R(e,t)?void 0:new x("buildingscenelayerview3d:fetchPopupFeatures","Layer does not define a popup template",{sublayer:e}):new x("buildingscenelayerview3d:fetchPopupFeatures","Popups are disabled",{sublayer:e})}getFilters(){const t=super.getFilters();return this.addSqlFilter(t,this.parsedDefinitionExpression,this.logError),p(this._filter)&&this._filter.addFilters(t,this.view,this._controller.crsIndex,this._collection),t}createQuery(){const t={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return p(this.filter)?this.filter.createQuery(t):new $(t)}queryExtent(t,e){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(t),e==null?void 0:e.signal)}queryFeatureCount(t,e){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(t),e==null?void 0:e.signal)}queryFeatures(t,e){return this._ensureQueryEngine().executeQuery(this._ensureQuery(t),e==null?void 0:e.signal).then(r=>{if(!(r!=null&&r.features))return r;const i=this.sublayer,o=i.layer;for(const s of r.features)s.layer=o,s.sourceLayer=i;return r})}queryObjectIds(t,e){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(t),e==null?void 0:e.signal)}_ensureQueryEngine(){return m(this._queryEngine)&&(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const t=J(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new st({layerView:this,priority:ut.FEATURE_QUERY_ENGINE,spatialIndex:new nt({featureAdapter:new lt({objectIdField:this.sublayer.objectIdField,attributeStorageInfo:this.sublayer.attributeStorageInfo,getFeatureExtent:t}),toArray:()=>{const e=new Array;return this._forAllFeatures((r,i,o)=>(e.push({id:r,index:i,meta:o}),K.CONTINUE),null,L.ALL_IN_CLIPPING_AREA),e},forAllFeatures:(e,r)=>this._forAllFeatures((i,o,s)=>e({id:i,index:o,meta:s}),r,L.ALL_IN_CLIPPING_AREA),getFeatureExtent:t,sourceSpatialReference:rt(this.sublayer),viewSpatialReference:this.view.spatialReference})})}_ensureQuery(t){return this._addDefinitionExpressionToQuery(m(t)?this.createQuery():$.from(t))}};n([l()],a.prototype,"i3slayer",null),n([l()],a.prototype,"layerView",void 0),n([l()],a.prototype,"lodFactor",null),n([l({readOnly:!0})],a.prototype,"parsedFilterExpressions",null),n([l({type:T})],a.prototype,"filter",null),n([l()],a.prototype,"_filter",void 0),n([l({type:[String],readOnly:!0})],a.prototype,"filterExpressionFields",null),n([l({type:[String],readOnly:!0})],a.prototype,"requiredFields",void 0),n([l({type:[String],readOnly:!0})],a.prototype,"availableFields",null),a=n([v("esri.views.3d.layers.BuildingComponentSublayerView3D")],a);const bt=a;class F extends ht{constructor(e){super(e),this.layer=null,this.sublayerViews=null}highlight(e){throw new Error("Not implemented")}}n([l()],F.prototype,"layer",void 0),n([l()],F.prototype,"sublayerViews",void 0);const wt=O(q);let u=class extends mt(F){constructor(t){super(t),this.type="building-scene-3d",this.sublayerViews=new E,this._abortController=new AbortController,this._loadingComponents=0,this._pendingWhenSublayerViews=new Map}get filterExpression(){var i;const t=this.layer.activeFilterId,e=t!=null?this.layer.filters.find(o=>o.id===t):null,r=e!=null?(i=e.filterBlocks)==null?void 0:i.find(o=>o.filterMode.type==="solid"):null;return r?r.filterExpression:null}get filterExpressions(){const t=this.layer.activeFilterId,e=t!=null?this.layer.filters.find(r=>r.id===t):null;return e&&e.filterBlocks?e.filterBlocks.toArray().map(r=>[r.filterExpression??"",ct(r)]):[]}get updatingProgressValue(){const t=this.sublayerViews,e=this._loadingComponents+(t?t.length:0);return t.reduce((r,i)=>r+i.updatingProgress,0)/e}isUpdating(){return this._loadingComponents>0||this.sublayerViews&&this.sublayerViews.some(t=>t.updating)}initialize(){it(this.layer.spatialReference,this.view.spatialReference,this.view.viewingMode),this._initializeSubLayerViews(this.layer.sublayers,this)}destroy(){this.sublayerViews&&(this.sublayerViews.forEach(t=>t.destroy()),this.sublayerViews=null),this._abortController=N(this._abortController)}_initializeSubLayerViews(t,e){const r=this,i=this.view;t.forEach(o=>{if(!o.isEmpty)if(o.type==="building-group"){const s=new wt({sublayer:o,view:i,parent:e});this._initializeSubLayerViews(o.sublayers,s)}else o.geometryType==="mesh"&&(this._loadingComponents++,o.load({signal:this._abortController.signal}).then(()=>{const s=new bt({sublayer:o,layerView:r,view:i,parent:e});this.sublayerViews.push(s);const h=this._pendingWhenSublayerViews.get(o);if(h){for(const f of h)f.resolve(s);this._pendingWhenSublayerViews.delete(o)}this.handles.add([V(()=>s.updating,()=>this.notifyChange("updating"),I),V(()=>s.updatingProgress,()=>this.notifyChange("updatingProgressValue"),I)])}).catch(s=>{U(s)||c.getLogger(this.declaredClass).error(`Error while creating view for sublayer ${o.id}
Layer: ${this.layer.url}
`,s)}).then(()=>{this._loadingComponents--,this.notifyChange("updating"),this.notifyChange("updatingProgressValue")}))})}getGraphicFromIntersectorTarget(t){for(const e of this.sublayerViews.items)if(e.sublayer.uid===t.sublayerUid)return e.getGraphicFromIntersectorTarget(t);return null}async fetchPopupFeatures(t,e){if(m(e)||!e.clientGraphics||e.clientGraphics.length===0)return[];const r=G(e.clientGraphics,o=>o.sourceLayer),i=[];for(const[o,s]of r){const h=this._findComponent(o);p(h)&&i.push(h.fetchPopupFeatures(t,{...e,clientGraphics:s}))}return B(i).then(o=>o.flat())}whenGraphicBounds(t){const e=this._findComponent(t.sourceLayer);return m(e)?Promise.reject():e.whenGraphicBounds(t)}getAABBFromIntersectorTarget(t){for(const e of this.sublayerViews.items)if(e.sublayer.uid===t.sublayerUid)return e.getAABBFromIntersectorTarget(t);return null}async whenSublayerView(t){const e=this._findComponent(t);if(p(e))return e;const r=this._pendingWhenSublayerViews.get(t),i=j();return r?r.push(i):this._pendingWhenSublayerViews.set(t,[i]),i.promise}_findComponent(t){return this.sublayerViews.find(e=>t===e.sublayer)}highlight(t){t instanceof _?t=[t]:t instanceof E&&(t=t.toArray());const e=[];if(Array.isArray(t)&&t.length>0&&t[0]instanceof _){const r=t,i=new Map;for(const o of r){let s=i.get(o.sourceLayer);s==null&&(s=[],i.set(o.sourceLayer,s)),s.push(o)}this.sublayerViews.forEach(o=>{const s=i.get(o.sublayer);s&&e.push(o.highlight(s))})}return Q(e)}getUsedMemory(){return this.sublayerViews.reduce((t,e)=>t+e.getUsedMemory(),0)}getUnloadedMemory(){return this.sublayerViews.reduce((t,e)=>t+e.getUnloadedMemory(),0)}ignoresMemoryFactor(){return!1}};n([l()],u.prototype,"sublayerViews",void 0),n([l({readOnly:!0})],u.prototype,"filterExpression",null),n([l({readOnly:!0})],u.prototype,"filterExpressions",null),n([l(dt)],u.prototype,"updatingProgress",void 0),n([l({readOnly:!0,dependsOn:[]})],u.prototype,"updatingProgressValue",null),u=n([v("esri.views.3d.layers.BuildingSceneLayerView3D")],u);const un=u;export{un as default};
