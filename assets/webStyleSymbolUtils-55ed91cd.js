import{e as x,z as d,A as $}from"./symbols-fa594797.js";import{c as z,a as h}from"./devEnvironmentUtils-5002a058.js";import{a as w}from"./Error-653283ae.js";import{f as A,r as N}from"./typedArrayUtil-a8b5b3e9.js";import{j as u,O as S}from"./request-d3e98716.js";import{j as U}from"./Portal-8b65c9c4.js";import{c as g}from"./persistableUrlUtils-a16d0f55.js";import{p as j}from"./jsonUtils-d7db3dc7.js";import{c as F,d as M,b as D,p as O,w as R}from"./styleUtils-4adfed9e.js";import"./ensureType-cf29afa9.js";import"./string-cdf077e6.js";import"./cast-7928d7aa.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-6684e352.js";import"./CIMSymbol-1379245a.js";import"./enumeration-3c281341.js";import"./jsonMap-c1f958cf.js";import"./Extent-69509002.js";import"./Ellipsoid-89682c5e.js";import"./fieldUtils-31bfecd2.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./geometry-5a216427.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./Symbol-fc4312a4.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./aaBoundingRect-4a760199.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./Collection-78126e82.js";import"./Evented-515b9d9c.js";import"./SimpleObservable-7dcdef1d.js";import"./collectionUtils-3831b7c4.js";import"./Clonable-ba795b08.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./locale-30120714.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";function Ft(t,r,o,m){return t.name?t.styleName&&t.styleName==="Esri2DPointSymbolsStyle"?W(t,r,m):F(t,r,m).then(a=>T(A(a),t.name,r,o,m)):Promise.reject(new w("symbolstyleutils:style-symbol-reference-name-missing","Missing name in style symbol reference"))}function T(t,r,o,m,a){var b;const y=t.data,l=o&&N(o.portal)?o.portal:U.getDefault(),c={portal:l,url:u(t.baseUrl),origin:"portal-item"},p=y.items.find(e=>e.name===r);if(!p){const e=`The symbol name '${r}' could not be found`;return Promise.reject(new w("symbolstyleutils:symbol-name-not-found",e,{symbolName:r}))}let n=g(M(p,m),c),s=((b=p.thumbnail)==null?void 0:b.href)??null;const f=p.thumbnail&&p.thumbnail.imageData;z()&&(n=h(n)??"",s=h(s));const P={portal:l,url:u(S(n)),origin:"portal-item"};return D(n,a).then(e=>{const E=m==="cimRef"?O(e.data):e.data,i=j(E,P);if(i&&x(i)){if(s){const v=g(s,c);i.thumbnail=new d({url:v})}else f&&(i.thumbnail=new d({url:`data:image/png;base64,${f}`}));t.styleUrl?i.styleOrigin=new $({portal:o.portal,styleUrl:t.styleUrl,name:r}):t.styleName&&(i.styleOrigin=new $({portal:o.portal,styleName:t.styleName,name:r}))}return i})}function W(t,r,o){const m=R.replace(/\{SymbolName\}/gi,t.name),a=N(r.portal)?r.portal:U.getDefault();return D(m,o).then(y=>{const l=O(y.data);return j(l,{portal:a,url:u(S(m)),origin:"portal-item"})})}export{T as fetchSymbolFromStyle,Ft as resolveWebStyleSymbol};
