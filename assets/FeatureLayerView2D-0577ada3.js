import{e as l,y as c,n as q,m as K}from"./cast-7928d7aa.js";import{g as N}from"./Graphic-b46e2684.js";import{e as O,r as p,o as k,t as Y}from"./typedArrayUtil-a8b5b3e9.js";import"./ensureType-cf29afa9.js";import"./geometry-5a216427.js";import{j as Z}from"./Collection-78126e82.js";import{a as V,s as x}from"./Error-653283ae.js";import{h as R,y as ee}from"./string-cdf077e6.js";import{D as te,g as b,b as ie,x as re,j as E}from"./promiseUtils-6684e352.js";import{l as A,w as se,h as ae,j as oe}from"./reactiveUtils-f41a4e00.js";import{d as z}from"./EffectView-d3bf37ed.js";import{f as ne,b as le,m as ue,g as he,d as ce,y as de}from"./FeatureReductionLayer-4077b2ae.js";import{o as pe,k as ye,a as ge}from"./Extent-69509002.js";import P from"./FeatureSet-0573546e.js";import{x as Q}from"./Query-ff8c2cfb.js";import{S as fe}from"./definitions-2d0dd0cd.js";import{y as me}from"./LayerView2D-9c021b91.js";import{F as _e}from"./schemaUtils-615a0d3f.js";import{_ as j}from"./preload-helper-41c905a7.js";import{h as ve}from"./rendererUtils-3275688e.js";import{l as we,a as be}from"./TileStore-787dbea4.js";import{_ as Re}from"./Promise-dfdee8ba.js";import{u as Se}from"./workers-898a7c4c.js";import{e as qe}from"./util-38c30a14.js";import{e as M}from"./TileKey-0750ad58.js";import{A as xe}from"./FeatureLayerView-dbb9730b.js";import{u as Ee}from"./LayerView-b83ced89.js";import{i as Ce}from"./RefreshableLayerView-1faf24ee.js";import{l as Oe}from"./capabilities-3636c6a4.js";import"./nextTick-3ee5a785.js";import"./PopupTemplate-6eb885db.js";import"./Clonable-ba795b08.js";import"./fieldUtils-31bfecd2.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./jsonMap-c1f958cf.js";import"./enumeration-3c281341.js";import"./number-347a3a44.js";import"./locale-30120714.js";import"./Identifiable-aa6d459d.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./aaBoundingRect-4a760199.js";import"./request-d3e98716.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./collectionUtils-3831b7c4.js";import"./Portal-8b65c9c4.js";import"./Loadable-48bc1293.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./Ellipsoid-89682c5e.js";import"./jsonUtils-03c4af61.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./Evented-515b9d9c.js";import"./SimpleObservable-7dcdef1d.js";import"./mat3-3fc68e72.js";import"./vec2f64-30dc1443.js";import"./context-util-1e3c8cfc.js";import"./enums-64ab819c.js";import"./Texture-e79b14e7.js";import"./VertexElementDescriptor-2925c6af.js";import"./parser-2b40deea.js";import"./mat4f32-77b3d8ac.js";import"./mat4-44a0988f.js";import"./BlendLayer-d8293c8d.js";import"./TimeExtent-744afd75.js";import"./UniqueValueRenderer-103ec66d.js";import"./LegendOptions-e65e7a9c.js";import"./diffUtils-1ac65748.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./compilerUtils-034cacb8.js";import"./lengthUtils-d2d33f94.js";import"./unitUtils-47abac71.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./jsonUtils-c56f8821.js";import"./DictionaryLoader-2cf5144e.js";import"./LRUCache-14115d91.js";import"./MemCache-4b976a8b.js";import"./deprecate-b9088bd3.js";import"./heatmapUtils-84e8c43b.js";import"./vec4f64-e407da96.js";import"./OperationalLayer-24e6fa34.js";import"./ElevationInfo-ce9cacc2.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./utils-26560131.js";import"./mat3f32-d3d088e8.js";import"./enums-4ca4641f.js";import"./MaterialKey-406a59ab.js";import"./alignmentUtils-ae955d28.js";import"./Utils-b2b4cf0c.js";import"./number-954e4ab6.js";import"./enums-4b2a86a0.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./visualVariablesUtils-496ec144.js";import"./createSymbolSchema-41fdd7db.js";import"./cimAnalyzer-721530a4.js";import"./fontUtils-b94d5e06.js";import"./BidiEngine-836b7ef6.js";import"./utils-c81a5c52.js";import"./mat2d-d0b91e3e.js";import"./vec2-2cef68de.js";import"./vec2f32-461e65a9.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-a7532499.js";import"./quantizationUtils-33aba427.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-fa8308d2.js";import"./ExpandedCIM-676cf2ac.js";import"./Queue-3a0c055d.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Connection-a681777e.js";import"./assets-0b172f07.js";import"./intl-f1e98361.js";import"./messages-be07754e.js";import"./ExportImageParameters-f328a234.js";import"./HandleOwner-e1406413.js";import"./sublayerUtils-ba7f61bc.js";import"./popupUtils-e8f3d062.js";let F=class extends N{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.sourceLayer&&this.sourceLayer.featureReduction;return t&&"popupTemplate"in t&&t.popupEnabled?t.popupTemplate:null}getObjectId(){return this.attributes.aggregateId}};l([c({type:Boolean})],F.prototype,"isAggregate",void 0),F=l([q("esri.AggregateGraphic")],F);const J=F;let g=class extends K{constructor(e){super(e),this._filter=null,this.duration=R("mapview-transitions-duration"),this._excludedEffectView=new z(e),this._includedEffectView=new z(e)}get excludedEffects(){return this._excludedEffectView.effects}set featureEffect(e){this._get("featureEffect")!==e&&this._transitionTo(e)}get filter(){var e;return this._filter||((e=O(this.featureEffect))==null?void 0:e.filter)||null}get hasEffects(){return this._excludedEffectView.hasEffects||this._includedEffectView.hasEffects}get includedEffects(){return this._includedEffectView.effects}set scale(e){this._set("scale",e),this._excludedEffectView.scale=e,this._includedEffectView.scale=e}get transitioning(){return this._excludedEffectView.transitioning||this._includedEffectView.transitioning}transitionStep(e,t){this._set("scale",t),this.transitioning?(this._includedEffectView.transitionStep(e,t),this._excludedEffectView.transitionStep(e,t),this.transitioning||(this._filter=null)):(this._excludedEffectView.scale=t,this._includedEffectView.scale=t)}endTransitions(){this._includedEffectView.endTransitions(),this._excludedEffectView.endTransitions(),this._filter=null}_transitionTo(e){const t=this._get("featureEffect"),i=O(e),r=O(i==null?void 0:i.includedEffect),s=O(i==null?void 0:i.excludedEffect),o=this._includedEffectView.canTransitionTo(r)&&this._excludedEffectView.canTransitionTo(s);this._includedEffectView.effect=r,this._excludedEffectView.effect=s,this._set("featureEffect",i),this._filter=(i==null?void 0:i.filter)||(t==null?void 0:t.filter)||null,o||this.endTransitions()}};l([c()],g.prototype,"_filter",void 0),l([c()],g.prototype,"_excludedEffectView",void 0),l([c()],g.prototype,"_includedEffectView",void 0),l([c()],g.prototype,"duration",void 0),l([c()],g.prototype,"excludedEffects",null),l([c()],g.prototype,"featureEffect",null),l([c()],g.prototype,"filter",null),l([c()],g.prototype,"hasEffects",null),l([c()],g.prototype,"includedEffects",null),l([c({value:0})],g.prototype,"scale",null),l([c()],g.prototype,"transitioning",null),g=l([q("esri.layers.effects.FeatureEffectView")],g);const Ie=g;let I=class extends P{constructor(){super(...arguments),this.features=[]}readFeatures(e,t){var s;const i=ye.fromJSON(t.spatialReference),r=[];for(let o=0;o<e.length;o++){const a=e[o],u=J.fromJSON(a),n=a.geometry&&a.geometry.spatialReference;p(u.geometry)&&!n&&(u.geometry.spatialReference=i);const d=a.aggregateGeometries,h=u.aggregateGeometries;if(d&&p(h))for(const m in h){const _=h[m],f=(s=d[m])==null?void 0:s.spatialReference;p(_)&&!f&&(_.spatialReference=i)}r.push(u)}return r}};l([c({type:[J],json:{write:!0}})],I.prototype,"features",void 0),l([pe("features")],I.prototype,"readFeatures",null),I=l([q("esri.rest.support.AggregateFeatureSet")],I);const Te=I;async function Fe(e,t){if(!e)return null;switch(e.type){case"symbol":return new(await j(()=>import("./SymbolTileRenderer-7165146e.js"),["./SymbolTileRenderer-7165146e.js","./cast-7928d7aa.js","./typedArrayUtil-a8b5b3e9.js","./string-cdf077e6.js","./Error-653283ae.js","./ensureType-cf29afa9.js","./nextTick-3ee5a785.js","./promiseUtils-6684e352.js","./aaBoundingRect-4a760199.js","./mathUtils-2519596a.js","./vec3-a020a6f6.js","./vec3f64-2f9cef06.js","./common-c186b691.js","./vec4-790471c0.js","./Extent-69509002.js","./Ellipsoid-89682c5e.js","./CircularArray-cf56c6b0.js","./mat2d-d0b91e3e.js","./enums-4ca4641f.js","./Utils-b2b4cf0c.js","./number-954e4ab6.js","./enums-4b2a86a0.js","./enums-64ab819c.js","./Texture-e79b14e7.js","./context-util-1e3c8cfc.js","./VertexElementDescriptor-2925c6af.js","./FeatureContainer-f14037ae.js","./mat3-3fc68e72.js","./mat3f32-d3d088e8.js","./definitions-2d0dd0cd.js","./EffectView-d3bf37ed.js","./Evented-515b9d9c.js","./TileKey-0750ad58.js","./vec2f64-30dc1443.js","./parser-2b40deea.js","./colorUtils-639f4d25.js","./screenUtils-410d12c0.js","./mat4f32-77b3d8ac.js","./mat4-44a0988f.js","./Queue-3a0c055d.js","./visualVariablesUtils-8295a400.js","./visualVariablesUtils-496ec144.js","./FramebufferObject-50e1b68f.js","./TileContainer-07bccb79.js","./WGLContainer-14075e1a.js","./WGLBrushVTLSymbol-dcfd88b4.js","./StyleDefinition-7d58136b.js","./vec2f32-461e65a9.js","./config-1337d16e.js","./GeometryUtils-c093d234.js","./pixelUtils-c27b13a1.js","./ShaderCompiler-77d0dcb6.js","./ProgramTemplate-afbd57f8.js","./MaterialKey-406a59ab.js","./alignmentUtils-ae955d28.js","./utils-26560131.js","./heatmapUtils-84e8c43b.js","./vec4f64-e407da96.js","./Color-a42a8267.js","./heatmapTextureUtils-d1d96768.js","./reactiveUtils-f41a4e00.js","./earcut-58237617.js","./vec2-2cef68de.js","./featureConversionUtils-01cdde8a.js","./jsonUtils-03c4af61.js","./Polyline-bf268e7b.js","./OptimizedFeature-3de538c1.js","./OptimizedFeatureSet-1d1ac4b9.js","./unitUtils-47abac71.js","./jsonMap-c1f958cf.js","./lengthUtils-d2d33f94.js","./capabilities-3636c6a4.js","./BufferPool-f19f4e1f.js","./rendererUtils-3275688e.js","./BaseTileRenderer-5775f08c.js","./HandleOwner-e1406413.js"],import.meta.url)).default(t);case"heatmap":return new(await j(()=>import("./HeatmapTileRenderer-0d06f00d.js"),["./HeatmapTileRenderer-0d06f00d.js","./cast-7928d7aa.js","./typedArrayUtil-a8b5b3e9.js","./string-cdf077e6.js","./Error-653283ae.js","./ensureType-cf29afa9.js","./nextTick-3ee5a785.js","./promiseUtils-6684e352.js","./heatmapUtils-84e8c43b.js","./mathUtils-2519596a.js","./vec3-a020a6f6.js","./vec3f64-2f9cef06.js","./common-c186b691.js","./vec4-790471c0.js","./screenUtils-410d12c0.js","./vec4f64-e407da96.js","./BitmapTileContainer-6fc690f1.js","./aaBoundingRect-4a760199.js","./Extent-69509002.js","./Ellipsoid-89682c5e.js","./mat3f32-d3d088e8.js","./Bitmap-c332c5e6.js","./mat3-3fc68e72.js","./vec2f32-461e65a9.js","./EffectView-d3bf37ed.js","./Evented-515b9d9c.js","./TileKey-0750ad58.js","./vec2f64-30dc1443.js","./context-util-1e3c8cfc.js","./enums-64ab819c.js","./Texture-e79b14e7.js","./VertexElementDescriptor-2925c6af.js","./parser-2b40deea.js","./colorUtils-639f4d25.js","./mat4f32-77b3d8ac.js","./mat4-44a0988f.js","./WGLContainer-14075e1a.js","./WGLBrushVTLSymbol-dcfd88b4.js","./definitions-2d0dd0cd.js","./enums-4ca4641f.js","./number-954e4ab6.js","./FramebufferObject-50e1b68f.js","./StyleDefinition-7d58136b.js","./enums-4b2a86a0.js","./config-1337d16e.js","./GeometryUtils-c093d234.js","./pixelUtils-c27b13a1.js","./Utils-b2b4cf0c.js","./ShaderCompiler-77d0dcb6.js","./ProgramTemplate-afbd57f8.js","./MaterialKey-406a59ab.js","./alignmentUtils-ae955d28.js","./utils-26560131.js","./Color-a42a8267.js","./heatmapTextureUtils-d1d96768.js","./reactiveUtils-f41a4e00.js","./earcut-58237617.js","./vec2-2cef68de.js","./featureConversionUtils-01cdde8a.js","./jsonUtils-03c4af61.js","./Polyline-bf268e7b.js","./OptimizedFeature-3de538c1.js","./OptimizedFeatureSet-1d1ac4b9.js","./TileContainer-07bccb79.js","./BaseTileRenderer-5775f08c.js","./HandleOwner-e1406413.js"],import.meta.url)).default(t)}}function $(e){return e.some(t=>t.globalId)}function C(e){return e.filter(t=>!t.error).map(t=>t.objectId??t.globalId)}function B(e,t){const i=new Set(e);for(const r of t.values())i.add(r);return i}function D(e,t){const i=new Set(e);for(const r of t.values())i.delete(r);return i}let U=class extends K{constructor(t){super(t),this._hasGlobalIds=!1}normalizeCtorArgs(t){return this._queueProcessor=new we({concurrency:1,process:t.process}),{}}destroy(){this.clear()}get updating(){return this._queueProcessor.length>0}clear(){this._queueProcessor.clear()}push(t){const i=this._queueProcessor,r=i.last();switch(t.type){case"update":case"refresh":if((r==null?void 0:r.type)===t.type)return;i.push(t).finally(()=>this.notifyChange("updating"));break;case"edit":{const s=(r==null?void 0:r.type)==="processed-edit"?r:null;s&&i.popLast();const o=this._mergeEdits(s,t);for(const a of o)i.push(a).finally(()=>this.notifyChange("updating"));break}}this.notifyChange("updating")}_mergeEdits(t,i){const{addedFeatures:r,deletedFeatures:s,updatedFeatures:o}=i.edits;if(this._hasGlobalIds=this._hasGlobalIds||$(r)||$(o)||$(s),this._hasGlobalIds)return[t,{type:"processed-edit",edits:{addOrModified:[...r,...o],removed:s}}];const a=new Set(C((t==null?void 0:t.edits.addOrModified)??[])),u=new Set(C((t==null?void 0:t.edits.removed)??[])),n=new Set([...C(r),...C(o)]),d=new Set(C(s));return[{type:"processed-edit",edits:{addOrModified:Array.from(B(D(a,d),n)).map(h=>({objectId:h})),removed:Array.from(B(D(u,n),d)).map(h=>({objectId:h}))}}]}};l([c({readOnly:!0})],U.prototype,"updating",null),U=l([q("esri.views.2d.layers.support.FeatureCommandQueue")],U);const Ue=U;function ke(e){return Array.isArray(e)}let S=class extends Re{constructor(e){super(e),this._startupResolver=te(),this.isReady=!1}initialize(){this._controller=new AbortController,this.addResolvingPromise(this._startWorker(this._controller.signal))}destroy(){this._controller.abort(),this._connection&&this._connection.close()}set tileRenderer(e){this.client.tileRenderer=e}get closed(){return this._connection.closed}async startup(e,t,i,r){await this.when();const s=this._controller.signal,o=ke(i.source)?{transferList:i.source,signal:s}:void 0,a={service:i,config:t,tileInfo:e.tileInfo.toJSON(),tiles:r};await this._connection.invoke("startup",a,o),this._startupResolver.resolve(),this._set("isReady",!0)}async updateTiles(e){return await this._startupResolver.promise,b(this._connection.invoke("updateTiles",e))}async update(e){const t={config:e};return await this._startupResolver.promise,this._connection.invoke("update",t)}async applyUpdate(e){return await this._startupResolver.promise,this._connection.invoke("applyUpdate",e)}async setHighlight(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.setHighlight",e))}async stop(){if(await this._startupResolver.promise,!this.closed)return b(this._connection.invoke("stop"))}async refresh(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.refresh",e))}async querySummaryStatistics(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.querySummaryStatistics",{query:e.toJSON(),params:t},i)}async queryAggregateSummaryStatistics(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateSummaryStatistics",{query:e.toJSON(),params:t},i)}async queryUniqueValues(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryUniqueValues",{query:e.toJSON(),params:t},i)}async queryAggregateUniqueValues(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateUniqueValues",{query:e.toJSON(),params:t},i)}async queryClassBreaks(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryClassBreaks",{query:e.toJSON(),params:t},i)}async queryAggregateClassBreaks(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateClassBreaks",{query:e.toJSON(),params:t},i)}async queryHistogram(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryHistogram",{query:e.toJSON(),params:t},i)}async queryAggregateHistogram(e,t,i){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateHistogram",{query:e.toJSON(),params:t},i)}async queryFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatures",e.toJSON(),t)}async queryVisibleFeatures(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryVisibleFeatures",e.toJSON(),t)}async queryObjectIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryObjectIds",e.toJSON(),t)}async queryFeatureCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryFeatureCount",e.toJSON(),t)}async queryExtent(e,t){return this._connection.invoke("controller.queryExtent",e.toJSON(),t)}async queryLatestObservations(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryLatestObservations",e.toJSON(),t)}async queryStatistics(e){return await this._startupResolver.promise,this._connection.invoke("controller.queryStatistics",e)}async queryAggregates(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregates",e.toJSON(),t)}async queryAggregateCount(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateCount",e.toJSON(),t)}async queryAggregateIds(e,t){return await this._startupResolver.promise,this._connection.invoke("controller.queryAggregateIds",e.toJSON(),t)}async getObjectId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getObjectId",e)}async getDisplayId(e){return await this._startupResolver.promise,this._connection.invoke("controller.getDisplayId",e)}async getFeatures(e){return await this._startupResolver.promise,this._connection.invoke("controller.getFeatures",e)}async getAggregates(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregates")}async getAggregateValueRanges(){return await this._startupResolver.promise,this._connection.invoke("controller.getAggregateValueRanges")}async mapValidDisplayIds(e){return await this._startupResolver.promise,this._connection.invoke("controller.mapValidDisplayIds",e)}async onEdits(e){return await this._startupResolver.promise,b(this._connection.invoke("controller.onEdits",e))}async enableEvent(e,t){return await this._startupResolver.promise,b(this._connection.invoke("controller.enableEvent",{name:e,value:t}))}pauseStream(){return b(this._connection.invoke("controller.pauseStream"))}resumeStream(){return b(this._connection.invoke("controller.resumeStream"))}async _startWorker(e){try{this._connection=await Se("Pipeline",{client:this.client,strategy:"dedicated",signal:e})}catch(t){ie(t)}}};l([c()],S.prototype,"isReady",void 0),l([c({constructOnly:!0})],S.prototype,"client",void 0),l([c()],S.prototype,"tileRenderer",null),S=l([q("esri.views.2d.layers.support.FeatureLayerProxy")],S);const Ve=S,Ae=1e-6;class $e{constructor(t){this._tiles=new Map,this.buffer=0,this.acquireTile=t.acquireTile,this.releaseTile=t.releaseTile,this.tileInfoView=t.tileInfoView,this.buffer=t.buffer}destroy(){}clear(){this._tiles.forEach(t=>this._releaseTile(t))}tileKeys(){const t=[];return this._tiles.forEach((i,r)=>t.push(r)),t}update(t){const i=this.tileInfoView.getTileCoverage(t.state,this.buffer,"closest"),{spans:r,lodInfo:s}=i,{level:o}=s,a=[],u=[],n=new Set,d=new Set;for(const{row:h,colFrom:m,colTo:_}of r)for(let f=m;f<=_;f++){const w=M.getId(o,h,s.normalizeCol(f),s.getWorldForColumn(f)),v=this._getOrAcquireTile(a,w);n.add(w),v.isReady?v.visible=!0:d.add(v.key)}return d.forEach(h=>this._addPlaceholders(n,h)),this._tiles.forEach(h=>{n.has(h.key.id)||(u.push(h.key.id),this._releaseTile(h))}),be.pool.release(i),{hasMissingTiles:d.size>0,added:a,removed:u}}_getOrAcquireTile(t,i){if(!this._tiles.has(i)){const r=this.acquireTile(new M(i));t.push(i),this._tiles.set(i,r),r.visible=!1}return this._tiles.get(i)}_getTile(t){return this._tiles.get(t)}_releaseTile(t){this._tiles.delete(t.key.id),this.releaseTile(t)}_addPlaceholders(t,i){const r=this._addPlaceholderChildren(t,i);Math.abs(1-r)<Ae||this._addPlaceholderParent(t,i)||(this._getTile(i.id).visible=!0)}_addPlaceholderChildren(t,i){let r=0;return this._tiles.forEach(s=>{r+=this._addPlaceholderChild(t,s,i)}),r}_addPlaceholderChild(t,i,r){return i.key.level<=r.level||!i.hasData||!r.contains(i.key)?0:(i.visible=!0,t.add(i.key.id),1/(1<<2*(i.key.level-r.level)))}_addPlaceholderParent(t,i){let r=i.getParentKey(),s=0,o=null;for(;p(r);){if(t.has(r.id))return!0;const a=this._getTile(r.id);if(a!=null&&a.isReady){for(const u of t){const n=this._getTile(u);r.contains(n.key)&&(n.visible=!1)}return a.visible=!0,t.add(a.key.id),!0}a!=null&&a.hasData&&a.patchCount>s&&(s=a.patchCount,o=a),r=r.getParentKey()}return!!o&&(o.visible=!0,t.add(o.key.id),!0)}}function G(e){return e&&"openPorts"in e}let y=class extends xe(Ce(me(Ee))){constructor(){super(...arguments),this._pipelineIsUpdating=!0,this._commandsQueue=new Ue({process:e=>{switch(e.type){case"processed-edit":return this._doEdit(e);case"refresh":return this._doRefresh(e.dataChanged);case"update":return this._doUpdate()}}}),this._visibilityOverrides=new Set,this._highlightIds=new Map,this._updateHighlight=re(async()=>this._proxy.setHighlight(Array.from(this._highlightIds.keys()))),this._uploadsLocked=!1,this._needsClusterSizeUpdate=!1,this.featureEffectView=new Ie,this._lastDefinitionExpression=null}destroy(){var e;k(this._updateClusterSizeTask,t=>t.remove()),(e=this._proxy)==null||e.destroy(),this._commandsQueue.destroy()}initialize(){this.addResolvingPromise(Promise.all([this._initProxy(),this._initServiceOptions()])),this.handles.add([this.on("valueRangesChanged",e=>{this._set("_aggregateValueRanges",e.valueRanges)}),A(()=>this.featureEffect,e=>{this.featureEffectView.featureEffect=e},se)]),this.featureEffectView.endTransitions()}async _initProxy(){const e=this.layer;if("isTable"in e&&e.isTable)throw new V("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:this.layer});const t=e.type==="feature"||e.type==="subtype-group",i="capabilities"in e&&e.capabilities.operations.supportsQuery;if(t&&!i)throw new V("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e});this._proxy&&this._proxy.destroy();const r=this._createClientOptions();return this._set("_proxy",new Ve({client:r})),this._proxy.when()}async _initServiceOptions(){return this._set("_serviceOptions",await this._createServiceOptions()),this._serviceOptions}get orderByFields(){return this._serviceOptions.type!=="stream"&&this._serviceOptions.orderByFields}get labelsVisible(){const e=this.layer.type==="subtype-group"?this.layer.sublayers.items:[this.layer];return!this.suspended&&e.some(t=>t.labelingInfo&&t.labelsVisible)}get queryMode(){return this._serviceOptions.type}get renderingConfigHash(){var H,L;if(!this.layer)return null;const e=this.availableFields,t=this.layer,i=this.view.floors,{definitionExpression:r}=t,s=this.layer.type!=="subtype-group"&&this.layer.labelsVisible&&this.layer.labelingInfo,o="renderer"in t&&t.renderer,a="gdbVersion"in t?t.gdbVersion:void 0,u="historicMoment"in t?(H=t.historicMoment)==null?void 0:H.getTime():void 0,{timeExtent:n}=this,d="customParameters"in t?JSON.stringify(t.customParameters):void 0,h="apiKey"in t?t.apiKey:void 0,m=t.type==="stream"?`${JSON.stringify(t.geometryDefinition)}${t.definitionExpression}`:null,_=JSON.stringify(this.clips),f="featureReduction"in t?(L=t.featureReduction)==null?void 0:L.toJSON():null,w="orderBy"in this.layer&&JSON.stringify(this.layer.orderBy),v="sublayers"in this.layer&&this.layer.sublayers.items.reduce((X,T)=>X+`${T.visible?1:0}.${JSON.stringify(T.renderer)}.${T.labelsVisible}
.${JSON.stringify(T.labelingInfo)}`,""),W="subtypeCode"in this.layer&&this.layer.subtypeCode;return JSON.stringify({orderBy:w,sublayerHash:v,subtypeCode:W,filterHash:p(this.filter)&&this.filter.toJSON(),effectHash:p(this.featureEffect)&&this.featureEffect.toJSON(),streamFilter:m,gdbVersion:a,definitionExpression:r,historicMoment:u,availableFields:e,renderer:o,labelingInfo:s,timeExtent:n,floors:i,clipsHash:_,featureReduction:f,customParameters:d,apiKey:h})}highlight(e){let t;return e instanceof N?t=[e.getObjectId()]:typeof e=="number"||typeof e=="string"?t=[e]:Z.isCollection(e)&&e.length>0?t=e.map(i=>i==null?void 0:i.getObjectId()).toArray():Array.isArray(e)&&e.length>0&&(t=typeof e[0]=="number"||typeof e[0]=="string"?e:e.map(i=>i==null?void 0:i.getObjectId())),t=t==null?void 0:t.filter(i=>i!=null),t&&t.length?(this._addHighlight(t),{remove:()=>this._removeHighlight(t)}):{remove:()=>{}}}hasHighlight(){return!!this._highlightIds.size}async hitTest(e,t){if(!this.tileRenderer)return null;const i=await this.tileRenderer.hitTest(t);if(i.length===0)return null;const{features:r,aggregates:s}=await this._proxy.getFeatures(i);return[...s.map(o=>this._createGraphicHit(e,J.fromJSON(o))),...r.map(o=>this._createGraphicHit(e,N.fromJSON(o)))]}queryStatistics(){return this._proxy.queryStatistics()}async querySummaryStatistics(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.querySummaryStatistics(this._cleanUpQuery(e),r,i)}async queryAggregateSummaryStatistics(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryAggregateSummaryStatistics(this._cleanUpAggregateQuery(e),r,i)}async queryUniqueValues(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryUniqueValues(this._cleanUpQuery(e),r,i)}async queryAggregateUniqueValues(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryAggregateUniqueValues(this._cleanUpAggregateQuery(e),r,i)}async queryClassBreaks(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryClassBreaks(this._cleanUpQuery(e),r,i)}async queryAggregateClassBreaks(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryAggregateClassBreaks(this._cleanUpAggregateQuery(e),r,i)}async queryHistogram(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryHistogram(this._cleanUpQuery(e),r,i)}async queryAggregateHistogram(e,t,i){const r={...t,scale:this.view.scale};return this._proxy.queryAggregateHistogram(this._cleanUpAggregateQuery(e),r,i)}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then(i=>{const r=P.fromJSON(i);return r.features.forEach(s=>this._setLayersForFeature(s)),r})}queryVisibleFeatures(e,t){return this._proxy.queryVisibleFeatures(this._cleanUpQuery(e),t).then(i=>{const r=P.fromJSON(i);return r.features.forEach(s=>this._setLayersForFeature(s)),r})}async queryAggregates(e,t){const i=await this._proxy.queryAggregates(this._cleanUpAggregateQuery(e),t),r=Te.fromJSON(i);return r.features.forEach(s=>this._setLayersForFeature(s)),r}queryAggregateIds(e,t){return this._proxy.queryAggregateIds(this._cleanUpAggregateQuery(e),t)}queryAggregateCount(e,t){return this._proxy.queryAggregateCount(this._cleanUpAggregateQuery(e),t)}queryAggregateJSON(e,t){return this._proxy.queryAggregates(this._cleanUpAggregateQuery(e),t)}queryFeaturesJSON(e,t){return this._proxy.queryFeatures(this._cleanUpQuery(e),t)}queryObjectIds(e,t){return this._proxy.queryObjectIds(this._cleanUpQuery(e),t)}queryFeatureCount(e,t){return this._proxy.queryFeatureCount(this._cleanUpQuery(e),t)}queryExtent(e,t){return this._proxy.queryExtent(this._cleanUpQuery(e),t).then(i=>({count:i.count,extent:ge.fromJSON(i.extent)}))}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this._tileStrategy||!this.tileRenderer)return;const{hasMissingTiles:t,added:i,removed:r}=this._tileStrategy.update(e);(i.length||r.length)&&this._proxy.updateTiles({added:i,removed:r}),t&&this.requestUpdate(),this.notifyChange("updating")}attach(){this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._tileStrategy=new $e({acquireTile:e=>this._acquireTile(e),releaseTile:e=>this._releaseTile(e),tileInfoView:this.view.featuresTilingScheme,buffer:0}),this.handles.add(A(()=>this.renderingConfigHash,()=>this._update(),ae),"attach"),this.layer.type!=="stream"&&this.handles.add(this.layer.on("edits",e=>this._edit(e)),"attach")}detach(){var e;this._commandsQueue.clear(),(e=this._proxy)==null||e.stop(),this.container.removeAllChildren(),this.handles.remove("attach"),this.tileRenderer&&(this.tileRenderer.uninstall(this.container),this.tileRenderer=null),this._tileStrategy&&(this._tileStrategy.destroy(),this._tileStrategy=null),this._tileRendererHash=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){var u;const e="renderer"in this.layer&&this.layer.renderer!=null,t=this._commandsQueue.updating,i=this._updatingRequiredFieldsPromise!=null,r=!this._proxy||!this._proxy.isReady,s=this._pipelineIsUpdating,o=this.tileRenderer==null||((u=this.tileRenderer)==null?void 0:u.updating),a=e&&(t||i||r||s||o);return R("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${a}
  -> hasRenderer ${e}
  -> hasPendingCommand ${t}
  -> updatingRequiredFields ${i}
  -> updatingProxy ${r}
  -> updatingPipeline ${s}
  -> updatingTileRenderer ${o}
`),a}_createClientOptions(){return{setUpdating:e=>{this._set("_pipelineIsUpdating",e)},emitEvent:e=>{this.emit(e.name,e.event)}}}async _detectQueryMode(e){var o;const t="path"in e,i="editingInfo"in this.layer&&((o=this.layer.editingInfo)==null?void 0:o.lastEditDate),r=!!this.layer.refreshInterval,s=!i&&r;if(t&&(this.layer.type==="feature"||this.layer.type==="subtype-group")&&this.layer.geometryType==="point"&&this.layer.capabilities.query.supportsPagination&&!this.layer.capabilities.operations.supportsEditing&&!s&&R("featurelayer-snapshot-enabled"))try{const a=await this.layer.queryFeatureCount();if(a<=R("featurelayer-snapshot-point-min-threshold"))return{mode:"snapshot",featureCount:a};const u=R("featurelayer-snapshot-point-max-threshold"),n=R("featurelayer-snapshot-point-coverage"),d=this.view.extent,h=O(this.layer.fullExtent),m=h==null?void 0:h.clone().intersection(d),_=p(m)?m.width*m.height:0,f=(h==null?void 0:h.width)*(h==null?void 0:h.height),w=f===0?0:_/f;if(a<=u&&w>=n)return{mode:"snapshot",featureCount:a}}catch(a){x.getLogger(this.declaredClass).warn("mapview-feature-layer","Encountered an error when querying for featureCount",{error:a})}return{mode:"on-demand"}}async _createServiceOptions(){const e=this.layer;if(e.type==="stream")return null;const{capabilities:t,objectIdField:i}=e,r=e.fields.map(v=>v.toJSON()),s=p(e.fullExtent)&&e.fullExtent.toJSON(),o=qe(e.geometryType),a=e.timeInfo&&e.timeInfo.toJSON()||null,u=e.spatialReference?e.spatialReference.toJSON():null,n=e.type==="feature"?e.globalIdField:null;let d;e.type==="ogc-feature"?d=e.source.getSource():G(e.source)?d=await e.source.openPorts():e.parsedUrl&&(d=ee(e.parsedUrl),"dynamicDataSource"in e&&e.dynamicDataSource&&(d.query={layer:JSON.stringify({source:e.dynamicDataSource})}));const h="datesInUnknownTimezone"in this.layer&&this.layer.datesInUnknownTimezone,m=("subtypeField"in this.layer&&this.layer.subtypeField)??null,{mode:_,featureCount:f}=await this._detectQueryMode(d);let w=this.layer.objectIdField;if(this.layer.type==="feature"&&p(this.layer.orderBy)&&this.layer.orderBy.length){const v=!this.layer.orderBy[0].valueExpression&&this.layer.orderBy[0].field;v&&(w=v)}return{type:_,timeReferenceUnknownClient:h,subtypeField:m,featureCount:f,globalIdField:n,maxRecordCount:t.query.maxRecordCount,tileMaxRecordCount:t.query.tileMaxRecordCount,capabilities:t,fields:r,fullExtent:s,geometryType:o,objectIdField:i,source:d,timeInfo:a,spatialReference:u,orderByFields:w}}async _createMemoryServiceOptions(e){const t=await e.openPorts();return{...this._createServiceOptions(),type:"memory",source:t}}_cleanUpQuery(e){const t=Q.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}_cleanUpAggregateQuery(e){const t=Q.from(e)||this.createAggregateQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(e){return this.suspended?void this._clearTiles():this._validateEdit(e)?this._commandsQueue.push({type:"edit",edits:e}):void 0}async doRefresh(e){if(this.attached&&this._tileStrategy.tileKeys().length)return this.suspended&&e?void this._clearTiles():this._commandsQueue.push({type:"refresh",dataChanged:e})}_clearTiles(){this._tileStrategy.tileKeys().length&&(this._proxy.updateTiles({added:[],removed:this._tileStrategy.tileKeys()}),this._tileStrategy.clear(),this.requestUpdate(),this._commandsQueue.clear(),this._update())}_validateEdit(e){const t="globalIdField"in this.layer&&this.layer.globalIdField,i=e.deletedFeatures.some(s=>s.objectId===-1||!s.objectId),r=t&&this.availableFields.includes(t);return i&&!r?(x.getLogger(this.declaredClass).error(new V("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${t} to be included the layer's outFields for updates to be reflected on the map`)),null):e}async _doUpdate(){try{if(this.destroyed||!this._hasRequiredSupport(this.layer)||!this._tileStrategy)return;const{featureEffectView:e,filter:t}=this;await this._updateRequiredFields();const{renderer:i}=this._getEffectiveRenderer();this._set("_effectiveRenderer",i);const r=this._createSchemaConfig(),s=this._createConfiguration(r,t,e.filter),o=this._lastDefinitionExpression!==s.schema.source.definitionExpression;this._lastDefinitionExpression=s.schema.source.definitionExpression;const a=s.schema.tileRenderer,u=this._createTileRendererHash(a);if(this._serviceOptions.type==="snapshot"&&(s.schema.source.initialFeatureCount=this._serviceOptions.featureCount),u!==this._tileRendererHash){await this._initTileRenderer(a,i);const n=this.layer,d=n.type==="stream"?await this._initServiceOptions():this._serviceOptions;this.tileRenderer.onConfigUpdate(i),n.type!=="stream"&&G(n.source)&&(d.source=await n.source.openPorts());const h={added:this._tileStrategy.tileKeys(),removed:[]};await this._proxy.startup(this.view.featuresTilingScheme,s,d,h),this.hasHighlight()&&await this._proxy.setHighlight(Array.from(this._highlightIds.keys())),await this._onceTilesUpdated(),this.tileRenderer.onConfigUpdate(i)}else{this._serviceOptions.type==="snapshot"&&o&&(s.schema.source.changedFeatureCount=await this.layer.queryFeatureCount());const n=await this._proxy.update(s);(n.mesh||n.targets.aggregate)&&this._lockGPUUploads();try{await this._proxy.applyUpdate(n)}catch(d){E(d)||x.getLogger(this.declaredClass).error(d)}(n.mesh||n.targets.aggregate)&&this._unlockGPUUploads(),this.tileRenderer.onConfigUpdate(i),this._updateClusterSizeVariable(),this._forceAttributeTextureUpload()}this._tileRendererHash=u,this.tileRenderer.invalidateLabels(),this.requestUpdate()}catch{}}async _doEdit(e){try{await this._proxy.onEdits(e)}catch(t){E(t)}}async _doRefresh(e){this._lockGPUUploads();try{let i;e&&this.queryMode==="snapshot"&&"queryFeatureCount"in this.layer&&(i=await this.layer.queryFeatureCount()),await this._proxy.refresh({dataChanged:e,featureCount:i})}catch(i){E(i)}this._unlockGPUUploads();const t=this.layer;t&&"featureReduction"in t&&t.featureReduction&&this._updateClusterSizeVariable()}_updateClusterSizeVariable(){this._needsClusterSizeUpdate&&(this.tileRenderer.onConfigUpdate(this._effectiveRenderer),this._needsClusterSizeUpdate=!1)}_createUpdateClusterSizeTask(e,t){return A(()=>this._aggregateValueRanges,i=>{this._updateClusterEffectiveRendererSizeVariable(e,t,i),this._needsClusterSizeUpdate=!0,this._uploadsLocked||this._updateClusterSizeVariable()})}async _updateClusterEffectiveRendererSizeVariable(e,t,i){if(e.dynamicClusterSize&&"visualVariables"in e&&e.visualVariables){const r=ne(e.visualVariables);if(p(r)&&r.field==="cluster_count"){const s=e.visualVariables.indexOf(r);e.visualVariables[s]=le(t,i);const o=e.clone();o.dynamicClusterSize=!0,this._set("_effectiveRenderer",o)}}}_getEffectiveRenderer(){var r;const e=this.layer,t="renderer"in e?e.renderer:null,i="featureReduction"in e?e.featureReduction:null;if(p(this._updateClusterSizeTask)&&(this._updateClusterSizeTask.remove(),this._updateClusterSizeTask=null),i&&"renderer"in i&&i.renderer&&!((r=i.renderer.authoringInfo)!=null&&r.isAutoGenerated)){const s=i.fields;if(i.type==="cluster"){const{renderer:o,didInject:a}=ue(i.renderer,i,this._aggregateValueRanges);return a&&(k(this._updateClusterSizeTask,u=>u.remove()),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(o,i)),{renderer:o,aggregateFields:s,featureReduction:i}}return{renderer:i.renderer,aggregateFields:s,featureReduction:i}}if(i&&i.type==="cluster"&&he(t)){const s=i,o=[],a=ce(o,t,s,this._aggregateValueRanges,!0);return k(this._updateClusterSizeTask,u=>u.remove()),this._updateClusterSizeTask=this._createUpdateClusterSizeTask(a,s),{renderer:a,aggregateFields:o,featureReduction:i}}return{renderer:t,aggregateFields:[],featureReduction:null}}_acquireTile(e){const t=this.tileRenderer.acquireTile(e);return t.once("attach",()=>{this.requestUpdate()}),t}_releaseTile(e){this.tileRenderer.releaseTile(e)}async _initTileRenderer(e,t){const i=await Fe(e,{layerView:this,tileInfoView:this.view.featuresTilingScheme,layer:this.layer});return this.tileRenderer&&(this._tileStrategy.clear(),this.tileRenderer.uninstall(this.container),this.tileRenderer.destroy(),this.tileRenderer=null),this.destroyed?null:(this._proxy.tileRenderer=i,this._set("tileRenderer",i),this.tileRenderer.install(this.container),this.tileRenderer.onConfigUpdate(t),this.requestUpdate(),this.tileRenderer)}_createTileRendererHash(e){return`${e.type}`}get hasFilter(){const e=!!("floorInfo"in this.layer&&this.layer.floorInfo&&this.view.floors&&this.view.floors.length);return!!this.filter||e||!!this._visibilityOverrides.size||!!this.timeExtent}_injectOverrides(e){const t=p(e)?e.timeExtent:null,i=p(this.timeExtent)&&p(t)?this.timeExtent.intersection(t):this.timeExtent||t;let r=null;const s="floorInfo"in this.layer&&this.layer.floorInfo;if(s){const a=p(e)&&e.where;r=this._addFloorFilterClause(a)}if(!this._visibilityOverrides.size&&!i&&!s)return p(e)?e.toJSON():null;(e=p(e)&&e.clone()||new de).timeExtent=i,r&&(e.where=r);const o=e.toJSON();return o.hiddenIds=Array.from(this._visibilityOverrides),o}_addFloorFilterClause(e){var r;const t=this.layer;let i=e||"";if("floorInfo"in t&&t.floorInfo){let s=this.view.floors;if(!s||!s.length)return i;(r=t.floorInfo.viewAllLevelIds)!=null&&r.length&&(s=t.floorInfo.viewAllLevelIds);const o=s.filter(n=>n!=="").map(n=>"'"+n+"'");o.push("''");const a=t.floorInfo.floorField;let u="("+a+" IN ({ids}) OR "+a+" IS NULL)";if(u=u.replace("{ids}",o.join(", ")),p(i)&&i.includes(a)){let n=new RegExp("AND \\("+a+".*NULL\\)","g");i=i.replace(n,""),n=new RegExp("\\("+a+".*NULL\\)","g"),i=i.replace(n,""),i=i.replace(/\s+/g," ").trim()}i=i!==""?"("+i+") AND "+u:u}return i!==""?i:null}_createConfiguration(e,t,i){const r=this.layer.type==="feature"&&this.layer.historicMoment?this.layer.historicMoment.getTime():void 0,s=this.layer.type==="feature"?this.layer.gdbVersion:void 0,o=new Array(fe),a=this._injectOverrides(t);o[0]=a,o[1]=p(i)?i.toJSON():null;const u=_e(e);if(Y(u))return null;const n=Oe("2d");return{availableFields:this.availableFields,gdbVersion:s,historicMoment:r,devicePixelRatio:window.devicePixelRatio||1,filters:o,schema:u,supportsTextureFloat:n.supportsTextureFloat,maxTextureSize:n.maxTextureSize}}_hasRequiredSupport(e){return!("renderer"in e)||ve(e.renderer)}_onceTilesUpdated(){return this.requestUpdate(),oe(()=>!this._pipelineIsUpdating)}_lockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!0,this.tileRenderer.lockGPUUploads())}_unlockGPUUploads(){this.tileRenderer&&(this._uploadsLocked=!1,this.tileRenderer.unlockGPUUploads())}_forceAttributeTextureUpload(){this.tileRenderer&&this.tileRenderer.forceAttributeTextureUpload()}_createSchemaConfig(){const e=this.layer;return{renderer:"renderer"in e?e.renderer:null,spatialReference:e.spatialReference,timeExtent:e.timeExtent,definitionExpression:e.definitionExpression,featureReduction:"featureReduction"in e?e.featureReduction:null,fields:e.fields,geometryType:e.geometryType,historicMoment:"historicMoment"in e?e.historicMoment:null,labelsVisible:"labelsVisible"in e&&e.labelsVisible,labelingInfo:"labelingInfo"in e&&e.labelingInfo,availableFields:this.availableFields,featureEffect:this.featureEffect,filter:this.filter,gdbVersion:"gdbVersion"in e?e.gdbVersion:null,pixelBuffer:0,orderBy:"orderBy"in e&&e.orderBy?e.orderBy:null,customParameters:{..."customParameters"in e?e.customParameters:void 0,token:"apiKey"in e?e.apiKey:void 0},subtypeCode:"subtypeCode"in e?e.subtypeCode:void 0,subtypeField:"subtypeField"in e?e.subtypeField:void 0}}_addHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const i=this._highlightIds.get(t);this._highlightIds.set(t,i+1)}else this._highlightIds.set(t,1);this._updateHighlight().catch(t=>{E(t)||x.getLogger(this.declaredClass).error(t)})}_removeHighlight(e){for(const t of e)if(this._highlightIds.has(t)){const i=this._highlightIds.get(t)-1;i===0?this._highlightIds.delete(t):this._highlightIds.set(t,i)}this._updateHighlight().catch(t=>{E(t)||x.getLogger(this.declaredClass).error(t)})}_setLayersForFeature(e){const t=this.layer;e.layer=t,e.sourceLayer=t}_createGraphicHit(e,t){return this._setLayersForFeature(t),p(t.geometry)&&(t.geometry.spatialReference=this.view.spatialReference),{type:"graphic",graphic:t,layer:this.layer,mapPoint:e}}};l([c()],y.prototype,"_serviceOptions",void 0),l([c()],y.prototype,"_proxy",void 0),l([c()],y.prototype,"_pipelineIsUpdating",void 0),l([c()],y.prototype,"_effectiveRenderer",void 0),l([c()],y.prototype,"_aggregateValueRanges",void 0),l([c()],y.prototype,"_commandsQueue",void 0),l([c()],y.prototype,"featureEffectView",void 0),l([c()],y.prototype,"labelsVisible",null),l([c({readOnly:!0})],y.prototype,"queryMode",null),l([c()],y.prototype,"renderingConfigHash",null),l([c()],y.prototype,"tileRenderer",void 0),l([c()],y.prototype,"updating",void 0),y=l([q("esri.views.2d.layers.FeatureLayerView2D")],y);const gr=y;export{gr as default};
