import{e as o,y as r,n as S,m as R,t as K,B as it,c as zt}from"./cast-7928d7aa.js";import{j as Ut}from"./Collection-78126e82.js";import{n as kt}from"./Evented-515b9d9c.js";import{z as Bt,g as Wt,t as h,r as p,p as wt,i as Jt,n as qt,s as V,o as xt}from"./typedArrayUtil-a8b5b3e9.js";import"./ensureType-cf29afa9.js";import{n as y,t as vt,e as k}from"./vec3f64-2f9cef06.js";import{n as Zt}from"./AnalysisView3D-70b48b15.js";import{l as d}from"./Color-a42a8267.js";import"./geometry-5a216427.js";import{l as ut,u as Ot,f as Tt}from"./LineOfSightAnalysisTarget-664b45de.js";import{j as Qt}from"./asyncUtils-62e8a185.js";import{s as yt}from"./Error-653283ae.js";import{g as Kt}from"./promiseUtils-6684e352.js";import{h as z,l as Xt,w as Yt}from"./reactiveUtils-f41a4e00.js";import{G as te,r as L,z as _t,g as J,u as q,x as ee,e as et,U as W,J as It}from"./vec3-a020a6f6.js";import{c as Ct}from"./HandleOwner-e1406413.js";import{u as ot,v as ie}from"./projection-d7b57a6c.js";import{D as oe,F as Pt,j as re}from"./aaBoundingRect-4a760199.js";import{l as ne,d as Ft,t as se,k as ct,h as ft}from"./sphere-4f5e644f.js";import{b as Vt,f as ae,g as le}from"./elevationInfoUtils-427916a5.js";import{d as pe}from"./screenUtils-410d12c0.js";import{O as de}from"./dehydratedFeatures-4eeb381a.js";import{y as rt}from"./string-cdf077e6.js";import{x as ue,t as dt,bx as ce,bL as he,ak as X,bM as me,bN as pt,bO as ge,bP as ve,bd as Y,bA as ye,bg as Lt,bQ as ht,bR as St}from"./index-455b69b8.js";import{a as Rt,c as mt}from"./LineVisualElement-69b2e868.js";import{y as Et,I as nt}from"./Scheduler-8433672d.js";import{w as _e}from"./Extent-69509002.js";import{v as fe,b as be}from"./lineSegment-e6f72ff2.js";import{x as At}from"./ElevationInfo-ce9cacc2.js";import{i as Ce,A as we}from"./manipulatorUtils-302eea16.js";import{n as Oe}from"./manipulatorUtils-0cd1c493.js";import{d as Te,S as $t}from"./PointVisualElement-685382db.js";import{a as Ie,s as Pe,m as Ve}from"./analysisViewUtils-dbd7f679.js";import{e as Le}from"./mat4f64-1e28eae0.js";import"./nextTick-3ee5a785.js";import"./SimpleObservable-7dcdef1d.js";import"./Promise-dfdee8ba.js";import"./colorUtils-639f4d25.js";import"./mathUtils-2519596a.js";import"./vec4-790471c0.js";import"./common-c186b691.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./Clonable-ba795b08.js";import"./persistable-19c823da.js";import"./preload-helper-41c905a7.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./request-d3e98716.js";import"./uuid-73213768.js";import"./persistableUrlUtils-a16d0f55.js";import"./unitUtils-47abac71.js";import"./Ellipsoid-89682c5e.js";import"./mat4-44a0988f.js";import"./assets-0b172f07.js";import"./zscale-1e1fc911.js";import"./vec4f64-e407da96.js";import"./byteSizeEstimations-f0cab514.js";import"./mat3f64-c6305894.js";import"./quatf64-7fd38d64.js";import"./vec2f64-30dc1443.js";import"./aaBoundingBox-fc742a4e.js";import"./quantizationUtils-33aba427.js";import"./jsonUtils-03c4af61.js";import"./Field-f5fc9f6b.js";import"./enumeration-3c281341.js";import"./fieldType-b1002185.js";import"./Basemap-a8f7f439.js";import"./collectionUtils-3831b7c4.js";import"./deprecate-b9088bd3.js";import"./Loadable-48bc1293.js";import"./loadAll-7fd968fe.js";import"./Portal-8b65c9c4.js";import"./locale-30120714.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./PortalItem-aa42c739.js";import"./messages-be07754e.js";import"./writeUtils-067c4f82.js";import"./layerUtils-034678f6.js";import"./compilerUtils-034cacb8.js";import"./opacityUtils-243aae26.js";import"./CollectionFlattener-3dd1f479.js";import"./TablesMixin-e7a6aab1.js";import"./Layer-f0696768.js";import"./Identifiable-aa6d459d.js";import"./Graphic-b46e2684.js";import"./PopupTemplate-6eb885db.js";import"./fieldUtils-31bfecd2.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./number-347a3a44.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./Cyclical-b66238c6.js";import"./workers-898a7c4c.js";import"./Connection-a681777e.js";import"./Queue-3a0c055d.js";import"./intl-f1e98361.js";import"./TileInfo-34f80a8e.js";import"./widget-f7489a3f.js";import"./dom-5b7af1bf.js";import"./executeQueryJSON-bcd96e1a.js";import"./normalizeUtils-ee4bf39f.js";import"./query-922e6fbf.js";import"./pbfQueryUtils-72f9b45b.js";import"./pbf-e1a6c35b.js";import"./OptimizedFeature-3de538c1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-d9d8ef40.js";import"./FeatureSet-0573546e.js";import"./Query-ff8c2cfb.js";import"./TimeExtent-744afd75.js";import"./RelationshipQuery-db5fcd0c.js";import"./LegendOptions-e65e7a9c.js";import"./utils-725f8b4e.js";import"./BlendLayer-d8293c8d.js";import"./parser-2b40deea.js";import"./mat4f32-77b3d8ac.js";import"./ItemCache-ee28c7ba.js";import"./MemCache-4b976a8b.js";import"./cimSymbolUtils-2e4dde89.js";import"./utils-c81a5c52.js";import"./jsonUtils-c56f8821.js";import"./UniqueValueRenderer-103ec66d.js";import"./diffUtils-1ac65748.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./lengthUtils-d2d33f94.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./DictionaryLoader-2cf5144e.js";import"./LRUCache-14115d91.js";import"./heatmapUtils-84e8c43b.js";import"./featureConversionUtils-01cdde8a.js";import"./TopFeaturesQuery-785f5453.js";import"./FeatureLayer-a9f3e6ec.js";import"./MultiOriginJSONSupport-27362d57.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./FeatureLayerBase-aebdf2da.js";import"./HeightModelInfo-22ad72d7.js";import"./arcgisLayerUrl-0b2b7691.js";import"./OperationalLayer-24e6fa34.js";import"./editsZScale-2015e7db.js";import"./APIKeyMixin-34d76a46.js";import"./ArcGISService-ea748edf.js";import"./CustomParametersMixin-807d2055.js";import"./EditBusLayer-40671d1a.js";import"./FeatureReductionLayer-4077b2ae.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-e7edf19c.js";import"./PortalLayer-f1a64f99.js";import"./RefreshableLayer-1c078c47.js";import"./ScaleRangeLayer-271178b7.js";import"./TemporalLayer-39c07299.js";import"./TimeInfo-c89d0ef4.js";import"./FeatureTemplate-746d033e.js";import"./FeatureType-c83c5f49.js";import"./fieldProperties-7547b373.js";import"./FieldsIndex-aa6dd3fa.js";import"./versionUtils-92993d41.js";import"./styleUtils-da81b13f.js";import"./popupUtils-07fe66a7.js";import"./colorUtils-82440b70.js";import"./mat2d-d0b91e3e.js";import"./GraphicsLayer-10573c27.js";import"./ViewingMode-5d7d590b.js";import"./enums-0fc02184.js";import"./vec2-2cef68de.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./TileStrategy-4189758f.js";import"./TileStore-787dbea4.js";import"./TileKey-0750ad58.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./capabilities-3636c6a4.js";import"./context-util-1e3c8cfc.js";import"./plane-45609588.js";import"./scaleUtils-b32a50d8.js";import"./ElevationSamplerData-7decf898.js";import"./PhysicallyBasedRendering.glsl-a986c926.js";import"./View.glsl-8b12b8c2.js";import"./ShaderBuilder-93e8045e.js";import"./FloatPassUniform-d2dfc562.js";import"./Float4PassUniform-3a47b7b3.js";import"./RgbaFloatEncoding.glsl-6036ca34.js";import"./Texture2DPassUniform-6e8ae673.js";import"./vec3f32-c9aa289f.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-22924c6f.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-0c0898f0.js";import"./ReadLinearDepth.glsl-7ff30f7d.js";import"./WaterSurface.glsl-fc8a5726.js";import"./ForwardLinearDepth.glsl-36f9eb3b.js";import"./Matrix3PassUniform-da8eddae.js";import"./Slice.glsl-a612de15.js";import"./Transform.glsl-f15542a7.js";import"./OutputHighlight.glsl-7364b03b.js";import"./MultipassTerrainTest.glsl-e79d40de.js";import"./NormalUtils.glsl-a59958d7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-cd195b0e.js";import"./EvaluateSceneLighting.glsl-3bbc6edf.js";import"./VisualVariablePassParameters-5807c7dc.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./FramebufferObject-50e1b68f.js";import"./Texture-e79b14e7.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-c6f142fc.js";import"./ScreenSpacePass-00f8c8a4.js";import"./SSAO.glsl-6f3b4065.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-80cf9a21.js";import"./VerticalOffset.glsl-86460edb.js";import"./objectResourceUtils-ef6e3cdf.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-646ba1de.js";import"./vec33-ce3aa99b.js";import"./DefaultMaterial_COLOR_GAMMA-9831d979.js";import"./types-e1c0a5bf.js";import"./Version-9baeb7ac.js";import"./quat-5b263584.js";import"./Texture-bbae5d9d.js";import"./TextureOnly.glsl-18701a3b.js";import"./InterleavedLayout-5e9cf734.js";import"./MixExternalColor.glsl-25f0049c.js";import"./symbolColorUtils-604c5345.js";import"./ObjectAndLayerIdColor.glsl-73c19386.js";import"./OutputDepth.glsl-179f1d8f.js";import"./VisualVariables.glsl-b8290512.js";import"./DiscardOrAdjustAlphaBlend.glsl-5f837994.js";import"./Normals.glsl-90e28525.js";import"./DefaultMaterial.glsl-b4f4cbc5.js";import"./VertexColor.glsl-db21b96c.js";import"./DefaultTechniqueConfiguration-e8962072.js";import"./RealisticTree.glsl-2b30ed32.js";import"./edgeProcessing-3ca548e1.js";import"./deduplicate-b0bc48cc.js";import"./projection-aa2a8986.js";import"./Octree-1a841545.js";import"./HUDMaterial.glsl-4bf3c7df.js";import"./sdfPrimitives-a24e9cb2.js";import"./floatRGBA-fa8308d2.js";import"./labelFormatUtils-4d730eaa.js";import"./I3SUtil-3ffd3baa.js";import"./I3SBinaryReader-3d2c2faa.js";import"./LineCallout.glsl-a0056465.js";import"./earcut-58237617.js";import"./QueryEngineResult-665bf7fb.js";import"./WhereClause-2b5b05b2.js";import"./utils-30a9a7e0.js";import"./generateRendererUtils-a996108f.js";import"./utils-1f4fcfec.js";import"./json-48e3ea08.js";import"./MeshComponent-f50df6af.js";import"./MarkerSizing.glsl-c6fa192a.js";import"./RibbonLine.glsl-2a3b4d4e.js";import"./LineStipple.glsl-de782d6a.js";import"./callExpressionWithFeature-a7532499.js";import"./LineMarker.glsl-8f444621.js";import"./NativeLine.glsl-cdbbf172.js";import"./Path.glsl-60b36878.js";import"./ColorMaterial.glsl-8310ffb3.js";import"./Pattern.glsl-d3388745.js";import"./EffectView-d3bf37ed.js";import"./LercDecoder-73115fd2.js";import"./config-1337d16e.js";import"./workerHelper-c6d4a8cb.js";import"./Subtype-5b01b21f.js";import"./datetime-4f774298.js";import"./ExportImageParameters-f328a234.js";import"./sublayerUtils-ba7f61bc.js";import"./webStyleSymbolUtils-55ed91cd.js";import"./enums-4b2a86a0.js";import"./ImageMaterial-0dc3e395.js";import"./ImageMaterial.glsl-2969e37d.js";import"./ShadedColorMaterial.glsl-7dee9441.js";let $=class extends R{constructor(e){super(e),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new d([3,252,111,1]),this.visibleOuterColor=new d([3,252,111,.15]),this.occludedInnerColor=new d([252,3,69,1]),this.occludedOuterColor=new d([252,3,69,.1]),this.undefinedInnerColor=new d([255,255,255,1]),this.undefinedOuterColor=new d([127,127,127,.2])}};o([r({type:Number})],$.prototype,"innerWidth",void 0),o([r({type:Number})],$.prototype,"outerWidth",void 0),o([r({type:d})],$.prototype,"visibleInnerColor",void 0),o([r({type:d})],$.prototype,"visibleOuterColor",void 0),o([r({type:d})],$.prototype,"occludedInnerColor",void 0),o([r({type:d})],$.prototype,"occludedOuterColor",void 0),o([r({type:d})],$.prototype,"undefinedInnerColor",void 0),o([r({type:d})],$.prototype,"undefinedOuterColor",void 0),$=o([S("esri.views.3d.analysis.LineOfSight.LineOfSightConfiguration")],$);let x=class extends R{constructor(e){super(e),this.target=null,this.intersectedGraphic=null,this.intersectedLocation=null,this.elevationAlignedTargetLocation=null,this.visible=void 0}};o([r()],x.prototype,"target",void 0),o([r()],x.prototype,"intersectedGraphic",void 0),o([r()],x.prototype,"intersectedLocation",void 0),o([r()],x.prototype,"elevationAlignedTargetLocation",void 0),o([r({type:Boolean})],x.prototype,"visible",void 0),x=o([S("esri.views.3d.analysis.LineOfSightAnalysisResult")],x);let F=class extends R{constructor(t){super(t),this.elevationAlignedTargetLocation=null,this.inputPoints={isValid:!1,observer:y(),observerSurfaceNormal:null,observerFeatureId:null,target:y(),targetSurfaceNormal:null,targetFeatureId:null,observerAdjusted:y(),targetAdjusted:y()},this.computationResult={start:y(),end:y(),intersection:y(),isValid:!1,isTargetVisible:!1},this.result=null}notifyResultChanged(){this.notifyChange("computationResult")}notifyInputPointsChanged(){this.notifyChange("inputPoints")}};o([r()],F.prototype,"target",void 0),o([r()],F.prototype,"elevationAlignedTargetLocation",void 0),o([r()],F.prototype,"inputPoints",void 0),o([r()],F.prototype,"computationResult",void 0),o([r()],F.prototype,"result",void 0),F=o([S("esri.views.3d.analysis.LineOfSight.LineOfSightComputation")],F);var bt;let A=bt=class extends R{constructor(t){super(t)}clone(){return new bt({type:this.type,id:rt(this.id),mapPoint:rt(this.mapPoint),renderPoint:vt(this.renderPoint),normal:rt(this.normal),ray:rt(this.ray),graphic:this.graphic})}equals(t){return this.type===t.type&&this.id===t.id&&Bt(this.mapPoint,t.mapPoint)&&te(this.renderPoint,t.renderPoint)&&Wt(this.normal,t.normal)&&ne(this.ray,t.ray)&&this.graphic===t.graphic}};o([r()],A.prototype,"type",void 0),o([r({constructOnly:!0})],A.prototype,"id",void 0),o([r({constructOnly:!0})],A.prototype,"mapPoint",void 0),o([r({constructOnly:!0})],A.prototype,"renderPoint",void 0),o([r({constructOnly:!0})],A.prototype,"normal",void 0),o([r({constructOnly:!0})],A.prototype,"graphic",void 0),o([r({constructOnly:!0})],A.prototype,"ray",void 0),A=bt=o([S("esri.views.3d.analysis.LineOfSight.LineOfSightIntersectionResult")],A);let Z=class extends R{constructor(t){super(t),this._terrainIntersectionOptionsLayerUids=new Set(["terrain"])}initialize(){this.intersector=ue(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=dt.MIN}getScreenPointIntersection(t){const e=pe(t,se.get()),i=ce(this.view.state.camera,e,gt);return this._getRayIntersection(i)}_getRayIntersection(t,e){if(h(t)||h(this.view.sceneIntersectionHelper))return null;this.intersector.options.store=dt.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(t,this.intersector,e);const i=this.intersector.results.min,n=y();if(!i.getIntersectionPoint(n))return null;const s=this.view.renderCoordsHelper.fromRenderCoords(n,this.view.spatialReference),l=vt(i.normal);if(he(i))return new A({type:X.OBJECT,id:`${i.target.layerUid}/${i.target.nodeIndex}/${i.target.componentIndex}`,mapPoint:s,renderPoint:n,normal:l,ray:ct(t),graphic:null});if(me(i))return new A({type:X.TERRAIN,id:i.target.lij.slice(),mapPoint:s,renderPoint:n,normal:l,ray:ct(t),graphic:null});const a=pt(i,this.view);if(p(a)){const g=a.layer,m=a.sourceLayer;let c;return m&&m.type==="scene"?c=de(a,m.objectIdField):c=a.uid,new A({type:X.OBJECT,id:`${g.uid}/${c}`,mapPoint:s,renderPoint:n,normal:l,ray:ct(t),graphic:a})}return null}updateFromGroundIntersection(t,e,i){const n=Se,s=Re,l=Ee,a=Ae;L(s,t),this.view.renderCoordsHelper.worldUpAtPosition(s,l),_t(l,l);const g=this.view.basemapTerrain.visibleElevationBounds,m=g?Math.abs(g.max-g.min):100,c=e>=0?1:-1;J(a,l,c*(m+Math.abs(e))),q(n,s,a),ft(n,s,gt);const u=this._getRayIntersection(gt,{include:this._terrainIntersectionOptionsLayerUids});return p(u)?(J(a,l,c*e),q(i,u.renderPoint,a),vt(u.normal)):(L(i,t),null)}};o([r()],Z.prototype,"view",void 0),o([r()],Z.prototype,"intersector",void 0),Z=o([S("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],Z);const Se=y(),Re=y(),Ee=y(),Ae=y(),gt=Ft(),Gt="esri.views.3d.analysis.LineOfSight.LineOfSightController",Ht=yt.getLogger(Gt);let f=class extends kt.EventedMixin(R){constructor(t){super(t),this.updateOnCameraChange=!0,this._effectiveObserverElevationMode="absolute-height",this._observerFeatureId=null,this._updatingHandles=new Ct,this._frameTask=Et,this._handles=new K,this._computationHandles=new K,this._externalObserverUpdate=!0}initialize(){var e;const t=(e=this.view.resourceController)==null?void 0:e.scheduler;this._frameTask=t?t.registerTask(nt.LINE_OF_SIGHT_TOOL):Et,this._intersector=new Z({view:this.view}),this._handles.add([this._connectObserver(),this._connectComputations(),this._connectTargets()])}destroy(){this._handles.destroy(),this._computationHandles.destroy(),this._computations.removeAll(),this._updatingHandles.destroy()}get updating(){return this._frameTask.updating||this._updatingHandles.updating}get priority(){return this._frameTask.priority}set priority(t){this._frameTask.priority=t}get _computations(){return this.analysisViewData.computations}get _elevationAlignedObserverPositionRenderSpace(){return this.analysisViewData.observerEngineLocation}set _elevationAlignedObserverPositionRenderSpace(t){this.analysisViewData.observerEngineLocation=t}get _screenPixelSize(){return this.view.state.camera.computeScreenPixelSizeAt(this._elevationAlignedObserverPositionRenderSpace)}_computeResult(t){const e=t.computation,{inputPoints:i,computationResult:n}=e,{observerAdjusted:s,targetAdjusted:l}=i,{start:a,end:g}=n;L(a,s),L(g,l),this._canCompute(e)?this._computeIntersection(t):this._interpolateIntersection(t),e.notifyResultChanged(),this.emit("result-changed",{target:t.computation.target,result:e.result})}_updateAdjustedPointsFromFeatures(t){const e=this.view,{sceneIntersectionHelper:i}=e,{inputPoints:n}=t,{observerAdjusted:s,observerFeatureId:l,targetFeatureId:a,targetAdjusted:g}=n;if(h(l)&&h(a))return;const m=ee(s,g),c=this._intersector.intersector,u=ft(n.observer,n.target,Mt);c.options.store=dt.ALL,i.intersectToolIntersectorRay(u,c);let _=null,v=null,b=null,I=null;for(const w of c.results.all){const P=pt(w,this.view);if(h(P)||h(w.distanceInRenderSpace))continue;const T=ut(P);h(T)||(p(l)&&T===l&&(h(_)&&(_=this._getFeatureDistanceThreshold(w,e,m)),w.distanceInRenderSpace<_&&(b=w)),p(a)&&T===a&&(h(v)&&(v=this._getFeatureDistanceThreshold(w,e,m)),h(I)&&w.distanceInRenderSpace<m&&m-w.distanceInRenderSpace<v&&(I=w)))}p(b)&&b.getIntersectionPoint(s)&&(n.observerSurfaceNormal=b.getTransformedNormal(y())),p(I)&&I.getIntersectionPoint(g)&&(n.targetSurfaceNormal=I.getTransformedNormal(y()))}_getFeatureDistanceThreshold(t,e,i){if(ge(t)){const n=ve(t,e);if(p(n))return Math.min(n*He,i)}return 1e-5*i}_adjustStartEndPositions(t){const e=this._screenPixelSize,i=this.view,{inputPoints:n}=t,{observer:s,observerSurfaceNormal:l,target:a,targetSurfaceNormal:g,observerAdjusted:m,targetAdjusted:c}=n,u=st;L(m,s),L(c,a),this._updateAdjustedPointsFromFeatures(t),p(l)?L(u,l):et(u,c,m);const _=e;_t(u,u),J(u,u,Math.min(_,1)),q(m,m,u),p(g)?L(u,g):et(u,m,c);const v=i.state.camera.computeScreenPixelSizeAt(c);_t(u,u),J(u,u,Math.min(v,1)),q(c,c,u)}_computeIntersection({computation:t,interpolationInfo:e}){const{view:i}=this,{sceneIntersectionHelper:n,renderCoordsHelper:s}=i;if(h(n))return;const l=this._intersector.intersector,{computationResult:a,inputPoints:g}=t,{observer:m,target:c}=g,{start:u,end:_}=a,v=ft(u,_,Mt);l.options.store=dt.MIN,n.intersectToolIntersectorRay(v,l);const b=l.results.min,I=a.intersection,w=st;let P=!0;if(p(b)&&b.getIntersectionPoint(I)){L(e.originalIntersection,I),L(e.originalObserver,u),L(e.originalTarget,_),s.fromRenderCoords(I,w,i.spatialReference);const E=1-W(_,c)/W(u,c);P=W(m,I)>=E*W(m,c)}const T=new _e(w,i.spatialReference);{const{result:E,target:j}=t;p(E)?(E.target=j,E.intersectedGraphic=P?null:pt(b,i),E.intersectedLocation=P?null:T,E.visible=P):t.result=new x({target:j,elevationAlignedTargetLocation:t.elevationAlignedTargetLocation,intersectedGraphic:P?null:pt(b,i),intersectedLocation:P?null:T,visible:P})}a.isValid=g.isValid=!0,a.isTargetVisible=P}_interpolateIntersection({computation:t,interpolationInfo:e}){const{computationResult:i,inputPoints:n}=t,{start:s,end:l,intersection:a}=i,{originalIntersection:g,originalObserver:m,originalTarget:c}=e;if(L(a,g),n.isValid){const u=st,_=W(m,g)/W(m,c);It(u,s,m),J(u,u,1-_),q(a,a,u),It(u,l,c),J(u,u,_),q(a,a,u),i.isValid=!0}else t.result=null,i.isValid=!1,i.isTargetVisible=!1}_canCompute(t){const e=this.analysisViewData.elevationAlignedObserver,i=this.view.frustum;if(h(e)||h(t.elevationAlignedTargetLocation)||h(i))return!1;const{observerAdjusted:n,targetAdjusted:s}=t.inputPoints,l=i.intersectsPoint(n),a=i.intersectsPoint(s);return l&&a}_onObserverPositionChange(t,e,i,n,s){if(this._externalObserverUpdate=s,h(t))return this.analysisViewData.elevationAlignedObserver=null,void(this._observerFeatureId=null);if(h(e))return Rt(this.analysis,t.spatialReference,Ht),void(this.analysisViewData.elevationAlignedObserver=null);const l=this._getEffectiveElevationInfo(e,i),{absoluteZ:a,elevation:g}=Vt(e.x,e.y,e.z,this.view.spatialReference,this.view,l),m=e.clone();m.z=a,this._effectiveObserverElevationMode=l.mode,this.analysisViewData.elevationAlignedObserver=m;const c=y();this.view.renderCoordsHelper.toRenderCoords(m,c),this._elevationAlignedObserverPositionRenderSpace=c,this._observerGroundOffsetRenderSpace=a-g,this._observerFeatureId=ut(n),this.priority=nt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onObserverRenderSpacePositionChangeForComputation(t,e,i,n,s){const{inputPoints:l}=t;switch(L(l.observer,e),l.observerFeatureId=s,l.observerSurfaceNormal=null,n){case"on-the-ground":case"relative-to-ground":{const a=this._intersector.updateFromGroundIntersection(l.observer,i,l.observer);h(l.observerFeatureId)&&(l.observerSurfaceNormal=a)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=nt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_onTargetPositionChange(t,e,i,n,s,l=!0){const a=t.inputPoints;if(l&&(a.isValid=!1),h(i))return p(e)&&Rt(this.analysis,e.spatialReference,Ht),t.elevationAlignedTargetLocation=null,void t.notifyInputPointsChanged();const g=this._getEffectiveElevationInfo(i,n),{absoluteZ:m,elevation:c}=Vt(i.x,i.y,i.z,this.view.spatialReference,this.view,g),u=i.clone();switch(u.z=m,t.elevationAlignedTargetLocation=u,this.view.renderCoordsHelper.toRenderCoords(t.elevationAlignedTargetLocation,a.target),a.targetFeatureId=ut(s),a.targetSurfaceNormal=null,g.mode){case"on-the-ground":case"relative-to-ground":{const _=this._intersector.updateFromGroundIntersection(a.target,m-c,a.target);h(a.targetFeatureId)&&(a.targetSurfaceNormal=_)}}this._adjustStartEndPositions(t),t.notifyInputPointsChanged(),this.priority=nt.LINE_OF_SIGHT_TOOL_INTERACTIVE}_connectComputationToTarget(t){return it([this._updatingHandles.add(()=>({computation:t,targetPosition:t.target.position,targetElevationInfo:t.target.elevationInfo,targetFeatureInfo:t.target.feature,projectedTargetPosition:ot(t.target.position,this.view.spatialReference)}),({computation:e,targetPosition:i,targetElevationInfo:n,targetFeatureInfo:s,projectedTargetPosition:l})=>{p(l.pending)?this._updatingHandles.addPromise(l.pending):this._onTargetPositionChange(e,i,l.geometry,n,s)},z)])}_connectComputationToObserver(t){return this._updatingHandles.add(()=>({computation:t,observer:this.analysisViewData.elevationAlignedObserver}),({computation:e})=>{this._externalObserverUpdate&&(e.inputPoints.isValid=!1,e.notifyInputPointsChanged())},z)}_connectComputationToRenderSpaceObserver(t){return this._updatingHandles.add(()=>({computation:t,observer:this._elevationAlignedObserverPositionRenderSpace,observerGroundOffset:this._observerGroundOffsetRenderSpace,observerElevationMode:this._effectiveObserverElevationMode,observerFeatureId:this._observerFeatureId}),({computation:e,observer:i,observerGroundOffset:n,observerElevationMode:s,observerFeatureId:l})=>{this._onObserverRenderSpacePositionChangeForComputation(e,i,n,s,l)},z)}_connectComputationToCamera(t){return this._updatingHandles.add(()=>({camera:this.view.state.camera,isDirty:this._isCameraDirty}),({isDirty:e})=>{!this.updateOnCameraChange||t.inputPoints.isValid&&!e||t.notifyInputPointsChanged()})}_connectComputationToSlicePlane(t){return this._updatingHandles.add(()=>this.view.slicePlane,()=>{t.inputPoints.isValid=!1,t.notifyInputPointsChanged()})}_connectComputationToElevation(t){const e=(i,n)=>{const s=this.analysis.observer,l=t.target;let a=null,g=null,m=null,c=null,u=null,_=null;if(p(s)&&p(s.position)){const v=ot(s.position,this.view.spatialReference);if(p(v.pending))return this._updatingHandles.addPromise(v.pending),void v.pending.finally(()=>e(i,n));a=v.geometry,g=s.elevationInfo,m=s.feature}if(p(l.position)){const v=ot(l.position,this.view.spatialReference);if(p(v.pending))return this._updatingHandles.addPromise(v.pending),void v.pending.finally(()=>e(i,n));c=v.geometry,u=l.elevationInfo,_=l.feature}h(a)&&h(c)||(ie(i,n,at,this.view.spatialReference),p(a)&&Pt(at,a)&&this._onObserverPositionChange(p(s)?s.position:null,a,g,m,!1),p(c)&&Pt(at,c)&&this._onTargetPositionChange(t,l.position,c,u,_,!1),p(a)&&p(c)&&re(at,a,c)&&t.notifyInputPointsChanged())};return this.view.elevationProvider.on("elevation-change",i=>e(i.extent,i.spatialReference))}_connectComputationToTask(t){let e=qt;const i={computation:t,interpolationInfo:{originalIntersection:y(),originalObserver:y(),originalTarget:y()}};return it([this._updatingHandles.add(()=>t.inputPoints,()=>{e=wt(e),e=Qt(async n=>{await Kt(this._frameTask.schedule(()=>this._computeResult(i),n))})},{initial:!0,equals:()=>!1}),zt(()=>e=wt(e))])}_connectComputation(t){const e=this._computationHandles;e.has(t)||e.add([this._connectComputationToTarget(t),this._connectComputationToObserver(t),this._connectComputationToRenderSpaceObserver(t),this._connectComputationToCamera(t),this._connectComputationToSlicePlane(t),this._connectComputationToElevation(t),this._connectComputationToTask(t)],t)}_disconnectComputation(t){this._computationHandles.remove(t)}_onComputationCollectionChange({added:t,removed:e}){for(const i of e)this._disconnectComputation(i);for(const i of t)this._connectComputation(i)}_onTargetCollectionChange({added:t,removed:e}){for(const i of e)this._removeTarget(i);for(const i of t)this._addTarget(i)}_onCursorTargetChange(t,e){p(e)&&this._removeTarget(e),p(t)&&this._addTarget(t)}_addTarget(t){this._computations.some(e=>e.target===t)||this._computations.add(new F({target:t}))}_removeTarget(t){const e=this._computations.findIndex(i=>i.target===t);this._computations.removeAt(e)}_connectObserver(){return it([this._updatingHandles.add(()=>({observerPosition:p(this.analysis.observer)?this.analysis.observer.position:null,projectedObserverPosition:ot(p(this.analysis.observer)?this.analysis.observer.position:null,this.view.spatialReference),observerElevationInfo:p(this.analysis.observer)?this.analysis.observer.elevationInfo:null,observerFeatureInfo:p(this.analysis.observer)?this.analysis.observer.feature:null}),({observerPosition:t,projectedObserverPosition:e,observerElevationInfo:i,observerFeatureInfo:n})=>{p(e.pending)?this._updatingHandles.addPromise(e.pending):this._onObserverPositionChange(t,e.geometry,i,n,!0)},z)])}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this._computations,t=>this._onComputationCollectionChange(t),{initial:!0,final:!0})}_connectTargets(){return it([this._updatingHandles.addOnCollectionChange(()=>this.analysis.targets,t=>this._onTargetCollectionChange(t),{initial:!0,final:!0}),this._updatingHandles.add(()=>this.analysisViewData.cursorTarget,(t,e)=>{this._onCursorTargetChange(t,e)})])}get _isCameraDirty(){const t=this.analysisViewData.elevationAlignedObserver,{view:e}=this,{renderCoordsHelper:i}=e;if(h(t)||h(i))return!1;const n=st;i.toRenderCoords(t,n);const s=e.state.camera.computeScreenPixelSizeAt(n);return Math.abs((s-this._screenPixelSize)/this._screenPixelSize)>$e}_getEffectiveElevationInfo(t,e){return t.hasZ?Jt(e,{mode:"absolute-height",offset:0}):{mode:"on-the-ground",offset:0}}};o([r({constructOnly:!0})],f.prototype,"analysis",void 0),o([r({constructOnly:!0})],f.prototype,"analysisViewData",void 0),o([r({constructOnly:!0})],f.prototype,"view",void 0),o([r()],f.prototype,"updating",null),o([r()],f.prototype,"priority",null),o([r()],f.prototype,"updateOnCameraChange",void 0),o([r()],f.prototype,"_computations",null),o([r()],f.prototype,"_elevationAlignedObserverPositionRenderSpace",null),o([r()],f.prototype,"_observerGroundOffsetRenderSpace",void 0),o([r()],f.prototype,"_effectiveObserverElevationMode",void 0),o([r()],f.prototype,"_observerFeatureId",void 0),o([r()],f.prototype,"_screenPixelSize",null),o([r({readOnly:!0})],f.prototype,"_updatingHandles",void 0),o([r()],f.prototype,"_frameTask",void 0),o([r()],f.prototype,"_isCameraDirty",null),f=o([S(Gt)],f);const $e=.1,st=y(),Mt=Ft(),at=oe(),He=.05;let M=class extends R{constructor(t){super(t),this.enabled=!0,this.glowColor=new d([255,127,0]),this.glowWidth=8,this.innerColor=new d([255,255,255]),this.innerWidth=.75,this.globalAlpha=.75}};o([r({type:Boolean})],M.prototype,"enabled",void 0),o([r({type:d})],M.prototype,"glowColor",void 0),o([r({type:Number})],M.prototype,"glowWidth",void 0),o([r({type:d})],M.prototype,"innerColor",void 0),o([r({type:Number})],M.prototype,"innerWidth",void 0),o([r({type:Number})],M.prototype,"globalAlpha",void 0),M=o([S("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightLaserLineConfiguration")],M);let Q=class extends R{constructor(e){super(e),this.size=.5,this.color=new d([255,127,0,.75])}};o([r({type:Number})],Q.prototype,"size",void 0),o([r({type:d})],Q.prototype,"color",void 0),Q=o([S("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightObserverConfiguration")],Q);let G=class extends R{constructor(t){super(t),this.size=.5,this.visibleColor=new d([3,252,111,.75]),this.occludedColor=new d([252,3,69,.75]),this.undefinedColor=new d([127,127,127,.75])}};o([r({type:Number})],G.prototype,"size",void 0),o([r({type:d})],G.prototype,"visibleColor",void 0),o([r({type:d})],G.prototype,"occludedColor",void 0),o([r({type:d})],G.prototype,"undefinedColor",void 0),G=o([S("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTargetConfiguration")],G);class D extends R{constructor(e){super(e),this.innerWidth=2,this.outerWidth=8,this.visibleInnerColor=new d([3,252,111,1]),this.visibleOuterColor=new d([3,252,111,.15]),this.occludedInnerColor=new d([252,3,69,1]),this.occludedOuterColor=new d([252,3,69,.1]),this.undefinedInnerColor=new d([255,255,255,1]),this.undefinedOuterColor=new d([127,127,127,.2])}}o([r({type:Number})],D.prototype,"innerWidth",void 0),o([r({type:Number})],D.prototype,"outerWidth",void 0),o([r({type:d})],D.prototype,"visibleInnerColor",void 0),o([r({type:d})],D.prototype,"visibleOuterColor",void 0),o([r({type:d})],D.prototype,"occludedInnerColor",void 0),o([r({type:d})],D.prototype,"occludedOuterColor",void 0),o([r({type:d})],D.prototype,"undefinedInnerColor",void 0),o([r({type:d})],D.prototype,"undefinedOuterColor",void 0);let N=class extends R{constructor(t){super(t),this.laserLine=new M,this.observer=new Q,this.target=new G,this.lineOfSight=new D}};o([r({type:M})],N.prototype,"laserLine",void 0),o([r({type:Q})],N.prototype,"observer",void 0),o([r({type:G})],N.prototype,"target",void 0),o([r({type:D})],N.prototype,"lineOfSight",void 0),N=o([S("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightToolConfiguration")],N);function lt(t,e,i){return{geometry:ye(t,32,32),material:we(d.toUnitRGBA(e)),stateMask:i}}function Nt(t){const e=[];return t.customColor1&&e.push(lt(t.size,t.customColor1,Y.Custom1)),t.customColor2&&e.push(lt(t.size,t.customColor2,Y.Custom2)),t.customColor3&&e.push(lt(t.size,t.customColor3,Y.Custom3)),t.color&&e.push(lt(t.size,t.color)),e}function Me(t,e){const i=Nt(e),n=new Ce({view:t,renderObjects:i,elevationInfo:{mode:"absolute-height",offset:0}});return Oe(n),n}var U;(function(t){t.Ready="ready",t.Creating="creating",t.Created="created"})(U||(U={}));let O=class extends Ie{constructor(t){super(t),this.removeIncompleteOnCancel=!1,this.configuration=new N,this.analysisViewData=null,this._laserlineVisualElement=null,this._grabbedManipulator=null,this._analysisHandles=new K,this._handles=new K,this._updatingHandles=new Ct,this._manipulatorHandles=new K,this._targetTrackerManipulator=null}initialize(){this._intersector=new Z({view:this.view}),this._handles.add(Xt(()=>this.state,t=>{t===U.Created&&this.finishToolCreation()},Yt)),this._observerManipulator=this._createObserverManipulator(),this._handles.add([this._updatingHandles.add(()=>({...this.configuration.observer}),()=>this._updateObserverManipulatorStyle()),this._updatingHandles.add(()=>this.analysisViewData.elevationAlignedObserver,t=>this._onObserverLocationChange(t),z),this._updatingHandles.add(()=>({...this.configuration.laserLine}),()=>this._createVisualElements(),z),this._updatingHandles.add(()=>this._laserLineRendererDependencies(),t=>this._updateLaserLineRenderer(t)),this._connectComputations(),this._updatingHandles.addWhen(()=>!this._shouldRenderTracker,()=>this._clearCursorTracker(),z)])}destroy(){this._updatingHandles=V(this._updatingHandles),this._handles=V(this._handles),this._manipulatorHandles=V(this._manipulatorHandles),this._analysisHandles=V(this._analysisHandles),this._observerManipulator=null,this._clearCursorTracker(),this._removeVisualElements(),this._intersector=null,this._set("analysis",null)}get state(){return this.active?this.hasGrabbedManipulators?U.Created:U.Creating:p(this.analysis.observer)&&p(this.analysis.observer.position)?U.Created:U.Ready}get cursor(){return this.active&&this._showTracker?"crosshair":null}get updating(){return p(this.analysisViewData)&&this.analysisViewData.updating||this._updatingHandles.updating}get _showTracker(){return this.active&&this._latestPointerMovePointerType==="mouse"}get _shouldRenderTracker(){return this._showTracker&&p(this.analysis.observer)&&p(this.analysis.observer.position)&&!this.hasGrabbedManipulators}continue(){this.view.activeTool=this}stop(){this.view.activeTool=null}onEditableChange(){this.analysisViewData.editable=this.internallyEditable}onInputEvent(t){switch(t.type){case"immediate-double-click":this._doubleClickHandler(t);break;case"key-down":this._keyDownHandler(t);break;case"pointer-move":this._pointerMoveHandler(t)}}onInputEventAfter(t){t.type==="immediate-click"&&this._clickHandler(t)}onShow(){}onHide(){}onDeactivate(){this._clearCursorTracker()}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,t=>this._onComputationsCollectionChange(t),{initial:!0,final:!0})}_onComputationsCollectionChange({added:t,removed:e}){for(const i of e)this._disconnectComputation(i);for(const i of t)this._connectComputation(i)}_connectComputation(t){if(this.destroyed)return void yt.getLogger(this.declaredClass).warn("Attempting to connect an analysis to a destroyed LineOfSight tool. Ignoring.");const e=this._analysisHandles;if(e.has(t))return;const i=this._createTargetManipulator(t.target);h(this._targetTrackerManipulator)&&i.metadata.target===this.analysisViewData.cursorTarget&&(this._targetTrackerManipulator=i,this._targetTrackerManipulator.available=!1,this._targetTrackerManipulator.interactive=!1,this._updateLaserLineRenderer()),e.add([this._updatingHandles.add(()=>this._getLineOfSightManipulatorStateDependencies(t),()=>this._updateManipulatorState(i,t),z),this._updatingHandles.add(()=>t.elevationAlignedTargetLocation,n=>this._onTargetLocationChange(n,i),z)],t)}_disconnectComputation(t){if(this.destroyed)return void yt.getLogger(this.declaredClass).warn("Attempting to disconnect an analysis from a destroyed LineOfSight tool. Ignoring.");this._analysisHandles.remove(t);const e=this._getTargetManipulator(t.target);p(e)&&(this.manipulators.remove(e),this._manipulatorHandles.remove(e),p(this._targetTrackerManipulator)&&this._targetTrackerManipulator===e&&(this._targetTrackerManipulator=null))}_clearCursorTracker(){this.analysisViewData.cursorTarget=V(this.analysisViewData.cursorTarget)}_createManipulator(t,e,i){const n=Me(this.view,t);return n.metadata=i,this._manipulatorHandles.add([e(n),n.events.on("grab-changed",s=>this._manipulatorGrabChanged(n,s)),n.events.on("immediate-click",s=>this._manipulatorClick(n,s))],n),this.manipulators.add(n),n}_createTargetManipulator(t){const e=this.configuration,i={size:e.target.size,customColor1:e.target.visibleColor,customColor2:e.target.occludedColor,customColor3:e.target.undefinedColor,visible:!0},n={target:t,type:"target"},s=this._createManipulator(i,l=>this._createTargetManipulatorDragPipeline(l),n);return p(t.position)?s.elevationAlignedLocation=t.position:s.available=!1,s}_getTargetManipulator(t){let e=null;return this.manipulators.forEach(i=>{const n=i.manipulator;h(e)&&n.metadata.type==="target"&&n.metadata.target===t&&(e=n)}),e}_createObserverManipulator(){const t=this.configuration,e={size:t.observer.size,color:t.observer.color,visible:!0};return this._createManipulator(e,i=>this._createObserverManipulatorDragPipeline(i),{type:"observer",intersection:null})}_updateObserverManipulatorStyle(){const t=this._observerManipulator,e=this.configuration.observer,i={size:e.size,color:e.color,visible:t.available};t.renderObjects=Nt(i)}_screenToIntersection(){return t=>{const e=this._intersector.getScreenPointIntersection(t.screenEnd);return h(e)?null:{...t,intersection:e}}}_createTargetManipulatorDragPipeline(t){return Lt(t,(e,i,n)=>{i.next(this._screenToIntersection()).next(this._updateTargetDragStep(t)).next(()=>this._updateLaserLineRenderer()),n.next(this._cancelTargetDragStep(t.metadata.target)).next(()=>this._updateLaserLineRenderer())})}_createObserverManipulatorDragPipeline(t){return Lt(t,(e,i,n)=>{i.next(this._screenToIntersection()).next(this._updateObserverDragStep()).next(()=>this._updateLaserLineRenderer()),n.next(this._cancelObserverDragStep()).next(()=>this._updateLaserLineRenderer())})}_updateObserverDragStep(){return t=>(p(t.intersection.mapPoint)?(h(this.analysis.observer)&&(this.analysis.observer=new Ot),this._updateFromIntersection(this.analysis.observer,t.intersection)):this.analysis.observer=null,t)}_cancelObserverDragStep(){const t=p(this.analysis.observer)&&p(this.analysis.observer.position)?this.analysis.observer.clone():null;return e=>(this.analysis.observer=t,e)}_updateTargetDragStep(t){return e=>{this._updateFromIntersection(t.metadata.target,e.intersection);const i=e.intersection.mapPoint;return p(i)&&(t.elevationAlignedLocation=i),e}}_cancelTargetDragStep(t){const e=xt(t.position,i=>i.clone());return i=>(t.position=e,i)}_manipulatorGrabChanged(t,e){switch(e.action){case"start":this._grabbedManipulator=t;break;case"end":this._grabbedManipulator===t&&(this._grabbedManipulator=null)}}_updateManipulatorState(t,e){const{isValid:i,isTargetVisible:n}=e.computationResult;t.state=i?n?Y.Custom1:Y.Custom2:Y.Custom3}_getLineOfSightManipulatorStateDependencies(t){const{isValid:e,isTargetVisible:i}=t.computationResult;return{isValid:e,isTargetVisible:i}}_laserLineRendererDependencies(){return{laserlineVisualElement:this._laserlineVisualElement,grabbedManipulator:this._grabbedManipulator,shouldRenderTracker:this._shouldRenderTracker,observerPosition:p(this.analysis.observer)?this.analysis.observer.position:null,visible:this.visible}}_updateLaserLineRenderer(t=this._laserLineRendererDependencies()){const{laserlineVisualElement:e,grabbedManipulator:i,shouldRenderTracker:n,observerPosition:s,visible:l}=t;if(h(e))return;const a=p(i)?i:n&&p(s)?this._targetTrackerManipulator:null;this.configuration.laserLine.enabled&&p(a)&&l?(e.visible=!0,e.heightManifoldTarget=a.renderLocation,a!==this._observerManipulator?e.lineVerticalPlaneSegment=be(this._observerManipulator.renderLocation,a.renderLocation,De):e.lineVerticalPlaneSegment=null):(e.visible=!1,e.heightManifoldTarget=null,e.lineVerticalPlaneSegment=null)}_createVisualElements(){const t=this.configuration.laserLine;this._removeVisualElements(),this._laserlineVisualElement=new Te({view:this.view,attached:!0,visible:this.visible,style:{glowColor:d.toUnitRGB(t.glowColor),glowWidth:t.glowWidth,innerColor:d.toUnitRGB(t.innerColor),innerWidth:t.innerWidth,globalAlpha:t.globalAlpha}})}_removeVisualElements(){p(this._laserlineVisualElement)&&(this._laserlineVisualElement.destroy(),this._laserlineVisualElement=null)}_onObserverLocationChange(t){h(t)?this._observerManipulator.available=!1:(this._observerManipulator.metadata.intersection=null,this._observerManipulator.available=!0,this._observerManipulator.elevationAlignedLocation=t)}_onTargetLocationChange(t,e){p(t)?(e.elevationAlignedLocation=t,e!==this._targetTrackerManipulator&&(e.available=!0)):e.available=!1}_addPointFromClickEvent(t){const e=this._intersector.getScreenPointIntersection(t);if(!h(e)&&!h(e.mapPoint))if(p(this.analysis.observer)&&p(this.analysis.observer.position)){this._clearCursorTracker();const i=new Tt;this._updateFromIntersection(i,e),this.analysis.targets.add(i)}else{const i=new Ot;this._updateFromIntersection(i,e),this.analysis.observer=i}}_clickHandler(t){this.active&&t.button!==ht.Right&&(this._addPointFromClickEvent(St(t)),t.stopPropagation())}_doubleClickHandler(t){this.active&&t.button!==ht.Right&&(this.stop(),t.stopPropagation())}_keyDownHandler(t){this.active&&t.key==="Escape"&&(this.stop(),t.stopPropagation())}_pointerMoveHandler(t){if(this.hasGrabbedManipulators||(this._latestPointerMovePointerType=t.pointerType,this._updateLaserLineRenderer(),!this._showTracker||h(this.analysis.observer)||h(this.analysis.observer.position)))return;const e=St(t),i=this._intersector.getScreenPointIntersection(e);p(i)&&p(i.mapPoint)&&(h(this.analysisViewData.cursorTarget)&&(this.analysisViewData.cursorTarget=new Tt),this._updateFromIntersection(this.analysisViewData.cursorTarget,i),this._updateLaserLineRenderer())}_updateFromIntersection(t,e){if(h(e.mapPoint))return t.position=null,t.elevationInfo=null,void(t.feature=null);switch(e.type){case X.OBJECT:if(p(e.graphic)){const n=e.graphic,s=ae(n);s.mode==="on-the-ground"&&(s.mode="relative-to-ground",s.offset=0),t.elevationInfo=new At(s),t.feature=n}else t.elevationInfo=null,t.feature=null;break;case X.TERRAIN:case X.I3S:t.elevationInfo=new At({mode:"on-the-ground"}),t.feature=null;break;default:t.elevationInfo=null,t.feature=null}const i=e.mapPoint.clone();i.z=le(this.view,i,{mode:"absolute-height",offset:0},t.elevationInfo),t.position=i}_manipulatorClick(t,e){if(t.metadata.type==="observer"||t.grabbing||t.dragging||e.button!==ht.Right||this.analysis.targets.length<=1)return;const{target:i}=t.metadata;this.analysis.targets.remove(i),e.stopPropagation()}get testInfo(){return{laserLineVisualElement:this._laserlineVisualElement}}};o([r({constructOnly:!0})],O.prototype,"view",void 0),o([r({constructOnly:!0})],O.prototype,"analysis",void 0),o([r({readOnly:!0})],O.prototype,"state",null),o([r({readOnly:!0})],O.prototype,"cursor",null),o([r()],O.prototype,"removeIncompleteOnCancel",void 0),o([r({readOnly:!0})],O.prototype,"updating",null),o([r({type:N})],O.prototype,"configuration",void 0),o([r({constructOnly:!0})],O.prototype,"analysisViewData",void 0),o([r({readOnly:!0})],O.prototype,"_showTracker",null),o([r()],O.prototype,"_latestPointerMovePointerType",void 0),o([r()],O.prototype,"_shouldRenderTracker",null),o([r()],O.prototype,"_laserlineVisualElement",void 0),o([r()],O.prototype,"_grabbedManipulator",void 0),O=o([S("esri.views.3d.interactive.analysisTools.lineOfSight.LineOfSightTool")],O);const De=fe();let H=class extends R{constructor(e){super(e),this._lineOfSightVisualizations=[],this._computationHandles=new K,this._updatingHandles=new Ct}initialize(){this.addHandles(this._connectComputations()),this._createObserverVisualization()}destroy(){this._updatingHandles=V(this._updatingHandles),this._computationHandles=V(this._computationHandles),this._observerVisualElement=V(this._observerVisualElement)}get visible(){return this.analysisViewData.visible}get updating(){return this._updatingHandles.updating}get interactiveAndEditable(){return this.analysisViewData.interactive&&this.analysisViewData.editable}get testInfo(){return{visualizations:this._lineOfSightVisualizations}}get _configuration(){return this.analysisViewData.configuration}_createLineOfSightVisualization(){const e=this._configuration,i=this.view,n={view:i,attached:!0,width:e.outerWidth,innerWidth:e.innerWidth},s=d.toUnitRGBA(e.visibleOuterColor),l=d.toUnitRGBA(e.visibleInnerColor),a=d.toUnitRGBA(e.occludedOuterColor),g=d.toUnitRGBA(e.occludedInnerColor),m=d.toUnitRGBA(e.undefinedOuterColor),c=d.toUnitRGBA(e.undefinedInnerColor),u={visibleLineVisualElement:new mt({...n,color:s,innerColor:l}),occludedLineVisualElement:new mt({...n,color:a,innerColor:g}),undefinedLineVisualElement:new mt({...n,color:m,innerColor:c}),targetVisualElement:new $t({view:i,attached:!0,...Dt,size:8})};return this._lineOfSightVisualizations.push(u),u}_destroyLineOfSightVisualization(e){e.visibleLineVisualElement=V(e.visibleLineVisualElement),e.occludedLineVisualElement=V(e.occludedLineVisualElement),e.undefinedLineVisualElement=V(e.undefinedLineVisualElement),e.targetVisualElement=V(e.targetVisualElement),this._lineOfSightVisualizations.splice(this._lineOfSightVisualizations.indexOf(e),1)}_updateLineOfSightVisualization(e,i,n){const s=this._configuration,{computationResult:l,inputPoints:a}=e,{start:g,end:m,intersection:c,isValid:u,isTargetVisible:_}=l,{observer:v}=a,b=Fe;b[12]=v[0],b[13]=v[1],b[14]=v[2];const I=et(ze,g,v),w=et(ke,m,v),P=et(xe,c,v),{visibleLineVisualElement:T,occludedLineVisualElement:E,undefinedLineVisualElement:j,targetVisualElement:B}=i,jt=h(this.analysisViewData.elevationAlignedObserver)||h(e.elevationAlignedTargetLocation),tt=this.visible&&!jt;T.visible=tt,E.visible=tt,j.visible=tt,B.visible=tt,B.attached=!n.interactiveAndEditable,tt&&(T.geometry=null,E.geometry=null,j.geometry=null,B.geometry=e.elevationAlignedTargetLocation,u?_?(T.geometry=[[k(I),k(w)]],T.transform=b,T.color=d.toUnitRGBA(s.visibleOuterColor),B.color=d.toUnitRGBA(s.visibleInnerColor)):(T.geometry=[[k(I),k(P)]],T.transform=b,T.color=d.toUnitRGBA(s.occludedOuterColor),E.geometry=[[k(P),k(w)]],E.transform=b,B.color=d.toUnitRGBA(s.occludedInnerColor)):(j.geometry=[[k(I),k(w)]],j.transform=b,B.color=d.toUnitRGBA(s.undefinedInnerColor)))}_getLineOfSightVisualizationDependencies(e){const{computationResult:i}=e,{occludedOuterColor:n,visibleOuterColor:s}=this._configuration;return{computationResult:i,occludedOuterColor:n,visibleOuterColor:s,visible:this.visible,interactiveAndEditable:this.interactiveAndEditable}}_connectComputation(e){const i=this._computationHandles;if(i.has(e))return;const n=this._createLineOfSightVisualization();i.add([this._updatingHandles.add(()=>this._getLineOfSightVisualizationDependencies(e),s=>this._updateLineOfSightVisualization(e,n,s),{initial:!0,equals:()=>!1}),zt(()=>this._destroyLineOfSightVisualization(n))],e)}_disconnectComputation(e){this._computationHandles.remove(e)}_connectComputations(){return this._updatingHandles.addOnCollectionChange(()=>this.analysisViewData.computations,e=>this._onComputationsCollectionChange(e),{initial:!0,final:!0})}_onComputationsCollectionChange({added:e,removed:i}){for(const n of i)this._disconnectComputation(n);for(const n of e)this._connectComputation(n)}_createObserverVisualization(){const e=d.toUnitRGBA(this._configuration.visibleInnerColor),i=new $t({view:this.view,attached:!1,color:e,...Dt});this._observerVisualElement=i,this.addHandles(this._updatingHandles.add(()=>({observer:this.analysisViewData.elevationAlignedObserver,interactiveAndEditable:this.interactiveAndEditable,visible:this.visible}),({observer:n,interactiveAndEditable:s,visible:l})=>{h(n)||s||!l?i.attached=!1:(i.geometry=n,this._observerVisualElement.attached=!0)},z))}};o([r({constructOnly:!0})],H.prototype,"analysis",void 0),o([r({constructOnly:!0})],H.prototype,"analysisViewData",void 0),o([r({constructOnly:!0})],H.prototype,"view",void 0),o([r({readOnly:!0})],H.prototype,"visible",null),o([r()],H.prototype,"updating",null),o([r()],H.prototype,"interactiveAndEditable",null),o([r()],H.prototype,"testInfo",null),o([r()],H.prototype,"_configuration",null),H=o([S("esri.views.3d.analysis.LineOfSight.LineOfSightVisualization")],H);const Dt={size:6,pixelSnappingEnabled:!1,primitive:"circle",elevationInfo:{mode:"absolute-height",offset:0},outlineSize:0},ze=y(),ke=y(),xe=y(),Fe=Le();let C=class extends Zt(kt.EventedMixin(R)){constructor(t){super(t),this.type="line-of-sight-view-3d",this.analysis=null,this.tool=null,this.computations=new Ut,this.elevationAlignedObserver=null,this.configuration=new $,this.observerEngineLocation=y(),this.cursorTarget=null,this.editable=!0}initialize(){const t=this.view,e=this.analysis;this._analysisController=new f({analysis:e,analysisViewData:this,view:t}),this._analysisVisualization=new H({analysis:e,analysisViewData:this,view:t}),this.addHandles([this._analysisController.on("result-changed",i=>{i.target!==this.cursorTarget&&this.emit("result-changed",i)}),Pe(this,O)])}destroy(){Ve(this),this._analysisController=V(this._analysisController),this._analysisVisualization=V(this._analysisVisualization)}get results(){return this.computations.map(t=>t.result)}get priority(){return this._analysisController.priority}set priority(t){this._analysisController.priority=t}get updating(){return p(this._analysisController)&&this._analysisController.updating||p(this._analysisVisualization)&&this._analysisVisualization.updating}getResultForTarget(t){const e=this.computations.find(i=>i.target===t);return xt(e,i=>i.result)}get testInfo(){return{visualization:this._analysisVisualization,controller:this._analysisController}}};o([r({readOnly:!0})],C.prototype,"type",void 0),o([r({constructOnly:!0,nonNullable:!0})],C.prototype,"analysis",void 0),o([r()],C.prototype,"tool",void 0),o([r({readOnly:!0})],C.prototype,"results",null),o([r()],C.prototype,"priority",null),o([r()],C.prototype,"computations",void 0),o([r()],C.prototype,"elevationAlignedObserver",void 0),o([r()],C.prototype,"configuration",void 0),o([r()],C.prototype,"observerEngineLocation",void 0),o([r()],C.prototype,"cursorTarget",void 0),o([r()],C.prototype,"updating",null),o([r()],C.prototype,"editable",void 0),o([r()],C.prototype,"_analysisController",void 0),o([r()],C.prototype,"_analysisVisualization",void 0),C=o([S("esri.views.3d.analysis.LineOfSightAnalysisView3D")],C);const pa=C;export{pa as default};
