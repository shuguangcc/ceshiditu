import{v as Xe,aL as Ie,J as c,a4 as Ee,dt as te,cm as Y,eO as Ke,lA as Qe,bE as $,kb as F,C as je,lB as ae,lC as ne,cR as ee,d1 as oe,d0 as Ue,i2 as Ye,dz as et,eP as he,a$ as We,lD as tt,c6 as _e,lE as st,lF as fe,lG as Le,cn as it,ck as se,bY as ye,c_ as ve,lH as rt,eD as nt,lI as at,gZ as Se,lJ as we,lK as ot,lL as ht,u as _,cE as Fe,lM as lt,e as o,y as l,b as re,f as pe,l as k,cH as be,lN as dt,lO as ct,s as ut,b3 as gt,t as ke,dJ as Ce,a as v,hb as pt,be as le,lP as mt,B as N,d as W,fE as _t,bR as ft,iW as Lt,bw as T,c2 as Pe,iZ as yt,bZ as vt,lQ as Ae,j0 as St,j1 as q,c7 as wt,_ as bt,lR as Ct,X as J,c8 as Pt,c9 as At,ca as Mt,cb as $t,j3 as Vt,j5 as Rt,cc as Gt,j6 as Dt,cd as xt,cg as z,ch as zt,j9 as Ot,i as Me,E as X,jb as Tt,jc as It,k4 as Et,je as jt,a9 as Ne,e5 as ie,lS as D,gm as Ut,lT as $e,eI as Ve,e2 as Wt,bv as Ft,bx as Re,dS as E,c5 as kt,lU as Nt,lV as qt,lW as Bt,lX as Ht,bV as Zt,lY as Jt,lZ as Xt,l_ as Kt,l$ as Qt,m0 as Yt}from"./index-74d49a87.js";import{b as qe,v as Be,c as de,e as ce,t as es,i as K,u as ts,s as ss,a as is,d as rs}from"./analysisThemeUtils-0b7e15c5.js";import{a as ns,n as as,g as j,b as os}from"./LineVisualElement-904de9f6.js";import{a as U,o as Ge,g as Q,m as De,v as hs,b as xe,f as ue}from"./Segment-a1fa4b06.js";import{geodesicArea as ls}from"./geometryEngine-0bddb0d3.js";import{V as ze,g as ds,w as cs,p as us}from"./EditGeometryOperations-023b3d76.js";function gs(t,e){const s=e.center;Ee(s,0,0,0);for(let r=0;r<t.length;++r)te(s,s,t[r]);Y(s,s,1/t.length);let i=0;for(let r=0;r<t.length;++r)i=Math.max(i,Ke(s,t[r]));e.radius=Math.sqrt(i)}function ps(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");Qe(t[0],t[1],t[2],e)}function ms(t,e){return $(t,e)+t[3]}function _s(t,e,s){return F(t,V,s)&&F(e,R,s)?je(V,R):0}function fs(t,e){if(!ae(t,V)||!ae(e,R))return 0;const s=new Be;return qe(s,[V[0],V[1]],[R[0],R[1]]),s.distance}function Ls(t,e,s){const i=new Be;return qe(i,[t[0],t[1]],[e[0],e[1]],s),i.distance}function ys(t,e,s,i){const r=Ss;return ne(t,i,V)&&ne(e,i,R)&&ne(s,i,ge)?(r.setPoint(0,0,V),r.setPoint(0,1,R),r.setPoint(0,2,ge),Math.abs(ls(r,"square-meters"))):0}function vs(t,e=null,s=!0){const r=(n,a)=>{if(a[0]===0&&a[1]===0&&a[2]===0)return!1;for(let h=0;h<n.length;++h)if($(a,n[h])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&ee(e,t[0]),!0;Ee(S,0,0,0);for(let n=0;n<t.length;++n)te(S,S,t[n]);if(oe(S,S),r(t,S))return e&&ee(e,S),!0;if(!s)return!1;for(let n=0;n<t.length;++n)for(let a=0;a<t.length;++a)if(n!==a&&(Ue(S,t[n],t[a]),oe(S,S),r(t,S)))return e&&ee(e,S),!0;return!1}const V=c(),R=c(),ge=c(),Ss=new Xe({rings:[[V,R,ge]],spatialReference:Ie.WGS84}),S=c();function Oe(t){return Ye(ws(t),[],2)}function ws(t){const e=new Float64Array(2*t.length);for(let s=0;s<t.length;++s){const i=t[s],r=2*s;e[r+0]=i[0],e[r+1]=i[1]}return e}class bs{constructor(e,s){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=c(),this.areaCentroidRenderCoords=c(),this.geodesicAreaCentroidRenderCoords=c(),this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=c(),this._planeWorldCoords=et(),this._worldUp=c(),this._worldTangent=c(),this._frame=[c(),c(),c()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=c(),this._tempV=c(),this._tempVec3=c(),this._tempSphere={center:c(),radius:0},this._sceneView=e,this.unitNormalizer=s}update(e,s,i,r,n,a,h){const d=this.unitNormalizer,g=this._sceneView.renderSpatialReference,u=this.unitNormalizer.spatialReference,m=_(s);if(this._pathVersion===e.version&&this._validMeasurement===r&&!h&&this._hasCursorPoint===m&&this._mode===a)return!e.isValidPolygon&&(this._updateCursorSegmentLength(e,s),!0);this._pathVersion=e.version,this._validMeasurement=r,this._hasCursorPoint=m;const p=e.numVertices;this._resize(p);const y=he(i.spatialReference),C=We(i.spatialReference,y)&&tt(i.spatialReference),{positionsGeographic:P,positionsWorldCoords:B,positionsRenderCoords:A,positionsSpherical:x}=this;e.forEachVertexPosition((L,b)=>{Cs(i.elevationProvider,L),F(L,B[b],u),F(L,A[b],g),C&&(ae(L,P[b]),F(L,x[b],y),oe(x[b],x[b]))});const H=this._updatePathLengths(r);if(this.pathLength=this._length>1?U(d.normalizeDistance(H),"meters"):null,C){const L=this._updateGeodesicPathLengths(r,u);this.geodesicPathLength=this._length>1?U(L,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,s),this._updateMode(e,a),r?(this._updateArea(i,d,g,u,n),C&&this._updateGeodesicArea(i),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(c()),this.positionsRenderCoords.push(c()),this.positionsProjectedWorldCoords.push(_e()),this.positionsFittedRenderCoords.push(c()),this.positionsGeographic.push(c()),this.positionsSpherical.push(c()),this.positionsStereographic.push(_e()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorldCoords,i=this.pathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const a=i[n]=je(s[n],s[(n+1)%this._length]);(n<this._length-1||e)&&(r+=a)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let n=0;for(let a=0;a<this._length;++a){const h=r[a]=Ls(i[a],i[(a+1)%this._length],s??void 0);(a<this._length-1||e)&&(n+=h)}return n}_updateArea(e,s,i,r,n){const a=e.renderCoordsHelper,h=this.positionsWorldCoords,d=this.positionsRenderCoords,g=this.positionsProjectedWorldCoords,u=this.positionsFittedRenderCoords,m=this._planeWorldCoords,p=this._centroidRenderCoords;de(d,p),a.worldUpAtPosition(p,this._worldUp),a.worldBasisAtPosition(p,st.X,this._worldTangent),fe(p,this._worldUp,i,this._worldUp,r),fe(p,this._worldTangent,i,this._worldTangent,r),h.length>2&&ps(h,m),this.fittingMode=this._selectFittingMode(m,h,this._worldUp,n);let y=0;if(this.fittingMode==="horizontal"){let L=-1/0;d.forEach((b,Z)=>{const me=a.getAltitude(d[Z]);me>L&&(L=me,y=Z)})}const C=h[y];let P=m,B=this._worldTangent;this.fittingMode==="horizontal"?P=this._worldUp:this.fittingMode==="vertical"&&(P=this._tempVec3,B=this._worldUp,Le(m,this._worldUp,P)),ee(this._frame[2],P),Le(B,P,this._frame[0]),Ue(this._frame[1],this._frame[0],this._frame[2]),it(this._frame[1],this._frame[1]);const A=this._tempVec3,x=this._tempU,H=this._tempV;for(let L=0;L<this._length;++L){const b=g[L],Z=u[L];se(A,h[L],C),ye(b,$(this._frame[0],A),$(this._frame[1],A)),Y(x,this._frame[0],b[0]),Y(H,this._frame[1],b[1]),te(A,x,H),te(A,A,C),ve(A,r,Z,i)}this.perimeterLength=this._length>0?U(s.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,de(u,this.areaCentroidRenderCoords),ve(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?Ge(s.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,a=this._tempVec3,h=vs(r,a);if(!h)return void(this.geodesicArea=null);const d=this._tempU,g=this._tempV;rt(a,d,g);for(let u=0;u<this._length;++u){const m=$(r[u],d),p=$(r[u],g),y=$(r[u],a);ye(n[u],m/y,p/y)}Y(a,a,nt(i).radius),s.toRenderCoords(a,he(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?Ge(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=at(e[r],e[(r+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],a=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];Se(n,a,h,d)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,s=this.triangleIndices=we(Oe(e));let i=0;for(let r=0;r<s.length;r+=3)i+=ot(e[s[r]],e[s[r+1]],e[s[r+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],a=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];Se(n,a,h,d)&&(s.add(i),s.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=we(Oe(s));let r=0;for(let n=0;n<i.length;n+=3)r+=ys(e[i[n]],e[i[n+1]],e[i[n+2]],Ie.WGS84);return r}_selectFittingMode(e,s,i,r){const n=s.map(u=>Math.abs(ms(e,u))).reduce((u,m)=>Math.max(u,m),0);gs(s,this._tempSphere);const a=n/(2*this._tempSphere.radius),h=a<r.maxRelativeErrorCoplanar,d=a<r.maxRelativeErrorAlmostCoplanar;let g="horizontal";return h?g="oblique":d&&(g=Math.abs($(i,e))>Math.cos(ht(r.verticalAngleThreshold))?"horizontal":"vertical"),g}_updateCursorSegmentLength(e,s){const i=e.lastPoint;!e.isValidPolygon&&_(i)&&_(s)?(this.geodesicCursorSegmentLength=U(fs(i,s),"meters"),this.cursorSegmentLength=U(this.unitNormalizer.normalizeDistance(_s(i,s,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,s){if(s===ce.Auto){this.actualMeasurementMode="euclidean";let i=0;this.geodesicPathLength!=null&&(i+=this.geodesicPathLength.value),!e.isValidPolygon&&_(this.geodesicCursorSegmentLength)&&(i+=this.geodesicCursorSegmentLength.value),i>Ps&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=s===ce.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=s}}function Cs(t,e){e.hasZ||(e.z=Fe(lt(t,e,"ground"),0))}const Ps=1e5;let O=class extends pe{constructor(t){super(t)}initialize(){const t=this.view.spatialReference,e=he(t),s=e===dt?ct:e,i=!t||We(t,s)?s:t,r=new es(i);this._measurementDataManager=new bs(this.view,r),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),k(()=>this.analysisViewData.cursorPoint,()=>this._update(),be),k(()=>this.analysisViewData.mode,()=>this._update(),be)]),this._update()}_update(t=!1){const{analysisViewData:e,view:s}=this,i={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(e.path,e.cursorPoint,s,e.validMeasurement,i,e.mode,t)&&(e.measurementData=this._measurementDataManager.getData())}};o([l({constructOnly:!0})],O.prototype,"view",void 0),o([l({constructOnly:!0})],O.prototype,"analysis",void 0),o([l({constructOnly:!0})],O.prototype,"analysisViewData",void 0),O=o([re("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],O);const He="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",As=ut.getLogger(He);let M=class extends gt.EventedAccessor{constructor(t={}){super(t),this._handles=new ke,this._version=0,this._internalGeometryChange=!1,this._extent=Ce()}destroy(){this._handles=v(this._handles)}set areaMeasurement(t){this._set("areaMeasurement",t),_(t)&&_(this.view)&&this._initialize(t,this.view)}set view(t){this._set("view",t),_(t)&&_(this.areaMeasurement)&&this._initialize(this.areaMeasurement,t)}get constructed(){return _(this.areaMeasurement)&&_(this.view)}get version(){return this._version}get isValidPolygon(){return this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const t=Ce(this._extent);return this.forEachVertex(e=>{pt(t,e.pos)}),t}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(t,e){this._handles.removeAll(),this._handles.add(k(()=>t.geometry,()=>{this._updateEditGeometryFromModelGeometry(t,e)},le)),this._makeDirty(!0)}_makeDirty(t=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),t&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(t,e){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let s=t.geometry;if(_(s)){const i=mt(s,e.spatialReference);N(i)&&ns(t,s.spatialReference,As),s=i}_(s)?this._editGeometryOperations=ze.fromGeometry(s,e.state.viewingMode):this._editGeometryOperations=new ze(new ds("polygon",cs(!0,!1,e.spatialReference))),this._makeDirty(!0),this.emit("change"),this._handles.add(this._editGeometry.on("change",i=>{this._makeDirty(i.addedVertices!=null||i.removedVertices!=null),this._internalGeometryChange=!0,t.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const t=[];return this.forEachVertex(e=>{t.push(e)}),t}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getLastVertex();if(_(t))return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}getVertex(t){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const e=this._editGeometry.components[0].vertices[0];let s=e;do{if(s.index===t)return s;s=s.rightEdge.rightVertex}while(s!==e&&s!=null);return null}getVertexPositionAsPoint(t){return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}getVertexPositionAsPointFromIndex(t){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(t).pos)}forEachVertex(t){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(t)}forEachVertexPosition(t){const e=this._editGeometry.coordinateHelper;this.forEachVertex((s,i)=>{e.vectorToPoint(s.pos,Te),t(Te,i)})}clear(){_(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(t){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=W(this.view);this._editGeometry.components.push(new us(s.spatialReference,s.state.viewingMode))}const e=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),e}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const t=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),t}ensureContains(t,e=""){let s=!1;if(this._editGeometry.components.forEach(i=>{i.iterateVertices(r=>{r===t&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${e}`);return s}setVertexPosition(t,e){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(t,this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}equals(t){if(this.numVertices!==t.numVertices)return!1;let e=!0;return this.forEachVertexPosition((s,i)=>{const r=t.getVertexPositionAsPointFromIndex(i);s.equals(r)||(e=!1)}),!!e}};o([l({value:null})],M.prototype,"areaMeasurement",null),o([l({value:null})],M.prototype,"view",null),o([l()],M.prototype,"isValidPolygon",null),o([l()],M.prototype,"extent",null),o([l()],M.prototype,"spatialReference",null),o([l()],M.prototype,"numVertices",null),M=o([re(He)],M);const Te=new _t;function Ms(t){const e=new ft;e.extensions.add("GL_OES_standard_derivatives");const{vertex:s,fragment:i}=e;return Lt(s,t),e.attributes.add(T.POSITION,"vec3"),e.attributes.add(T.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.hasMultipassTerrain&&e.varyings.add("depth","float"),s.code.add(Pe`
    void main(void) {
      vUV = uv0;
      ${t.hasMultipassTerrain?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(yt,t),i.uniforms.add(new vt("size",r=>r.size)),i.uniforms.add(new Ae("color1",r=>r.color1)),i.uniforms.add(new Ae("color2",r=>r.color2)),i.include(St),i.code.add(Pe`
    void main() {
      ${t.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${t.transparencyPassType===q.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),e}const $s=Object.freeze(Object.defineProperty({__proto__:null,build:Ms},Symbol.toStringTag,{value:"Module"}));let Ze=class Je extends Pt{initializeProgram(e){return new At(e.rctx,Je.shader.get().build(this.configuration),Mt)}_setPipelineState(e){const s=this.configuration,i=e===q.NONE,r=e===q.FrontFace;return $t({blending:s.transparent?i?Rs:Vt(e):null,depthTest:{func:Rt(e)},depthWrite:i?s.writeDepth?Gt:null:Dt(e),colorWrite:xt,polygonOffset:i||r?s.polygonOffset?Vs:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}};Ze.shader=new wt($s,()=>bt(()=>import("./CheckerBoard.glsl-2f6cdf84.js"),["./CheckerBoard.glsl-2f6cdf84.js","./index-74d49a87.js","./index-45742df3.css","./analysisThemeUtils-0b7e15c5.js","./Segment-a1fa4b06.js","./LineVisualElement-904de9f6.js","./elevationInfoUtils-3c9457ff.js","./geometryEngine-0bddb0d3.js","./geometryEngineBase-e1a33b0a.js","./hydrated-42ff4796.js","./EditGeometryOperations-023b3d76.js"],import.meta.url));const Vs={factor:0,units:-25},Rs=Ct(J.SRC_ALPHA,J.ONE,J.ONE_MINUS_SRC_ALPHA,J.ONE_MINUS_SRC_ALPHA);class G extends zt{constructor(){super(...arguments),this.transparencyPassType=q.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}o([z({count:q.COUNT})],G.prototype,"transparencyPassType",void 0),o([z()],G.prototype,"transparent",void 0),o([z()],G.prototype,"writeDepth",void 0),o([z()],G.prototype,"polygonOffset",void 0),o([z()],G.prototype,"hasMultipassTerrain",void 0),o([z()],G.prototype,"cullAboveGround",void 0);class Gs extends Ot{constructor(e){super(e,new xs),this._configuration=new G}dispose(){}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.hasMultipassTerrain=s.multipassTerrain.enabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}requiresSlot(e,s){return s===Me.Color||s===Me.Alpha?e===(this.parameters.transparent?this.parameters.writeDepth?X.TRANSPARENT_MATERIAL:X.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:X.OPAQUE_MATERIAL)||e===X.DRAPED_MATERIAL:!1}createGLMaterial(e){return new Ds(e)}createBufferWriter(){return new Tt(It)}}let Ds=class extends Et{beginSlot(e){return this.ensureTechnique(Ze,e)}};class xs extends jt{constructor(){super(...arguments),this.size=Ne(1,1),this.color1=ie(.75,.75,.75,1),this.color2=ie(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class zs extends as{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=D.OccludeAndTransparent,this._geometry=null,this._size=Ne(1,1),this._color1=ie(1,.5,0,.5),this._color2=ie(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){Ut(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){$e(e,this._color1)||(Ve(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){$e(e,this._color2)||(Ve(this._color2,e),this._updateMaterial())}_updateMaterial(){_(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Gs({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){_(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if(N(this._geometry)||N(this._checkerBoardMaterial))return;const s=Os;Wt(s,this.transform);const i=this._geometry,r=[],n=c();i.position.forEach(d=>{se(n,d,s),r.push(n[0],n[1],n[2])});const a=[];i.uv.forEach(d=>{a.push(d[0],d[1])});const h=new Ft(this._checkerBoardMaterial,[[T.POSITION,new Re(r,3,!0)],[T.UV0,new Re(a,2,!0)]],[[T.POSITION,i.triangleIndices],[T.UV0,i.triangleIndices]]);e.addGeometry(h)}_geometryChanged(){this.recreateGeometry()}}const Os=c();let w=class extends pe{get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}constructor(t){super(t),this._handles=new ke,this._params={pathLineColor:E.toUnitRGBA(K()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:E.toUnitRGBA(K()),perimeterLineWidth:2,projectionLineColor:E.toUnitRGBA(K()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:E.toUnitRGBA(K(.5)),areaColor2:E.toUnitRGBA(ts(.5)),labelDistance:25},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=c(),this._originTransform=kt(),this._cursorPositionRenderSpace=c(),this.messages=null,this.viewData=Ts,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:t,_params:e,view:s}=this;this._path=new j({view:s,attached:!0,width:e.pathLineWidth,color:e.pathLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._intersectedPath=new j({view:s,attached:!0,width:e.pathLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._perimeter=new j({view:s,attached:!0,width:e.perimeterLineWidth,color:e.perimeterLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._intersectedPerimeter=new j({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._projectionLines=new j({view:s,attached:!0,width:e.projectionLineWidth,color:e.projectionLineColor,stipplePattern:Nt(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._measurementArea=new zs({view:s,attached:!0,color1:e.areaColor1,color2:e.areaColor2});const i={attached:!0,backgroundColor:ss(.6),textColor:is(),view:s};this._areaLabel=new Q({...i,fontSize:I.Large}),this._pathLengthLabel=new Q({...i,fontSize:I.Small}),this._cursorSegmentLengthLabel=new Q({...i,fontSize:I.Small}),this._perimeterLengthLabel=new Q({...i,fontSize:I.Small}),this._handles.add([k(()=>[t.mode,this.visible,t.unit,t.measurementData,t.cursorPoint],()=>this._update(),le),k(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),le),qt(()=>this._updateMessageBundle())]),this._updateMessageBundle()}destroy(){this._measurementArea=v(this._measurementArea),this._path=v(this._path),this._intersectedPath=v(this._intersectedPath),this._perimeter=v(this._perimeter),this._intersectedPerimeter=v(this._intersectedPerimeter),this._areaLabel=v(this._areaLabel),this._pathLengthLabel=v(this._pathLengthLabel),this._cursorSegmentLengthLabel=v(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=v(this._perimeterLengthLabel),this._projectionLines=v(this._projectionLines),this._handles=v(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;N(t)||(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,s){const i=e.isValidPolygon,r=t.actualMeasurementMode==="geodesic",n=r?t.geodesicArea:t.area;let a=1;if(n){const d=this._toPreferredAreaUnit(n,this.analysisViewData.unit);a=Bt(Math.sqrt(d.value)/Math.sqrt(300)),a*=Math.sqrt(Ht(1,d.unit,"square-meters")),a/=t.unitNormalizer.normalizeDistance(1)}const h={validMeasurement:i,path:e,pathVersion:e.version,cursorPoint:s,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:a};this._set("viewData",h)}_updateOrigin(){const t=this.viewData;de(t.positionsRenderCoords,this._origin),Zt(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=e.path,i=this.view.renderCoordsHelper.spatialReference,r=e.mode,n=[],a=[],h=[],d=e.validMeasurement?s.numVertices:s.numVertices-1;for(let g=0;g<d;++g){const u=e[t][g],m=e[t][(g+1)%s.numVertices];let p=null;switch(r){case"euclidean":p=new ue(u,m);break;case"geodesic":p=new De(u,m,i)}e.intersectingSegments.has(g)?h.push(p):a.push(p),n.push(p)}return{all:n,nonIntersecting:a,intersecting:h}}_updatePathSegments(){const{view:{renderCoordsHelper:t},viewData:e,visible:s}=this,i=this._createSegments("positionsRenderCoords"),{cursorPoint:r,mode:n,path:a}=e,h=!a.isValidPolygon,d=t.spatialReference;if(this._cursorSegment=null,a.numVertices>0&&h&&_(r)&&t.toRenderCoords(r,this._cursorPositionRenderSpace)){const g=e.positionsRenderCoords[a.numVertices-1],u=this._cursorPositionRenderSpace;let m=null;switch(n){case"euclidean":m=new ue(g,u);break;case"geodesic":m=new De(g,u,d)}i.nonIntersecting.push(m),this._cursorSegment=m}this._path.setGeometryFromSegments(i.nonIntersecting,this._origin),this._path.visible=s,this._intersectedPath.setGeometryFromSegments(i.intersecting,this._origin),this._intersectedPath.visible=s,this._pathSegments=i.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.path,i=t.mode;if(s.numVertices>0&&t.validMeasurement&&i==="euclidean"){const r=[];for(let n=0;n<s.numVertices;++n){const a=c();se(a,t.positionsRenderCoords[n],this._origin);const h=c();se(h,t.positionsFittedRenderCoords[n],this._origin),r.push([a,h])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:s,path:i}=t;if(!i)return;const r=!i.isValidPolygon,n=this.visible,a=this._formatAreaLabel(this.messages,s==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);_(a)?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=a,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&n):this._areaLabel.visible=!1,this._set("areaLabel",W(a));const h=this._formatLengthLabel(this.messages,s==="geodesic"?e.geodesicPathLength:e.pathLength,this.analysisViewData.unit);if(_(h)&&t.pathLengthLabelSegmentIndex>=0&&t.pathLengthLabelSegmentIndex<this._pathSegments.length){const p=this._pathSegments[t.pathLengthLabelSegmentIndex],y=_(this._cursorSegment)?this._cursorSegment:Is;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:p,right:y},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=r&&i.numVertices>0&&n}else this._pathLengthLabel.visible=!1;const d=s==="geodesic"?t.measurementData.geodesicCursorSegmentLength:t.measurementData.cursorSegmentLength;if(_(d)){const p=this._formatLengthLabel(this.messages,d,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=_(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=W(p),this._cursorSegmentLengthLabel.visible=r&&d.value!==0&&n}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const g=t.mode==="geodesic",u=g?e.geodesicPathLength:e.perimeterLength,m=this._formatLengthLabel(this.messages,u,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",W(m)),t.validMeasurement&&t.intersectingSegments.size===0){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=W(m),this._perimeterLengthLabel.visible=!0;let p=!0;for(let y=0;y<t.path.numVertices;++y){const C=(t.perimeterLengthLabelSegmentIndex+y)%t.path.numVertices,P=g?this._pathSegments[C]:this._perimeterSegments[C];if(p=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:P,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;p=!1}this._perimeterLengthLabel.visible=p&&n}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return hs(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return Xt(t.value,t.unit);case"imperial":return Jt(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const s=this._deriveLengthUnitFromAreaUnit(e);switch(s){case"metric":return Qt(t.value,t.unit);case"imperial":return Kt(t.value,t.unit);default:return s}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,s){return t&&e&&xe(t,e,this._preferredAreaUnit(e,s))}_formatLengthLabel(t,e,s){return t&&e&&xe(t,e,this._preferredLengthUnit(e,s))}_updateMessageBundle(){this.loadingMessages=!0,Yt("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var I;o([l()],w.prototype,"view",void 0),o([l()],w.prototype,"messages",void 0),o([l()],w.prototype,"analysis",void 0),o([l()],w.prototype,"viewData",void 0),o([l()],w.prototype,"analysisViewData",void 0),o([l({readOnly:!0})],w.prototype,"areaLabel",void 0),o([l({readOnly:!0})],w.prototype,"perimeterLengthLabel",void 0),o([l()],w.prototype,"loadingMessages",void 0),o([l()],w.prototype,"visible",null),w=o([re("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],w),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(I||(I={}));const Ts={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},Is=new ue(c(),c());let f=class extends os(pe){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=ce.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new M({view:e,areaMeasurement:t}),this.analysisVisualization=new w({view:e,analysis:t,analysisViewData:this}),this.analysisController=new O({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=v(this.analysisController),this.analysisVisualization=v(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return N(t)?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return Fe(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};o([l({readOnly:!0})],f.prototype,"type",void 0),o([l({constructOnly:!0,nonNullable:!0})],f.prototype,"analysis",void 0),o([l()],f.prototype,"updating",null),o([l()],f.prototype,"analysisVisualization",void 0),o([l()],f.prototype,"analysisController",void 0),o([l()],f.prototype,"result",null),o([l()],f.prototype,"measurementData",void 0),o([l()],f.prototype,"viewData",null),o([l()],f.prototype,"validMeasurement",null),o([l()],f.prototype,"path",void 0),o([l()],f.prototype,"lastDraggedVertex",void 0),o([l()],f.prototype,"cursorPoint",void 0),o([l()],f.prototype,"mode",void 0),o([l()],f.prototype,"unit",null),o([l(rs)],f.prototype,"_defaultUnit",void 0),f=o([re("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],f);const Es=f,Bs=Object.freeze(Object.defineProperty({__proto__:null,default:Es},Symbol.toStringTag,{value:"Module"}));export{Bs as A,Ms as n};
