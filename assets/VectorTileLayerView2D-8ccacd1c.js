import{e as P,y as k,n as st}from"./cast-7928d7aa.js";import{g as ot}from"./Graphic-b46e2684.js";import{y as at}from"./string-cdf077e6.js";import{s as V}from"./Error-653283ae.js";import{t as U,r as v,e as lt}from"./typedArrayUtil-a8b5b3e9.js";import{D as nt,j as q}from"./promiseUtils-6684e352.js";import{l as ht,h as pt}from"./reactiveUtils-f41a4e00.js";import"./ensureType-cf29afa9.js";import{m as ct,a as dt}from"./diffUtils-1ac65748.js";import{u as B}from"./aaBoundingRect-4a760199.js";import{E as mt}from"./Extent-69509002.js";import{L as y}from"./enums-0fc02184.js";import{r as ut,i as _t,l as yt,t as ft,n as gt}from"./TileInfoViewPOT-de1d9d50.js";import{e as vt}from"./LRUCache-14115d91.js";import{a as tt}from"./TileStore-787dbea4.js";import{e as O}from"./TileKey-0750ad58.js";import{a1 as Tt,a2 as Ct,a3 as bt}from"./index-455b69b8.js";import{n as St}from"./Evented-515b9d9c.js";import{c as wt,e as Rt}from"./config-1337d16e.js";import{i as N,a as f}from"./StyleDefinition-7d58136b.js";import{I as w}from"./enums-4ca4641f.js";import{e as z}from"./mat3f32-d3d088e8.js";import{a as Dt,e as Et}from"./EffectView-d3bf37ed.js";import{i as It}from"./TileContainer-07bccb79.js";import{O as E,I as G,R as I,C as et,E as Lt,F as Y}from"./enums-64ab819c.js";import{l as j}from"./StyleRepository-14d163c2.js";import{y as Pt}from"./LayerView2D-9c021b91.js";import{r as Ht,M as At,f as Mt}from"./mat3-3fc68e72.js";import{E as W,b as kt}from"./FramebufferObject-50e1b68f.js";import"./Texture-e79b14e7.js";import"./context-util-1e3c8cfc.js";import{t as Ot}from"./VertexElementDescriptor-2925c6af.js";import{y as K}from"./TileStrategy-4189758f.js";import{u as xt}from"./LayerView-b83ced89.js";import"./nextTick-3ee5a785.js";import"./geometry-5a216427.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./PopupTemplate-6eb885db.js";import"./Clonable-ba795b08.js";import"./Collection-78126e82.js";import"./SimpleObservable-7dcdef1d.js";import"./fieldUtils-31bfecd2.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./enumeration-3c281341.js";import"./number-347a3a44.js";import"./locale-30120714.js";import"./Identifiable-aa6d459d.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./request-d3e98716.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./collectionUtils-3831b7c4.js";import"./Portal-8b65c9c4.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./Ellipsoid-89682c5e.js";import"./jsonUtils-03c4af61.js";import"./workers-898a7c4c.js";import"./Connection-a681777e.js";import"./Queue-3a0c055d.js";import"./assets-0b172f07.js";import"./intl-f1e98361.js";import"./messages-be07754e.js";import"./Rect-ea14f53a.js";import"./pbf-e1a6c35b.js";import"./rasterizingUtils-133923fb.js";import"./floatRGBA-fa8308d2.js";import"./TileInfo-34f80a8e.js";import"./unitUtils-47abac71.js";import"./MemCache-4b976a8b.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-ff8c2cfb.js";import"./TimeExtent-744afd75.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./Basemap-a8f7f439.js";import"./deprecate-b9088bd3.js";import"./loadAll-7fd968fe.js";import"./asyncUtils-62e8a185.js";import"./PortalItem-aa42c739.js";import"./writeUtils-067c4f82.js";import"./layerUtils-034678f6.js";import"./compilerUtils-034cacb8.js";import"./CollectionFlattener-3dd1f479.js";import"./TablesMixin-e7a6aab1.js";import"./Layer-f0696768.js";import"./Cyclical-b66238c6.js";import"./projection-d7b57a6c.js";import"./mat4-44a0988f.js";import"./zscale-1e1fc911.js";import"./widget-f7489a3f.js";import"./uuid-73213768.js";import"./dom-5b7af1bf.js";import"./HandleOwner-e1406413.js";import"./byteSizeEstimations-f0cab514.js";import"./executeQueryJSON-bcd96e1a.js";import"./normalizeUtils-ee4bf39f.js";import"./query-922e6fbf.js";import"./pbfQueryUtils-72f9b45b.js";import"./OptimizedFeature-3de538c1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-d9d8ef40.js";import"./FeatureSet-0573546e.js";import"./RelationshipQuery-db5fcd0c.js";import"./LegendOptions-e65e7a9c.js";import"./utils-725f8b4e.js";import"./BlendLayer-d8293c8d.js";import"./parser-2b40deea.js";import"./mat4f32-77b3d8ac.js";import"./ItemCache-ee28c7ba.js";import"./cimSymbolUtils-2e4dde89.js";import"./utils-c81a5c52.js";import"./jsonUtils-c56f8821.js";import"./UniqueValueRenderer-103ec66d.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./lengthUtils-d2d33f94.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./DictionaryLoader-2cf5144e.js";import"./heatmapUtils-84e8c43b.js";import"./vec4f64-e407da96.js";import"./featureConversionUtils-01cdde8a.js";import"./TopFeaturesQuery-785f5453.js";import"./FeatureLayer-a9f3e6ec.js";import"./MultiOriginJSONSupport-27362d57.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./FeatureLayerBase-aebdf2da.js";import"./HeightModelInfo-22ad72d7.js";import"./arcgisLayerUrl-0b2b7691.js";import"./OperationalLayer-24e6fa34.js";import"./ElevationInfo-ce9cacc2.js";import"./editsZScale-2015e7db.js";import"./APIKeyMixin-34d76a46.js";import"./ArcGISService-ea748edf.js";import"./CustomParametersMixin-807d2055.js";import"./EditBusLayer-40671d1a.js";import"./FeatureReductionLayer-4077b2ae.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-e7edf19c.js";import"./PortalLayer-f1a64f99.js";import"./RefreshableLayer-1c078c47.js";import"./ScaleRangeLayer-271178b7.js";import"./TemporalLayer-39c07299.js";import"./TimeInfo-c89d0ef4.js";import"./FeatureTemplate-746d033e.js";import"./FeatureType-c83c5f49.js";import"./fieldProperties-7547b373.js";import"./FieldsIndex-aa6dd3fa.js";import"./versionUtils-92993d41.js";import"./styleUtils-da81b13f.js";import"./popupUtils-07fe66a7.js";import"./colorUtils-82440b70.js";import"./mat2d-d0b91e3e.js";import"./Scheduler-8433672d.js";import"./GraphicsLayer-10573c27.js";import"./ViewingMode-5d7d590b.js";import"./vec2-2cef68de.js";import"./vec2f64-30dc1443.js";import"./vec2f32-461e65a9.js";import"./capabilities-3636c6a4.js";import"./sphere-4f5e644f.js";import"./mat3f64-c6305894.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./lineSegment-e6f72ff2.js";import"./plane-45609588.js";import"./scaleUtils-b32a50d8.js";import"./ElevationSamplerData-7decf898.js";import"./PhysicallyBasedRendering.glsl-a986c926.js";import"./View.glsl-8b12b8c2.js";import"./ShaderBuilder-93e8045e.js";import"./FloatPassUniform-d2dfc562.js";import"./Float4PassUniform-3a47b7b3.js";import"./RgbaFloatEncoding.glsl-6036ca34.js";import"./Texture2DPassUniform-6e8ae673.js";import"./vec3f32-c9aa289f.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-22924c6f.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-0c0898f0.js";import"./ReadLinearDepth.glsl-7ff30f7d.js";import"./WaterSurface.glsl-fc8a5726.js";import"./ForwardLinearDepth.glsl-36f9eb3b.js";import"./Matrix3PassUniform-da8eddae.js";import"./Slice.glsl-a612de15.js";import"./Transform.glsl-f15542a7.js";import"./OutputHighlight.glsl-7364b03b.js";import"./MultipassTerrainTest.glsl-e79d40de.js";import"./NormalUtils.glsl-a59958d7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-cd195b0e.js";import"./EvaluateSceneLighting.glsl-3bbc6edf.js";import"./VisualVariablePassParameters-5807c7dc.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-c6f142fc.js";import"./ScreenSpacePass-00f8c8a4.js";import"./SSAO.glsl-6f3b4065.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-80cf9a21.js";import"./VerticalOffset.glsl-86460edb.js";import"./objectResourceUtils-ef6e3cdf.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-646ba1de.js";import"./vec33-ce3aa99b.js";import"./DefaultMaterial_COLOR_GAMMA-9831d979.js";import"./types-e1c0a5bf.js";import"./Version-9baeb7ac.js";import"./quat-5b263584.js";import"./Texture-bbae5d9d.js";import"./TextureOnly.glsl-18701a3b.js";import"./InterleavedLayout-5e9cf734.js";import"./MixExternalColor.glsl-25f0049c.js";import"./symbolColorUtils-604c5345.js";import"./ObjectAndLayerIdColor.glsl-73c19386.js";import"./OutputDepth.glsl-179f1d8f.js";import"./VisualVariables.glsl-b8290512.js";import"./DiscardOrAdjustAlphaBlend.glsl-5f837994.js";import"./Normals.glsl-90e28525.js";import"./DefaultMaterial.glsl-b4f4cbc5.js";import"./VertexColor.glsl-db21b96c.js";import"./DefaultTechniqueConfiguration-e8962072.js";import"./RealisticTree.glsl-2b30ed32.js";import"./edgeProcessing-3ca548e1.js";import"./deduplicate-b0bc48cc.js";import"./projection-aa2a8986.js";import"./Octree-1a841545.js";import"./HUDMaterial.glsl-4bf3c7df.js";import"./sdfPrimitives-a24e9cb2.js";import"./dehydratedFeatures-4eeb381a.js";import"./quantizationUtils-33aba427.js";import"./labelFormatUtils-4d730eaa.js";import"./I3SUtil-3ffd3baa.js";import"./I3SBinaryReader-3d2c2faa.js";import"./LineCallout.glsl-a0056465.js";import"./earcut-58237617.js";import"./QueryEngineResult-665bf7fb.js";import"./WhereClause-2b5b05b2.js";import"./utils-30a9a7e0.js";import"./generateRendererUtils-a996108f.js";import"./utils-1f4fcfec.js";import"./json-48e3ea08.js";import"./MeshComponent-f50df6af.js";import"./MarkerSizing.glsl-c6fa192a.js";import"./RibbonLine.glsl-2a3b4d4e.js";import"./LineStipple.glsl-de782d6a.js";import"./callExpressionWithFeature-a7532499.js";import"./LineMarker.glsl-8f444621.js";import"./NativeLine.glsl-cdbbf172.js";import"./Path.glsl-60b36878.js";import"./ColorMaterial.glsl-8310ffb3.js";import"./Pattern.glsl-d3388745.js";import"./LercDecoder-73115fd2.js";import"./workerHelper-c6d4a8cb.js";import"./Subtype-5b01b21f.js";import"./datetime-4f774298.js";import"./elevationInfoUtils-427916a5.js";import"./ExportImageParameters-f328a234.js";import"./sublayerUtils-ba7f61bc.js";import"./webStyleSymbolUtils-55ed91cd.js";import"./enums-4b2a86a0.js";import"./WGLContainer-14075e1a.js";import"./WGLBrushVTLSymbol-dcfd88b4.js";import"./definitions-2d0dd0cd.js";import"./number-954e4ab6.js";import"./GeometryUtils-c093d234.js";import"./pixelUtils-c27b13a1.js";import"./Utils-b2b4cf0c.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-afbd57f8.js";import"./MaterialKey-406a59ab.js";import"./alignmentUtils-ae955d28.js";import"./utils-26560131.js";import"./heatmapTextureUtils-d1d96768.js";import"./GeometryUtils-eebff0a0.js";import"./Geometry-daada628.js";const Z=512,Ut=1e-6,$t=(s,t)=>s+1/(1<<2*t);class Ft{constructor(t,e){this._tiles=new Map,this._tileCache=new vt(40,i=>i.dispose()),this._viewSize=[0,0],this._visibleTiles=new Map,this.acquireTile=t.acquireTile,this.releaseTile=t.releaseTile,this.tileInfoView=t.tileInfoView,this._container=e}destroy(){for(const[t,e]of this._tiles)e.dispose();this._tiles=null,this._tileCache.clear(),this._tileCache=null}update(t){this._updateCacheSize(t);const e=this.tileInfoView,i=e.getTileCoverage(t.state,0,"smallest"),{spans:r,lodInfo:o}=i,{level:l}=o,a=this._tiles,h=new Set,p=new Set;for(const{row:n,colFrom:c,colTo:m}of r)for(let g=c;g<=m;g++){const C=O.getId(l,n,o.normalizeCol(g),o.getWorldForColumn(g)),_=this._getOrAcquireTile(C);h.add(C),_.processed()?this._addToContainer(_):p.add(new O(C))}for(const[n,c]of a)c.isCoverage=h.has(n);for(const n of p)this._findPlaceholdersForMissingTiles(n,h);let d=!1;for(const[n,c]of a)c.neededForCoverage=h.has(n),c.neededForCoverage||c.isHoldingForFade&&e.intersects(i,c.key)&&h.add(n),c.isFading&&(d=!0);for(const[n,c]of this._tiles)h.has(n)||this._releaseTile(n);return tt.pool.release(i),!d}clear(){this._tiles.clear(),this._tileCache.clear(),this._visibleTiles.clear()}clearCache(){this._tileCache.clear()}_findPlaceholdersForMissingTiles(t,e){const i=[];for(const[o,l]of this._tiles)this._addPlaceholderChild(i,l,t,e);const r=i.reduce($t,0);Math.abs(1-r)<Ut||this._addPlaceholderParent(t.id,e)}_addPlaceholderChild(t,e,i,r){e.key.level<=i.level||!e.hasData()||zt(i,e.key)&&(this._addToContainer(e),r.add(e.id),t.push(e.key.level-i.level))}_addPlaceholderParent(t,e){const i=this._tiles;let r=t;for(;;){if(r=Bt(r),!r||e.has(r))return;const o=i.get(r);if(o&&o.hasData())return this._addToContainer(o),void e.add(o.id)}}_getOrAcquireTile(t){let e=this._tiles.get(t);return e||(e=this._tileCache.pop(t),e||(e=this.acquireTile(new O(t))),this._tiles.set(t,e),e)}_releaseTile(t){const e=this._tiles.get(t);this.releaseTile(e),this._removeFromContainer(e),this._tiles.delete(t),e.hasData()?this._tileCache.put(t,e,1):e.dispose()}_addToContainer(t){let e;const i=[],r=this._container;if(r.contains(t))return;const o=this._visibleTiles;for(const[l,a]of o)this._canConnectDirectly(t,a)&&i.push(a),U(e)&&this._canConnectDirectly(a,t)&&(e=a);if(v(e)){for(const l of i)e.childrenTiles.delete(l),t.childrenTiles.add(l),l.parentTile=t;e.childrenTiles.add(t),t.parentTile=e}else for(const l of i)t.childrenTiles.add(l),l.parentTile=t;o.set(t.id,t),r.addChild(t)}_removeFromContainer(t){if(this._visibleTiles.delete(t.id),this._container.removeChild(t),v(t.parentTile)){t.parentTile.childrenTiles.delete(t);for(const e of t.childrenTiles)v(t.parentTile)&&t.parentTile.childrenTiles.add(e)}for(const e of t.childrenTiles)e.parentTile=t.parentTile;t.parentTile=null,t.childrenTiles.clear()}_canConnectDirectly(t,e){const i=t.key;let{level:r,row:o,col:l,world:a}=e.key;const h=this._visibleTiles;for(;r>0;){if(r--,o>>=1,l>>=1,i.level===r&&i.row===o&&i.col===l&&i.world===a)return!0;if(h.has(`${r}/${o}/${l}/${a}`))return!1}return!1}_updateCacheSize(t){const e=t.state.size;if(e[0]===this._viewSize[0]&&e[1]===this._viewSize[1])return;const i=Math.ceil(e[0]/Z)+1,r=Math.ceil(e[1]/Z)+1;this._viewSize[0]=e[0],this._viewSize[1]=e[1],this._tileCache.maxSize=5*i*r}}function Bt(s){const[t,e,i,r]=s.split("/"),o=parseInt(t,10);return o===0?null:`${o-1}/${parseInt(e,10)>>1}/${parseInt(i,10)>>1}/${parseInt(r,10)}`}function zt(s,t){const e=t.level-s.level;return s.row===t.row>>e&&s.col===t.col>>e&&s.world===t.world}const Nt=.5,J=1e-6;class Qt extends St{constructor(t,e){super(),this.styleRepository=t,this._tileToHandle=new Map,this._viewState={scale:0,rotation:0,center:[0,0],size:[0,0]},this._declutterViewState={scale:0,rotation:0,center:[0,0],size:[0,0]},this._completed=!1,this._symbolRepository=new ut(4096,e,()=>new Tt),this._symbolDeclutterer=new _t(e,this._symbolRepository,(i,r,o)=>new yt(i,r,o,this.styleRepository,this._zoom,this._viewState.rotation),(i,r)=>{i.allSymbolsFadingOut=!0,i.lastOpacityUpdate=r,Ct(i,r,!0),i.decluttered=!0,i.requestRender()},(i,r)=>this.styleRepository.getStyleLayerByUID(i.styleLayerUID).z-this.styleRepository.getStyleLayerByUID(r.styleLayerUID).z,i=>{const r=this.styleRepository.getStyleLayerByUID(i);if(this._zoom+J<r.minzoom||this._zoom-J>=r.maxzoom)return!1;const o=r.getLayoutProperty("visibility");return!o||o.getValue()!==N.NONE})}addTile(t){t.decluttered=!1,this._tileToHandle.set(t,t.on("symbols-changed",()=>{this._symbolRepository.add(t),this.restartDeclutter()})),this._symbolRepository.add(t),this.restartDeclutter()}removeTile(t){const e=this._tileToHandle.get(t);e&&(this._symbolRepository.removeTile(t),this.restartDeclutter(),e.remove(),this._tileToHandle.delete(t))}update(t,e){return this._zoom=t,this._viewState={scale:e.scale,rotation:e.rotation,center:[e.center[0],e.center[1]],size:[e.size[0],e.size[1]]},this._continueDeclutter(),this._completed}restartDeclutter(){this._completed=!1,this._symbolDeclutterer.restart(),this._notifyUnstable()}clear(){this._completed=!1,this._symbolRepository=null,this._symbolDeclutterer.restart(),this._tileToHandle.forEach(t=>t.remove()),this._tileToHandle.clear()}get stale(){return this._zoom!==this._declutterZoom||this._viewState.size[0]!==this._declutterViewState.size[0]||this._viewState.size[1]!==this._declutterViewState.size[1]||this._viewState.scale!==this._declutterViewState.scale||this._viewState.rotation!==this._declutterViewState.rotation}deleteStyleLayers(t){this._symbolRepository.deleteStyleLayers(t)}_continueDeclutter(){this._completed&&!this.stale||(this._symbolDeclutterer.running||(this._declutterZoom=this._zoom,this._declutterViewState.center[0]=this._viewState.center[0],this._declutterViewState.center[1]=this._viewState.center[1],this._declutterViewState.rotation=this._viewState.rotation,this._declutterViewState.scale=this._viewState.scale,this._declutterViewState.size[0]=this._viewState.size[0],this._declutterViewState.size[1]=this._viewState.size[1],this._symbolDeclutterer.restart()),this._symbolDeclutterer.setScreenSize(this._viewState.size[0],this._viewState.size[1]),this._completed=this._symbolDeclutterer.continue(wt),this._completed&&this._scheduleNotifyStable())}_scheduleNotifyStable(){v(this._stableNotificationHandle)&&clearTimeout(this._stableNotificationHandle),this._stableNotificationHandle=setTimeout(()=>{this._stableNotificationHandle=null,this.emit("fade-complete")},(1+Nt)*Rt)}_notifyUnstable(){v(this._stableNotificationHandle)&&(clearTimeout(this._stableNotificationHandle),this._stableNotificationHandle=null),this.emit("fade-start")}}class Vt extends Dt{_createTransforms(){return{dvs:z(),tileMat3:z()}}}const x=1e-6;function X(s,t){if(s){const e=s.getLayoutProperty("visibility");if(!e||e.getValue()!==N.NONE&&(s.minzoom===void 0||s.minzoom<t+x)&&(s.maxzoom===void 0||s.maxzoom>=t-x))return!0}return!1}class qt extends It{constructor(t){super(t),this._backgroundTiles=[],this._pointToCallbacks=new Map}destroy(){this.removeAllChildren(),this._spriteMosaic&&(this._spriteMosaic.dispose(),this._spriteMosaic=null),this._glyphMosaic&&(this._glyphMosaic.dispose(),this._glyphMosaic=null),v(this._symbolFader)&&(this._symbolFader.clear(),this._symbolFader=null),this._styleRepository=null,this._backgroundTiles=[],this._pointToCallbacks.clear()}setStyleResources(t,e,i){if(this._spriteMosaic=t,this._glyphMosaic=e,this._styleRepository=i,U(this._symbolFader)){const r=new Qt(this._styleRepository,this.children);r.on("fade-start",()=>{this.emit("fade-start"),this.requestRender()}),r.on("fade-complete",()=>{this.emit("fade-complete"),this.requestRender()}),this._symbolFader=r}lt(this._symbolFader).styleRepository=i}setSpriteMosaic(t){this._spriteMosaic.dispose(),this._spriteMosaic=t}deleteStyleLayers(t){v(this._symbolFader)&&this._symbolFader.deleteStyleLayers(t)}async hitTest(t){const e=nt();return this._pointToCallbacks.set(t,e),this.requestRender(),e.promise}enterTileInvalidation(){for(const t of this.children)t.invalidating=!0}createRenderParams(t){return{...super.createRenderParams(t),renderPass:null,styleLayer:null,styleLayerUID:-1,glyphMosaic:this._glyphMosaic,spriteMosaic:this._spriteMosaic,hasClipping:!!this._clippingInfos}}doRender(t){!this.visible||t.drawPhase!==w.MAP&&t.drawPhase!==w.DEBUG||this._spriteMosaic===void 0||super.doRender(t)}addChild(t){return super.addChild(t),v(this._symbolFader)?this._symbolFader.addTile(t):t.decluttered=!0,this.requestRender(),t}removeChild(t){return v(this._symbolFader)&&this._symbolFader.removeTile(t),this.requestRender(),super.removeChild(t)}renderChildren(t){const{drawPhase:e}=t;if(e!==w.DEBUG){if(this._doRender(t),this._pointToCallbacks.size>0){t.drawPhase=w.HITTEST;const i=t.painter.effects.hittestVTL;i.bind(t),this._doRender(t),i.draw(t,this._pointToCallbacks),i.unbind(t),t.drawPhase=e}}else super.renderChildren(t)}removeAllChildren(){for(let t=0;t<this.children.length;t++){const e=this.children[t];v(this._symbolFader)&&this._symbolFader.removeTile(e),e.dispose()}super.removeAllChildren()}getStencilTarget(){return this.children.filter(t=>t.neededForCoverage&&t.hasData())}restartDeclutter(){v(this._symbolFader)&&this._symbolFader.restartDeclutter()}_doRender(t){const{context:e}=t,i=this._styleRepository;if(!i)return;const r=i.layers;let o=!0;t.drawPhase===w.HITTEST&&(o=!1),i.backgroundBucketIds.length>0&&(t.renderPass="background",this._renderBackgroundLayers(t,i.backgroundBucketIds)),super.renderChildren(t),t.drawPhase===w.MAP&&this._fade(t.displayLevel,t.state);const l=this.children.filter(a=>a.visible&&a.hasData());if(!l||l.length===0)return e.bindVAO(),e.setStencilTestEnabled(!0),void e.setBlendingEnabled(!0);for(const a of l)a.triangleCount=0;e.setStencilWriteMask(0),e.setColorMask(!0,!0,!0,!0),e.setStencilOp(E.KEEP,E.KEEP,E.REPLACE),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setDepthTestEnabled(!0),e.setDepthWriteEnabled(!0),e.setDepthFunction(G.LEQUAL),e.setClearDepth(1),e.clear(e.gl.DEPTH_BUFFER_BIT),t.renderPass="opaque";for(let a=r.length-1;a>=0;a--)this._renderStyleLayer(r[a],t,l);e.setDepthWriteEnabled(!1),e.setBlendingEnabled(o),e.setBlendFunctionSeparate(I.ONE,I.ONE_MINUS_SRC_ALPHA,I.ONE,I.ONE_MINUS_SRC_ALPHA),t.renderPass="translucent";for(let a=0;a<r.length;a++)this._renderStyleLayer(r[a],t,l);e.bindVAO(),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!0)}_fade(t,e){v(this._symbolFader)&&(this._symbolFader.update(t,e)||this.requestRender())}_renderStyleLayer(t,e,i){const{painter:r,renderPass:o}=e;if(t===void 0)return;const l=t.getLayoutProperty("visibility");if(l&&l.getValue()===N.NONE)return;let a;switch(t.type){case f.BACKGROUND:return;case f.FILL:if(o!=="opaque"&&e.renderPass!=="translucent")return;a="vtlFill";break;case f.LINE:if(o!=="translucent")return;a="vtlLine";break;case f.CIRCLE:if(o!=="translucent")return;a="vtlCircle";break;case f.SYMBOL:if(o!=="translucent")return;a="vtlSymbol"}if(i=t.type===f.SYMBOL?i.filter(p=>p.decluttered):i.filter(p=>p.neededForCoverage),a!=="vtlSymbol"){const p=e.displayLevel;if(i.length===0||t.minzoom!==void 0&&t.minzoom>=p+x||t.maxzoom!==void 0&&t.maxzoom<p-x)return}const h=t.uid;e.styleLayerUID=h,e.styleLayer=t;for(const p of i)if(p.layerData.has(h)){r.renderObjects(e,i,a);break}}_renderBackgroundLayers(t,e){const{context:i,displayLevel:r,painter:o,state:l}=t,a=this._styleRepository;let h=!1;for(const T of e)if(a.getLayerById(T).type===f.BACKGROUND&&X(a.getLayerById(T),r)){h=!0;break}if(!h)return;const p=this._tileInfoView.getTileCoverage(t.state,0,"smallest"),{spans:d,lodInfo:n}=p,{level:c}=n,m=B(),g=[];if(this._renderPasses){const T=this._renderPasses[0];v(this._clippingInfos)&&(T.brushes[0].prepareState(t),T.brushes[0].drawMany(t,this._clippingInfos))}const C=this._backgroundTiles;let _,L=0;for(const{row:T,colFrom:b,colTo:$}of d)for(let S=b;S<=$;S++){if(L<C.length)_=C[L],_.key.set(c,T,n.normalizeCol(S),n.getWorldForColumn(S)),this._tileInfoView.getTileBounds(m,_.key,!1),_.x=m[0],_.y=m[3],_.resolution=this._tileInfoView.getTileResolution(c);else{const A=new O(c,T,n.normalizeCol(S),n.getWorldForColumn(S)),M=this._tileInfoView.getTileBounds(B(),A),D=this._tileInfoView.getTileResolution(c);_=new Vt(A,D,M[0],M[3],512,512,4096,4096),C.push(_)}_.setTransform(l),g.push(_),L++}i.setStencilWriteMask(0),i.setColorMask(!0,!0,!0,!0),i.setStencilOp(E.KEEP,E.KEEP,E.REPLACE),i.setStencilFunction(G.EQUAL,0,255);let H=!0;t.drawPhase===w.HITTEST&&(H=!1),i.setStencilTestEnabled(H);for(const T of e){const b=a.getLayerById(T);b.type===f.BACKGROUND&&X(b,r)&&(t.styleLayerUID=b.uid,t.styleLayer=b,o.renderObjects(t,g,"vtlBackground"))}tt.pool.release(p)}}const Gt={geometry:[new Ot("a_PositionAndFlags",3,et.SHORT,0,6)]},Q=new Map;Q.set("a_PositionAndFlags",0);const Yt={vsPath:"debug/overlay",fsPath:"debug/overlay",attributes:Q};class F extends Et{constructor(t){super(),this._conf=t}static makeFlags(t,e){return t|e<<2}_createTransforms(){return{dvs:z()}}doRender(t){this._updateTransforms(t),this._ensureResources(t);const{context:e}=t;e.useProgram(this._program),this._program.setUniformMatrix3fv("u_dvsMat3",this.transforms.dvs),this._program.setUniform4fv("u_colors",this._conf.getColors(t)),this._program.setUniform1fv("u_opacities",this._conf.getOpacities(t));const{vertexData:i,indexData:r}=this._conf.getMesh(t);this._vertexBuffer.setData(i),this._indexBuffer.setData(r),e.bindVAO(this._vertexArray),e.setBlendingEnabled(!0),e.setBlendFunction(I.ONE,I.ONE_MINUS_SRC_ALPHA),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!1),e.setColorMask(!0,!0,!0,!0),e.drawElements(Lt.TRIANGLES,r.length,et.UNSIGNED_INT,0)}onDetach(){this._vertexArray&&(this._vertexArray.dispose(),this._vertexArray=null)}_updateTransforms(t){Ht(this.transforms.dvs),At(this.transforms.dvs,this.transforms.dvs,[-1,1]),Mt(this.transforms.dvs,this.transforms.dvs,[2/t.state.size[0],-2/t.state.size[1],1])}_ensureResources(t){const{context:e}=t;this._program||(this._program=t.painter.materialManager.getProgram(Yt)),this._vertexBuffer||(this._vertexBuffer=W.createVertex(e,Y.STREAM_DRAW)),this._indexBuffer||(this._indexBuffer=W.createIndex(e,Y.STREAM_DRAW)),this._vertexArray||(this._vertexArray=new kt(e,Q,Gt,{geometry:this._vertexBuffer},this._indexBuffer))}}let R=class extends Pt(xt){constructor(){super(...arguments),this._styleChanges=[],this._fetchQueue=null,this._parseQueue=null,this._isTileHandlerReady=!1,this.fading=!1,this._getCollidersMesh=s=>{const{pixelRatio:t}=s.state;let e=0;const i=[],r=[];for(const o of this._vectorTileContainer.children)if(o.symbols)for(const[l,a]of o.symbols)for(const h of a)for(const p of h.colliders){const d=(p.xScreen+p.dxScreen)*t,n=(p.yScreen+p.dyScreen)*t,c=p.width*t,m=p.height*t,g=h.unique.parts[p.partIndex].targetOpacity>.5;if(!g&&this.layer.showCollisionBoxes!=="all")continue;const C=2,_=0,L=3,H=0,T=3,b=1,$=3,S=0,A=g?C:_,M=g?L:H,D=F.makeFlags(A,M);i.push(d,n,D,d+c,n,D,d,n+m,D,d+c,n+m,D),r.push(e+0,e+1,e+2,e+1,e+3,e+2),e+=4;const it=g?T:b,rt=g?$:S,u=F.makeFlags(it,rt);i.push(d,n,u,d+c,n,u,d,n+1,u,d+c,n+1,u),r.push(e+0,e+1,e+2,e+1,e+3,e+2),e+=4,i.push(d,n+m-1,u,d+c,n+m-1,u,d,n+m,u,d+c,n+m,u),r.push(e+0,e+1,e+2,e+1,e+3,e+2),e+=4,i.push(d,n,u,d+1,n,u,d,n+m,u,d+1,n+m,u),r.push(e+0,e+1,e+2,e+1,e+3,e+2),e+=4,i.push(d+c-1,n,u,d+c,n,u,d+c-1,n+m,u,d+c,n+m,u),r.push(e+0,e+1,e+2,e+1,e+3,e+2),e+=4}return{vertexData:new Int16Array(i),indexData:new Uint32Array(r)}},this._getCollidersColors=()=>[1,.5,0,1,1,0,0,1,0,1,.5,1,0,.5,0,1],this._getCollidersOpacities=()=>[.05,.01,.15,.2]}async hitTest(s,t){if(!this._tileHandlerPromise)return null;await this._tileHandlerPromise;const e=await this._vectorTileContainer.hitTest(t);if(!e||e.length===0)return null;const i=e[0]-1,r=this._styleRepository,o=r.getStyleLayerByUID(i);if(!o)return null;const l=r.getStyleLayerIndex(o.id);return[{type:"graphic",mapPoint:s,layer:this.layer,graphic:new ot({attributes:{layerId:l,layerName:o.id,layerUID:i},layer:this.layer,sourceLayer:this.layer})}]}update(s){if(this._tileHandlerPromise&&this._isTileHandlerReady)return s.pixelRatio!==this._tileHandler.devicePixelRatio?(this._start(),void(this._tileHandler.devicePixelRatio=s.pixelRatio)):void(this._styleChanges.length>0?this._tileHandlerPromise=this._applyStyleChanges():(this._fetchQueue.pause(),this._parseQueue.pause(),this._fetchQueue.state=s.state,this._parseQueue.state=s.state,this._tileManager.update(s)||this.requestUpdate(),this._parseQueue.resume(),this._fetchQueue.resume()))}attach(){const{style:s}=this.layer.currentStyleInfo;this._styleRepository=new j(s),this._tileInfoView=new ft(this.layer.tileInfo,this.layer.fullExtent),this._vectorTileContainer=new qt(this._tileInfoView),this._tileHandler=new gt(this.layer,this._styleRepository,window.devicePixelRatio||1),this.container.addChild(this._vectorTileContainer),this._start(),this.handles.add([this._vectorTileContainer.on("fade-start",()=>{this.fading=!0,this.notifyChange("updating"),this.requestUpdate()}),this._vectorTileContainer.on("fade-complete",()=>{var t;(t=this._collisionOverlay)==null||t.requestRender(),this.fading=!1,this.notifyChange("updating"),this.requestUpdate()}),ht(()=>this.layer.showCollisionBoxes,t=>{t!=="none"?this._collisionOverlay||(this._collisionOverlay=new F({getMesh:this._getCollidersMesh,getColors:this._getCollidersColors,getOpacities:this._getCollidersOpacities}),this.container.addChild(this._collisionOverlay)):(this.container.removeChild(this._collisionOverlay),this._collisionOverlay=null),this.container.requestRender()},pt),this.layer.on("paint-change",t=>{if(t.isDataDriven)this._styleChanges.push({type:y.PAINTER_CHANGED,data:t}),this.notifyChange("updating"),this.requestUpdate();else{const e=this._styleRepository,i=e.getLayerById(t.layer);if(!i)return;const r=i.type===f.SYMBOL;e.setPaintProperties(t.layer,t.paint),r&&this._vectorTileContainer.restartDeclutter(),this._vectorTileContainer.requestRender()}}),this.layer.on("layout-change",t=>{const e=this._styleRepository,i=e.getLayerById(t.layer);if(!i)return;const r=ct(i.layout,t.layout);if(!U(r)){if(dt(r,"visibility")&&jt(r)===1)return e.setLayoutProperties(t.layer,t.layout),i.type===f.SYMBOL&&this._vectorTileContainer.restartDeclutter(),void this._vectorTileContainer.requestRender();this._styleChanges.push({type:y.LAYOUT_CHANGED,data:t}),this.notifyChange("updating"),this.requestUpdate()}}),this.layer.on("style-layer-visibility-change",t=>{const e=this._styleRepository,i=e.getLayerById(t.layer);i&&(e.setStyleLayerVisibility(t.layer,t.visibility),i.type===f.SYMBOL&&this._vectorTileContainer.restartDeclutter(),this._vectorTileContainer.requestRender())}),this.layer.on("style-layer-change",t=>{this._styleChanges.push({type:y.LAYER_CHANGED,data:t}),this.notifyChange("updating"),this.requestUpdate()}),this.layer.on("delete-style-layer",t=>{this._styleChanges.push({type:y.LAYER_REMOVED,data:t}),this.notifyChange("updating"),this.requestUpdate()}),this.layer.on("load-style",()=>this._loadStyle()),this.layer.on("spriteSource-change",t=>{this._newSpriteSource=t.spriteSource,this._styleChanges.push({type:y.SPRITES_CHANGED,data:null});const e=this._styleRepository.layers;for(const i of e)switch(i.type){case f.SYMBOL:i.getLayoutProperty("icon-image")&&this._styleChanges.push({type:y.LAYOUT_CHANGED,data:{layer:i.id,layout:i.layout}});break;case f.LINE:i.getPaintProperty("line-pattern")&&this._styleChanges.push({type:y.PAINTER_CHANGED,data:{layer:i.id,paint:i.paint,isDataDriven:i.isPainterDataDriven()}});break;case f.FILL:i.getLayoutProperty("fill-pattern")&&this._styleChanges.push({type:y.PAINTER_CHANGED,data:{layer:i.id,paint:i.paint,isDataDriven:i.isPainterDataDriven()}})}this.notifyChange("updating"),this.requestUpdate()})],this.declaredClass)}detach(){var s,t;this._stop(),this.container.removeAllChildren(),(s=this._vectorTileContainer)==null||s.destroy(),this._vectorTileContainer=null,(t=this._tileHandler)==null||t.destroy(),this._tileHandler=null,this.handles.remove(this.declaredClass)}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this._collisionOverlay&&this._vectorTileContainer.restartDeclutter(),this.requestUpdate()}supportsSpatialReference(s){var t;return mt((t=this.layer.tileInfo)==null?void 0:t.spatialReference,s)}canResume(){let s=super.canResume();const{currentStyleInfo:t}=this.layer;if(s&&(t!=null&&t.layerDefinition)){const e=this.view.scale,{minScale:i,maxScale:r}=t.layerDefinition;t&&t.layerDefinition&&(i&&i<e&&(s=!1),r&&r>e&&(s=!1))}return s}isUpdating(){const s=this._vectorTileContainer.children;return!this._isTileHandlerReady||!this._fetchQueue||!this._parseQueue||this._fetchQueue.updating||this._parseQueue.updating||s.length>0&&s.some(t=>t.invalidating)||this.fading}acquireTile(s){const t=this._createVectorTile(s);return this._tileHandlerPromise.then(()=>{this._fetchQueue.push(t.key).then(e=>this._parseQueue.push({key:t.key,data:e})).then(e=>{t.once("attach",()=>this.requestUpdate()),t.setData(e),this.requestUpdate(),this.notifyChange("updating")}).catch(e=>{this.notifyChange("updating"),q(e)||V.getLogger(this.declaredClass).error(e)})}),t}releaseTile(s){const t=s.key.id;this._fetchQueue.abort(t),this._parseQueue.abort(t),this.requestUpdate()}_start(){if(this._stop(),this._tileManager=new Ft({acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView},this._vectorTileContainer),!this.layer.currentStyleInfo)return;const s=new AbortController,t=this._tileHandler.start({signal:s.signal}).then(()=>{this._fetchQueue=new K({tileInfoView:this._tileInfoView,process:(e,i)=>this._getTileData(e,i),concurrency:15}),this._parseQueue=new K({tileInfoView:this._tileInfoView,process:(e,i)=>this._parseTileData(e,i),concurrency:8}),this.requestUpdate(),this._isTileHandlerReady=!0});this._tileHandler.spriteMosaic.then(e=>{this._vectorTileContainer.setStyleResources(e,this._tileHandler.glyphMosaic,this._styleRepository),this.requestUpdate()}),this._tileHandlerAbortController=s,this._tileHandlerPromise=t}_stop(){if(!this._tileHandlerAbortController||!this._vectorTileContainer)return;const s=this._tileHandlerAbortController;s&&s.abort(),this._tileHandlerPromise=null,this._isTileHandlerReady=!1,this._fetchQueue&&(this._fetchQueue.destroy(),this._fetchQueue=null),this._parseQueue&&(this._parseQueue.destroy(),this._parseQueue=null),this._tileManager&&(this._tileManager.destroy(),this._tileManager=null),this._vectorTileContainer.removeAllChildren()}async _getTileData(s,t){const e=await this._tileHandler.fetchTileData(s,t);return this.notifyChange("updating"),e}async _parseTileData(s,t){return this._tileHandler.parseTileData(s,t)}async _applyStyleChanges(){this._isTileHandlerReady=!1,this._fetchQueue.pause(),this._parseQueue.pause(),this._fetchQueue.clear(),this._parseQueue.clear(),this._tileManager.clearCache();const s=this._styleChanges;try{await this._tileHandler.updateStyle(s)}catch(l){V.getLogger(this.declaredClass).error("error applying vector-tiles style update",l.message),this._fetchQueue.resume(),this._parseQueue.resume(),this._isTileHandlerReady=!0}const t=this._styleRepository,e=[];s.forEach(l=>{if(l.type!==y.LAYER_REMOVED)return;const a=l.data,h=t.getLayerById(a.layer);h&&e.push(h.uid)});const i=[];let r;s.forEach(l=>{const a=l.type,h=l.data;switch(a){case y.PAINTER_CHANGED:t.setPaintProperties(h.layer,h.paint),r=h.layer;break;case y.LAYOUT_CHANGED:t.setLayoutProperties(h.layer,h.layout),r=h.layer;break;case y.LAYER_REMOVED:return void t.deleteStyleLayer(h.layer);case y.LAYER_CHANGED:t.setStyleLayer(h.layer,h.index),r=h.layer.id;break;case y.SPRITES_CHANGED:this._vectorTileContainer.setSpriteMosaic(this._tileHandler.setSpriteSource(this._newSpriteSource)),this._newSpriteSource=null,r=null}const p=t.getLayerById(r);p&&i.push(p.uid)});const o=this._vectorTileContainer.children;if(e.length>0){this._vectorTileContainer.deleteStyleLayers(e);for(const l of o)l.deleteLayerData(e)}if(this._fetchQueue.resume(),this._parseQueue.resume(),i.length>0){const l=[];for(const a of o){const h=this._fetchQueue.push(a.key).then(p=>this._parseQueue.push({key:a.key,data:p,styleLayerUIDs:i})).then(p=>a.setData(p));l.push(h)}await Promise.all(l)}this._styleChanges=[],this._isTileHandlerReady=!0,this.notifyChange("updating"),this.requestUpdate()}async _loadStyle(){const{style:s}=this.layer.currentStyleInfo,t=at(s);this._isTileHandlerReady=!1,this._fetchQueue.pause(),this._parseQueue.pause(),this._fetchQueue.clear(),this._parseQueue.clear(),this.notifyChange("updating"),this._styleRepository=new j(t),this._vectorTileContainer.destroy(),this._tileManager.clear(),this._tileHandlerAbortController.abort(),this._tileHandlerAbortController=new AbortController;const{signal:e}=this._tileHandlerAbortController;try{this._tileHandlerPromise=this._tileHandler.setStyle(this._styleRepository,t),await this._tileHandlerPromise}catch(r){if(!q(r))throw r}if(e.aborted)return this._fetchQueue.resume(),this._parseQueue.resume(),this._isTileHandlerReady=!0,this.notifyChange("updating"),void this.requestUpdate();const i=await this._tileHandler.spriteMosaic;this._vectorTileContainer.setStyleResources(i,this._tileHandler.glyphMosaic,this._styleRepository),this._fetchQueue.resume(),this._parseQueue.resume(),this._isTileHandlerReady=!0,this.notifyChange("updating"),this.requestUpdate()}_createVectorTile(s){const t=this._tileInfoView.getTileBounds(B(),s),e=this._tileInfoView.getTileResolution(s.level);return new bt(s,e,t[0],t[3],512,512,this._styleRepository)}};function jt(s){if(U(s))return 0;switch(s.type){case"partial":return Object.keys(s.diff).length;case"complete":return Math.max(Object.keys(s.oldValue).length,Object.keys(s.newValue).length);case"collection":return Object.keys(s.added).length+Object.keys(s.changed).length+Object.keys(s.removed).length}}P([k()],R.prototype,"_fetchQueue",void 0),P([k()],R.prototype,"_parseQueue",void 0),P([k()],R.prototype,"_isTileHandlerReady",void 0),P([k()],R.prototype,"fading",void 0),R=P([st("esri.views.2d.layers.VectorTileLayerView2D")],R);const wa=R;export{wa as default};
