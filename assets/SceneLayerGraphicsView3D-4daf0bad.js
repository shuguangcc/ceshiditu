import{_ as z}from"./preload-helper-41c905a7.js";import{e as p,y as d,n as W}from"./cast-7928d7aa.js";import{g as M}from"./Graphic-b46e2684.js";import{s as b,t as L,r as m,e as Z,M as K}from"./typedArrayUtil-a8b5b3e9.js";import{s as N}from"./Error-653283ae.js";import{h as V,l as Y}from"./reactiveUtils-f41a4e00.js";import"./ensureType-cf29afa9.js";import{u as J}from"./vec3-a020a6f6.js";import{r as X,n as ee}from"./vec3f64-2f9cef06.js";import{x as $,j as te}from"./projection-d7b57a6c.js";import{F as re}from"./Extent-69509002.js";import{o as ie}from"./zscale-1e1fc911.js";import{ac as G,j as oe,an as se,a8 as ae}from"./index-455b69b8.js";import{v as j,A as ne}from"./dehydratedFeatures-4eeb381a.js";import{s as pe,I as de,t as me}from"./I3SOverrides-02bb416c.js";import{y as le}from"./FeatureReductionLayer-4077b2ae.js";import{x as P}from"./Query-ff8c2cfb.js";import{h as he}from"./LercDecoder-73115fd2.js";import{n as ue}from"./LayerView3D-9d740636.js";import{F as ce,p as ge}from"./FeatureLikeLayerView3D-e095b99c.js";import{c as _e,i as ye,u as fe,b as be,E as ve}from"./SceneLayerView-f66e8829.js";import{R as xe,S as Ee,u as Ie,V as we,g as Se}from"./I3SUtil-3ffd3baa.js";import{t as Ce}from"./DefinitionExpressionSceneLayerView-5a30c6e1.js";import{c as De}from"./PopupSceneLayerView-394d8bbf.js";import{i as Ae}from"./basicInterfaces-19ed850e.js";import{I as Oe}from"./Scheduler-8433672d.js";import"./string-cdf077e6.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-6684e352.js";import"./geometry-5a216427.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./PopupTemplate-6eb885db.js";import"./Clonable-ba795b08.js";import"./Collection-78126e82.js";import"./Evented-515b9d9c.js";import"./SimpleObservable-7dcdef1d.js";import"./fieldUtils-31bfecd2.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./enumeration-3c281341.js";import"./number-347a3a44.js";import"./locale-30120714.js";import"./Identifiable-aa6d459d.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./mathUtils-2519596a.js";import"./vec4-790471c0.js";import"./common-c186b691.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./aaBoundingRect-4a760199.js";import"./request-d3e98716.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./collectionUtils-3831b7c4.js";import"./Portal-8b65c9c4.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./Ellipsoid-89682c5e.js";import"./jsonUtils-03c4af61.js";import"./unitUtils-47abac71.js";import"./mat4-44a0988f.js";import"./assets-0b172f07.js";import"./Basemap-a8f7f439.js";import"./deprecate-b9088bd3.js";import"./loadAll-7fd968fe.js";import"./asyncUtils-62e8a185.js";import"./PortalItem-aa42c739.js";import"./messages-be07754e.js";import"./writeUtils-067c4f82.js";import"./layerUtils-034678f6.js";import"./compilerUtils-034cacb8.js";import"./CollectionFlattener-3dd1f479.js";import"./TablesMixin-e7a6aab1.js";import"./Layer-f0696768.js";import"./Cyclical-b66238c6.js";import"./workers-898a7c4c.js";import"./Connection-a681777e.js";import"./Queue-3a0c055d.js";import"./intl-f1e98361.js";import"./TileInfo-34f80a8e.js";import"./widget-f7489a3f.js";import"./uuid-73213768.js";import"./dom-5b7af1bf.js";import"./HandleOwner-e1406413.js";import"./byteSizeEstimations-f0cab514.js";import"./executeQueryJSON-bcd96e1a.js";import"./normalizeUtils-ee4bf39f.js";import"./query-922e6fbf.js";import"./pbfQueryUtils-72f9b45b.js";import"./pbf-e1a6c35b.js";import"./OptimizedFeature-3de538c1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-d9d8ef40.js";import"./FeatureSet-0573546e.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./RelationshipQuery-db5fcd0c.js";import"./LegendOptions-e65e7a9c.js";import"./utils-725f8b4e.js";import"./BlendLayer-d8293c8d.js";import"./parser-2b40deea.js";import"./mat4f32-77b3d8ac.js";import"./ItemCache-ee28c7ba.js";import"./MemCache-4b976a8b.js";import"./cimSymbolUtils-2e4dde89.js";import"./utils-c81a5c52.js";import"./jsonUtils-c56f8821.js";import"./UniqueValueRenderer-103ec66d.js";import"./diffUtils-1ac65748.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./lengthUtils-d2d33f94.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./DictionaryLoader-2cf5144e.js";import"./LRUCache-14115d91.js";import"./heatmapUtils-84e8c43b.js";import"./vec4f64-e407da96.js";import"./featureConversionUtils-01cdde8a.js";import"./TopFeaturesQuery-785f5453.js";import"./TimeExtent-744afd75.js";import"./FeatureLayer-a9f3e6ec.js";import"./MultiOriginJSONSupport-27362d57.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./FeatureLayerBase-aebdf2da.js";import"./HeightModelInfo-22ad72d7.js";import"./arcgisLayerUrl-0b2b7691.js";import"./OperationalLayer-24e6fa34.js";import"./ElevationInfo-ce9cacc2.js";import"./editsZScale-2015e7db.js";import"./APIKeyMixin-34d76a46.js";import"./ArcGISService-ea748edf.js";import"./CustomParametersMixin-807d2055.js";import"./EditBusLayer-40671d1a.js";import"./OrderedLayer-e7edf19c.js";import"./PortalLayer-f1a64f99.js";import"./RefreshableLayer-1c078c47.js";import"./ScaleRangeLayer-271178b7.js";import"./TemporalLayer-39c07299.js";import"./TimeInfo-c89d0ef4.js";import"./FeatureTemplate-746d033e.js";import"./FeatureType-c83c5f49.js";import"./fieldProperties-7547b373.js";import"./FieldsIndex-aa6dd3fa.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./versionUtils-92993d41.js";import"./styleUtils-da81b13f.js";import"./popupUtils-07fe66a7.js";import"./colorUtils-82440b70.js";import"./mat2d-d0b91e3e.js";import"./GraphicsLayer-10573c27.js";import"./ViewingMode-5d7d590b.js";import"./enums-0fc02184.js";import"./vec2-2cef68de.js";import"./vec2f64-30dc1443.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./TileStrategy-4189758f.js";import"./TileStore-787dbea4.js";import"./TileKey-0750ad58.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./capabilities-3636c6a4.js";import"./context-util-1e3c8cfc.js";import"./sphere-4f5e644f.js";import"./mat3f64-c6305894.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./lineSegment-e6f72ff2.js";import"./plane-45609588.js";import"./scaleUtils-b32a50d8.js";import"./ElevationSamplerData-7decf898.js";import"./PhysicallyBasedRendering.glsl-a986c926.js";import"./View.glsl-8b12b8c2.js";import"./ShaderBuilder-93e8045e.js";import"./FloatPassUniform-d2dfc562.js";import"./Float4PassUniform-3a47b7b3.js";import"./RgbaFloatEncoding.glsl-6036ca34.js";import"./Texture2DPassUniform-6e8ae673.js";import"./vec3f32-c9aa289f.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-22924c6f.js";import"./PiUtils.glsl-0c0898f0.js";import"./ReadLinearDepth.glsl-7ff30f7d.js";import"./WaterSurface.glsl-fc8a5726.js";import"./ForwardLinearDepth.glsl-36f9eb3b.js";import"./Matrix3PassUniform-da8eddae.js";import"./Slice.glsl-a612de15.js";import"./Transform.glsl-f15542a7.js";import"./OutputHighlight.glsl-7364b03b.js";import"./MultipassTerrainTest.glsl-e79d40de.js";import"./NormalUtils.glsl-a59958d7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-cd195b0e.js";import"./EvaluateSceneLighting.glsl-3bbc6edf.js";import"./VisualVariablePassParameters-5807c7dc.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./FramebufferObject-50e1b68f.js";import"./Texture-e79b14e7.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-c6f142fc.js";import"./ScreenSpacePass-00f8c8a4.js";import"./SSAO.glsl-6f3b4065.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-80cf9a21.js";import"./VerticalOffset.glsl-86460edb.js";import"./objectResourceUtils-ef6e3cdf.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-646ba1de.js";import"./vec33-ce3aa99b.js";import"./DefaultMaterial_COLOR_GAMMA-9831d979.js";import"./types-e1c0a5bf.js";import"./Version-9baeb7ac.js";import"./quat-5b263584.js";import"./Texture-bbae5d9d.js";import"./TextureOnly.glsl-18701a3b.js";import"./InterleavedLayout-5e9cf734.js";import"./MixExternalColor.glsl-25f0049c.js";import"./symbolColorUtils-604c5345.js";import"./ObjectAndLayerIdColor.glsl-73c19386.js";import"./OutputDepth.glsl-179f1d8f.js";import"./VisualVariables.glsl-b8290512.js";import"./DiscardOrAdjustAlphaBlend.glsl-5f837994.js";import"./Normals.glsl-90e28525.js";import"./DefaultMaterial.glsl-b4f4cbc5.js";import"./VertexColor.glsl-db21b96c.js";import"./DefaultTechniqueConfiguration-e8962072.js";import"./RealisticTree.glsl-2b30ed32.js";import"./edgeProcessing-3ca548e1.js";import"./deduplicate-b0bc48cc.js";import"./projection-aa2a8986.js";import"./Octree-1a841545.js";import"./HUDMaterial.glsl-4bf3c7df.js";import"./sdfPrimitives-a24e9cb2.js";import"./floatRGBA-fa8308d2.js";import"./labelFormatUtils-4d730eaa.js";import"./LineCallout.glsl-a0056465.js";import"./earcut-58237617.js";import"./QueryEngineResult-665bf7fb.js";import"./quantizationUtils-33aba427.js";import"./WhereClause-2b5b05b2.js";import"./utils-30a9a7e0.js";import"./generateRendererUtils-a996108f.js";import"./utils-1f4fcfec.js";import"./json-48e3ea08.js";import"./MeshComponent-f50df6af.js";import"./MarkerSizing.glsl-c6fa192a.js";import"./RibbonLine.glsl-2a3b4d4e.js";import"./LineStipple.glsl-de782d6a.js";import"./callExpressionWithFeature-a7532499.js";import"./LineMarker.glsl-8f444621.js";import"./NativeLine.glsl-cdbbf172.js";import"./Path.glsl-60b36878.js";import"./ColorMaterial.glsl-8310ffb3.js";import"./Pattern.glsl-d3388745.js";import"./EffectView-d3bf37ed.js";import"./config-1337d16e.js";import"./workerHelper-c6d4a8cb.js";import"./Subtype-5b01b21f.js";import"./datetime-4f774298.js";import"./elevationInfoUtils-427916a5.js";import"./ExportImageParameters-f328a234.js";import"./sublayerUtils-ba7f61bc.js";import"./webStyleSymbolUtils-55ed91cd.js";import"./enums-4b2a86a0.js";import"./I3SBinaryReader-3d2c2faa.js";import"./I3SNode-42b7a44e.js";import"./RenderTexture-efcfcb1e.js";import"./FeatureLayerView3D-23021139.js";import"./FeatureLayerViewBase3D-f9a2841f.js";import"./EventedSet-7223bfeb.js";import"./FeatureLayerView-dbb9730b.js";import"./popupUtils-e8f3d062.js";import"./LayerView-b83ced89.js";import"./RefreshableLayerView-1faf24ee.js";import"./queryForSymbologySnapping-f3902574.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-2cd67a8a.js";import"./optimizedFeatureQueryEngineAdapter-4b9881eb.js";import"./centroid-13995b22.js";import"./PooledRBush-26ba8fba.js";import"./QueryEngine-a5c074c3.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-b43dc94c.js";import"./FeatureStore-b1ba4c29.js";import"./Heatmap.glsl-07ebb671.js";import"./HeatmapDensity.glsl-028179cd.js";import"./heatmapTextureUtils-d1d96768.js";import"./projectExtentUtils-9adea3ba.js";class H extends he{constructor(t){super("SceneLayerWorker","dracoDecompressPointCloudData",{dracoDecompressPointCloudData:i=>[i.geometryBuffer]},t,{hasInitialize:!0})}}const q=be();let n=class extends Ce(De(ue(ve))){constructor(){super(...arguments),this.type="scene-layer-graphics-3d",this._nodesAddedToStage=new Map,this._queryEngine=null,this._memCache=null,this._interactiveEditingSessions=new Map,this.loadedGraphics=new pe,this.holeFilling="always",this.progressiveLoadFactor=1,this.supportsHeightUnitConversion=!0,this._coordinatesOutsideExtentErrors=0,this._maxCoordinatesOutsideExtentErrors=20}initialize(){var t,i;const e=this.layer;this.addResolvingPromise(e.indexInfo),this._i3sOverrides=new de({view:this.view,layer:this.layer,memoryController:(t=this.view.resourceController)==null?void 0:t.memoryController}),xe(e,this.view.spatialReference,this.view.viewingMode),this._fieldsHelper=new _e({layerView:this}),this.updatingHandles.add(()=>e.rangeInfos,r=>this._rangeInfosChanged(r),V),this.updatingHandles.add(()=>e.renderer,(r,o)=>this._rendererChange(r,o)),this.updatingHandles.add(()=>[this.parsedDefinitionExpression,this._excludeObjectIdsSorted],()=>this._filterChange()),this.handles.add(Y(()=>G.I3S_TREE_SHOW_TILES,r=>{if(r&&!this._treeDebugger){const o=this._controller.crsIndex;z(()=>import("./I3STreeDebugger-4f3cd679.js"),["./I3STreeDebugger-4f3cd679.js","./cast-7928d7aa.js","./typedArrayUtil-a8b5b3e9.js","./string-cdf077e6.js","./Error-653283ae.js","./ensureType-cf29afa9.js","./nextTick-3ee5a785.js","./promiseUtils-6684e352.js","./geometry-5a216427.js","./Extent-69509002.js","./Ellipsoid-89682c5e.js","./Polyline-bf268e7b.js","./typeUtils-eb9416d0.js","./jsonMap-c1f958cf.js","./mat4-44a0988f.js","./vec3f64-2f9cef06.js","./common-c186b691.js","./mat4f64-1e28eae0.js","./vec3-a020a6f6.js","./projection-d7b57a6c.js","./preload-helper-41c905a7.js","./mathUtils-2519596a.js","./vec4-790471c0.js","./unitUtils-47abac71.js","./SimpleObservable-7dcdef1d.js","./assets-0b172f07.js","./request-d3e98716.js","./aaBoundingRect-4a760199.js","./zscale-1e1fc911.js","./TileTreeDebugger-5ce82b98.js","./Color-a42a8267.js","./colorUtils-639f4d25.js","./Graphic-b46e2684.js","./PopupTemplate-6eb885db.js","./Clonable-ba795b08.js","./Collection-78126e82.js","./Evented-515b9d9c.js","./fieldUtils-31bfecd2.js","./arcadeOnDemand-c6d1b9f2.js","./enumeration-3c281341.js","./number-347a3a44.js","./locale-30120714.js","./Identifiable-aa6d459d.js","./symbols-fa594797.js","./CIMSymbol-1379245a.js","./Symbol-fc4312a4.js","./screenUtils-410d12c0.js","./opacityUtils-243aae26.js","./symbolLayerUtils3D-1f8d4478.js","./aaBoundingBox-fc742a4e.js","./persistableUrlUtils-a16d0f55.js","./Symbol3DAnchorPosition2D-c0f4a14d.js","./collectionUtils-3831b7c4.js","./Portal-8b65c9c4.js","./Loadable-48bc1293.js","./Promise-dfdee8ba.js","./PortalGroup-bfe93c76.js","./PortalUser-4c8e1adc.js","./jsonUtils-03c4af61.js"],import.meta.url).then(({I3STreeDebugger:s})=>{!this._treeDebugger&&G.I3S_TREE_SHOW_TILES&&(this._treeDebugger=new s({lv:this,view:this.view,nodeSR:o}))})}else r||!this._treeDebugger||G.I3S_TREE_SHOW_TILES||(this._treeDebugger.destroy(),this._treeDebugger=null)},V)),this._set("processor",new ce({owner:this,preferredUpdatePolicy:Ae.ASYNC,scaleVisibilityEnabled:!0,filterVisibilityEnabled:!0,timeExtentEnabled:!1,frustumVisibilityEnabled:!1,elevationAlignmentEnabled:!0,elevationFeatureExpressionEnabled:!1,setUidToIdOnAdd:!1,dataExtent:e.fullExtent,updateClippingExtent:r=>this._updateClippingExtent(r)})),(i=this.processor.elevationAlignment)==null||i.events.on("invalidate-elevation",r=>this._controller.updateElevationChanged(r.extent,r.spatialReference)),this.supportsHeightUnitConversion&&(this._verticalScale=ie("point",e.spatialReference,this.view.spatialReference)),this.addResolvingPromise(this.processor.initializePromise),this._memCache=this.view.resourceController.memoryController.newCache(e.uid),this._controller=new me({layerView:this,scaleVisibilityEnabled:!1}),Ee(this.layer.geometryDefinitions)&&(this._worker=new H(r=>this.view.resourceController.schedule(r))),this.handles.add(this.layer.on("apply-edits",r=>this.updatingHandles.addPromise(r.result))),this.handles.add(this.layer.on("edits",r=>this._handleEdits(r))),this.when(()=>{const r=()=>this.processor.featureStore;this._queryEngine=new ge({context:{spatialReference:this.view.spatialReference,layer:this.layer,scheduler:this.view.resourceController.scheduler,get featureStore(){return r()},hasZ:this.hasZ,hasM:this.hasM},priority:Oe.FEATURE_QUERY_ENGINE}),this.updatingHandles.add(()=>this.maximumNumberOfFeatures,o=>this._controller.featureTarget=o,V),this.updatingHandles.add(()=>this.suspended,o=>{o&&this._removeAllNodeData()})})}destroy(){this._treeDebugger=b(this._treeDebugger),this._i3sOverrides=b(this._i3sOverrides),this._set("processor",b(this.processor)),this._controller=b(this._controller),this._queryEngine=b(this._queryEngine),this._worker=b(this._worker),this._memCache=b(this._memCache),this._nodesAddedToStage.clear(),this._fieldsHelper=b(this._fieldsHelper)}get i3slayer(){return this.layer}get updatingProgressValue(){var e;return((e=this._controller)==null?void 0:e.updatingProgress)??1}get requiredFields(){var e;return((e=this._fieldsHelper)==null?void 0:e.requiredFields)??[]}get maximumNumberOfFeatures(){var t,i;const e=(i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.displayFeatureLimit;return(e==null?void 0:e.maximumNumberOfFeatures)??0}set maximumNumberOfFeatures(e){e!=null?(this._override("maximumNumberOfFeatures",e),this._controller.fixedFeatureTarget=!0):(this._clearOverride("maximumNumberOfFeatures"),this._controller.fixedFeatureTarget=!1)}get maximumNumberOfFeaturesExceeded(){var e;return!this.suspended&&!!((e=this._controller)!=null&&e.useMaximumNumberOfFeatures)&&!this._controller.leavesReached}get _excludeObjectIdsSorted(){const e=this.layer.excludeObjectIds;return e.length?e.toArray().sort((t,i)=>t-i):null}get lodFactor(){return this.layer.semantic==="Labels"?1:this.view.qualitySettings.sceneService.point.lodFactor}get hasM(){return!1}get hasZ(){return!0}async whenGraphicAttributes(e,t){return Ie(this.layer,e,this._getObjectIdField(),t,()=>[...this._nodesAddedToStage.values()])}getHit(e){if(!this.loadedGraphics)return null;const t=oe(this.loadedGraphics.find(r=>r.uid===e),this.layer),i=this._getObjectIdField();return t&&t.attributes&&t.attributes[i]?(t.layer=this.layer,t.sourceLayer=this.layer,{type:"graphic",graphic:t,layer:t.layer}):null}whenGraphicBounds(e,t){return this.processor.whenGraphicBounds(e,t)}computeAttachmentOrigin(e,t){return this.processor.computeAttachmentOrigin(e,t)}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}isUpdating(){var e,t,i;return!!((e=this._controller)!=null&&e.updating||(t=this.processor)!=null&&t.updating||(i=this._fieldsHelper)!=null&&i.updating||this.layerFilterUpdating)}highlight(e){return this.processor.highlight(e,this.layer.objectIdField)}get updatePolicy(){return this.processor.graphicsCore.effectiveUpdatePolicy}createInteractiveEditSession(e){return ye(this._attributeEditingContext,e)}async _extractBinaryPointData(e,t){const i={geometryBuffer:e.geometryBuffer};return L(this._worker)&&(this._worker=new H(r=>this.view.resourceController.schedule(r))),this._worker.invoke(i,t).then(r=>{if(m(r))return{positionData:r.positions,featureIds:r.featureIds};throw new Error("Failed to decompress Draco point data")})}_checkExtent(e,t){e&&!re(e,t)&&(this._coordinatesOutsideExtentErrors<this._maxCoordinatesOutsideExtentErrors&&N.getLogger(this.declaredClass).error("Service Error: Coordinates outside of layer extent"),this._coordinatesOutsideExtentErrors+1===this._maxCoordinatesOutsideExtentErrors&&N.getLogger(this.declaredClass).error("Maximum number of errors reached. Further errors are ignored."),this._coordinatesOutsideExtentErrors++)}async addNode(e,t,i){if(!Q(t)&&!U(t))throw new Error;if(this._nodesAddedToStage.has(e.index))return void N.getLogger(this.declaredClass).error("I3S node "+e.id+" already added");const r=m(this.layer.fullExtent)?Fe(this.layer.fullExtent.clone(),.5):null,o=this._controller.crsVertex,s=[],a={graphics:null,featureIds:null,attributeInfo:t.attributeDataInfo,node:e};if(Q(t)?await this._addNodeBinaryPointData(e,a,t,r,s,i):U(t)&&this._addNodeLegacyPointData(e,a,t,r,s),await this._i3sOverrides.apply(a.featureIds,t.attributeDataInfo,i),e.numFeatures=a.graphics.length,this._updateNodeMemory(e),k(a),s.length>0&&(this._computeObb(e,s,o),this._controller.updateVisibility(e.index)),!this._controller.isGeometryVisible(e))return void this._cacheNodeData(a);if(m(this._verticalScale))for(const l of a.graphics)this._verticalScale(l.geometry);const h=this.view._stage.renderView._objectAndLayerIdRenderHelper;if(h)for(let l=0;l<a.featureIds.length;l++){const x=a.featureIds[l];h.setUidToObjectAndLayerId(x,a.graphics[l].uid,this.layer.id,this.layer.uid,this.layer.popupEnabled,a.node.resources.attributes,l)}this._nodesAddedToStage.set(e.index,a),this.loadedGraphics.addMany(a.graphics),this._controller.updateLoadStatus(e.index,!0),this._filterNode(a),this._treeDebugger&&this._treeDebugger.update()}_computeObb(e,t,i){const r=this._controller.crsIndex,o=r.isGeographic?this.view.renderSpatialReference:r;$(t,i,0,t,o,0,t.length/3);const s={data:t,size:3};e.serviceObb=we(s),r.isGeographic&&te(e.serviceObb.center,o,e.serviceObb.center,r)}isNodeLoaded(e){return this._nodesAddedToStage.has(e)}isNodeReloading(){return!1}updateNodeState(){}async _addNodeBinaryPointData(e,t,i,r,o,s){const a=await this._extractBinaryPointData(i,s);if(a==null)throw new Error;const h=this._getObjectIdField(),l=this._controller.crsVertex,x=this.view.spatialReference,C=this.processor.graphicsCore,{positionData:g,featureIds:w}=a,E=3,D=g.length/E,_=new Array,A=m(e.serviceObb)?e.serviceObb.center:[0,0,0],T=Math.abs(A[2])*2**-20;for(let y=0;y<D;y++){const I=y*E,u=X(g[I+0],g[I+1],g[I+2]);J(u,u,A),Math.abs(u[2])<T&&(u[2]=0),e.serviceObb||o.push(u[0],u[1],u[2]),m(r)&&this._checkExtent(r,u);const O=w[y],F={};O!=null&&(F[h]=O);const f=O??M.generateUID();$(u,l,0,v,x,0,1);const R=j(v[0],v[1],v[2],x),S=this.loadedGraphics.get(f);if(m(S))S.level<e.level&&(c.property="geometry",c.graphic=S,c.oldValue=Z(S.geometry),c.newValue=R,S.geometry=R,C.graphicUpdateHandler(c)),_.push(S);else{const B=M.generateUID();_.push({objectId:f,uid:B,geometry:R,attributes:F,visible:!0,level:e.level})}}t.graphics=_,t.featureIds=Array.from(w)}_addNodeLegacyPointData(e,t,i,r,o){const s=this._getObjectIdField(),a=this._controller.crsVertex,h=this.view.spatialReference,l=[0,0,0],x=new Array,C=new Array;for(const g of i.pointData){const w=g.featureDataPosition,E=w.length,D=g.geometries&&g.geometries[0]||Ne[E],_=g.featureIds[0];if(D.params.type!=="points")continue;m(r)&&this._checkExtent(r,w);const A={};_!=null&&(A[s]=_);const T=_??M.generateUID();let y;D.type==="Embedded"&&(y=D.params.vertexAttributes.position);for(let I=0;I<y.length;I+=E){for(let f=0;f<E;f++)l[f]=w[f]+y[I+f];const u=E===3;e.serviceObb||o.push(l[0],l[1],u?l[2]:0),$(l,a,0,v,h,0,1);const O=j(v[0],v[1],u?v[2]:void 0,h),F=this.loadedGraphics.get(T);m(F)?C.push(F):C.push({objectId:T,uid:M.generateUID(),geometry:O,attributes:A,visible:!0})}x.push(_)}t.graphics=C,t.featureIds=x}_updateNodeMemory(e){e.memory=4096+(m(e.numFeatures)?e.numFeatures*this.processor.graphicsCore.usedMemoryPerGraphic:0)}_cacheNodeData(e){const t=e.graphics.reduce((i,r)=>ne(r)+i,512+8*e.featureIds.length+1024);this._memCache.put(this._getMemCacheKey(e.node),e,t)}_getMemCacheKey(e){return`${e.index}`}_removeAllNodeData(){this._nodesAddedToStage.forEach((e,t)=>{if(e){const i=e.node;this._updateNodeMemory(i),this._cacheNodeData(e)}this._controller.updateLoadStatus(t,!1)}),this._nodesAddedToStage.clear(),this._treeDebugger&&this._treeDebugger.update(),this.loadedGraphics.clear()}removeNode(e){const t=this._removeNodeStageData(e);t&&(this._updateNodeMemory(t.node),this._cacheNodeData(t))}_removeNodeStageData(e){const t=this._nodesAddedToStage.get(e);return t?(this._controller.updateLoadStatus(e,!1),this.loadedGraphics.removeMany(t.graphics),this._nodesAddedToStage.delete(e),this._treeDebugger&&this._treeDebugger.update(),t):null}async loadCachedNodeData(e){return this._memCache.pop(this._getMemCacheKey(e))}async addCachedNodeData(e,t,i,r){this._nodesAddedToStage.has(e.index)?N.getLogger(this.declaredClass).error("I3S node "+e.id+" already added"):(this.loadedGraphics.addMany(t.graphics),this._nodesAddedToStage.set(e.index,t),this._controller.updateLoadStatus(e.index,!0),this._updateNodeMemory(e),await this.updateAttributes(e.index,i,r),this._filterNode(t),this._treeDebugger&&this._treeDebugger.update())}getLoadedNodeIds(){const e=[];return this._nodesAddedToStage.forEach(t=>e.push(t.node.id)),e.sort()}getVisibleNodes(){const e=new Array;return this._nodesAddedToStage.forEach(t=>e.push(t.node)),e}getLoadedNodeIndices(e){this._nodesAddedToStage.forEach((t,i)=>e.push(i))}getLoadedAttributes(e){const t=this._nodesAddedToStage.get(e);if(t&&m(t.attributeInfo))return t.attributeInfo.loadedAttributes}getAttributeData(e){const t=this._nodesAddedToStage.get(e);if(t&&m(t.attributeInfo))return t.attributeInfo.attributeData}_setAttributeData(e,t){const i=this._nodesAddedToStage.get(e);i&&!L(i.attributeInfo)&&(i.attributeInfo.attributeData=t,this._attributeValuesChanged(i))}async updateAttributes(e,t,i){const r=this._nodesAddedToStage.get(e);r&&(await this._i3sOverrides.apply(r.featureIds,t,i),r.attributeInfo=t,this._attributeValuesChanged(r))}_attributeValuesChanged(e){if(k(e),this._filterNode(e),this.processor.graphicsCore.labelsEnabled){const t=e.graphics.map(i=>i.uid);this.processor.graphicsCore.updateLabelingInfo(t)}}_updateClippingExtent(e){return this._controller&&this._controller.updateClippingArea(e),!1}_getObjectIdField(){return this.layer.objectIdField||se}async _rendererChange(e,t){const{layer:{fieldsIndex:i}}=this,r=new Set;let o,s;e?(await e.collectRequiredFields(r,i),o=Array.from(r).sort()):o=[],r.clear(),t?(await t.collectRequiredFields(r,i),s=Array.from(r).sort()):s=[],o.length===s.length&&o.every((a,h)=>o[h]===s[h])||this._reloadAllNodes()}_rangeInfosChanged(e){e!=null&&e.length>0&&N.getLogger(this.declaredClass).warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.")}_filterChange(){this._nodesAddedToStage.forEach(e=>this._filterNode(e))}_reloadAllNodes(){this._removeAllNodeData(),this._controller&&this._controller.restartNodeLoading()}_filterNode(e){const t=this.parsedDefinitionExpression,i=this._excludeObjectIdsSorted,r=this._getObjectIdField();for(const o of e.graphics){const s=o.visible,a=!t||this._evaluateClause(t,o),h=L(i)||K(i,o.attributes[r])<0;o.visible=a&&h,s!==o.visible&&(c.graphic=o,c.property="visible",c.oldValue=s,c.newValue=o.visible,this.processor.graphicsCore.graphicUpdateHandler(c))}}createQuery(){const e={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return m(this.filter)?this.filter.createQuery(e):new P(e)}queryFeatures(e,t){return this._queryEngine.executeQuery(this._ensureQuery(e),t==null?void 0:t.signal)}queryObjectIds(e,t){return this._queryEngine.executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._queryEngine.executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryExtent(e,t){return this._queryEngine.executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQuery(e){return this._addDefinitionExpressionToQuery(L(e)?this.createQuery():P.from(e))}getUsedMemory(){var e,t;return((t=(e=this.processor)==null?void 0:e.graphicsCore)==null?void 0:t.usedMemory)??0}getUnloadedMemory(){var e,t,i;return .8*((((e=this._controller)==null?void 0:e.unloadedMemoryEstimate)??0)+(((i=(t=this.processor)==null?void 0:t.graphicsCore)==null?void 0:i.unprocessedMemoryEstimate)??0))}ignoresMemoryFactor(){return this._controller&&this._controller.fixedFeatureTarget}_handleEdits(e){fe(this._attributeEditingContext,e)}get _attributeEditingContext(){const e=this._getObjectIdField();return{sessions:this._interactiveEditingSessions,fieldsIndex:this.layer.fieldsIndex,objectIdField:e,forEachNode:t=>this._nodesAddedToStage.forEach(i=>t(i.node,i.featureIds)),attributeStorageInfo:this.i3slayer.attributeStorageInfo,i3sOverrides:this._i3sOverrides,getAttributeData:t=>this.getAttributeData(t),setAttributeData:(t,i,r)=>{this._setAttributeData(t,i);const o=this._nodesAddedToStage.get(t);if(m(r)){const s=this.loadedGraphics.get(r.attributes[e]);m(s)&&this.processor.graphicsCore.recreateGraphics([s])}else m(o)&&this.processor.graphicsCore.recreateGraphics(o.graphics)},clearMemCache:()=>{}}}get performanceInfo(){const e={displayedNumberOfFeatures:this.loadedGraphics.length,maximumNumberOfFeatures:this.maximumNumberOfFeatures,totalNumberOfFeatures:-1,nodes:this._nodesAddedToStage.size,core:this.processor.graphicsCore.performanceInfo};return this._controller&&this._controller.updateStats(e),e}get test(){return{controller:this._controller,numNodes:this._nodesAddedToStage.size,loadedGraphics:this.loadedGraphics}}};p([d()],n.prototype,"processor",void 0),p([d({type:le})],n.prototype,"filter",void 0),p([d()],n.prototype,"loadedGraphics",void 0),p([d()],n.prototype,"i3slayer",null),p([d()],n.prototype,"_controller",void 0),p([d()],n.prototype,"updating",void 0),p([d()],n.prototype,"suspended",void 0),p([d()],n.prototype,"holeFilling",void 0),p([d(ae)],n.prototype,"updatingProgress",void 0),p([d()],n.prototype,"updatingProgressValue",null),p([d(q.requiredFields)],n.prototype,"requiredFields",null),p([d(q.availableFields)],n.prototype,"availableFields",void 0),p([d()],n.prototype,"_fieldsHelper",void 0),p([d({type:Number})],n.prototype,"maximumNumberOfFeatures",null),p([d({readOnly:!0})],n.prototype,"maximumNumberOfFeaturesExceeded",null),p([d()],n.prototype,"_excludeObjectIdsSorted",null),p([d({readOnly:!0})],n.prototype,"lodFactor",null),p([d({readOnly:!0})],n.prototype,"hasM",null),p([d({readOnly:!0})],n.prototype,"hasZ",null),n=p([W("esri.views.3d.layers.SceneLayerGraphicsView3D")],n);const ha=n;function U(e){return"pointData"in e}function Q(e){return"geometryBuffer"in e&&e.geometryBuffer!==null}function k(e){const t=e.attributeInfo;for(let i=0;i<e.graphics.length;i++){const r=e.graphics[i];if(r.attributes||(r.attributes={}),m(t)&&m(t.loadedAttributes))for(const{name:o}of t.loadedAttributes)t.attributeData[o]&&(r.attributes[o]=Se(t.attributeData[o],i))}}function Fe(e,t){return e.xmin-=t,e.ymin-=t,e.xmax+=t,e.ymax+=t,e.hasZ&&(e.zmin-=t,e.zmax+=t),e.hasM&&(e.mmin-=t,e.mmax+=t),e}const Ne={2:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0]}}},3:{type:"Embedded",params:{type:"points",vertexAttributes:{position:[0,0,0]}}}},v=ee(),c={graphic:null,property:null,oldValue:null,newValue:null};export{ha as default};
