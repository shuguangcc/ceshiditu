import{cF as $,aL as C,eG as F,fy as G,a1 as j,B as I,l0 as q,eE as z,l1 as E,u as O,e8 as B}from"./index-74d49a87.js";import{a as P}from"./elevationInfoUtils-3c9457ff.js";async function L(s,d,p,f,r){const{elevationProvider:g,renderCoordsHelper:c,spatialReference:b}=s,{elevationInfo:y}=d,m=F(y,!0),w=await G(m,b,r);j(r);const i=[],l=new Set,u=new Set;for(const{objectId:e,points:a}of f){const n=p(e);if(I(n)){for(const o of a)i.push(o[2]);l.add(e);continue}n.isDraped&&u.add(e);const t=n.graphic.geometry;S.setFromElevationInfo(P(t,y)),S.updateFeatureExpressionInfoContext(w,n.graphic,d),h.spatialReference=s.spatialReference;for(const{x:o,y:x,z:D}of a)h.x=o,h.y=x,h.z=D??0,q(h,g,S,c,v),i.push(v.z)}return{elevations:i,drapedObjectIds:u,failedObjectIds:l}}const S=new z,h=$(0,0,0,C.WGS84),v=new E;async function M(s,d,p){if(I(s)||d.candidates.length===0)return R;const f=s.graphics3DGraphicsByObjectID??s.graphics3DGraphics,r=[],g=[],{renderer:c}=s,b=O(c)&&"arcadeRequired"in c&&c.arcadeRequired?B():null,y=async(e,{graphic:a,graphics3DSymbol:n})=>{const t=await b,o=await s.getRenderingInfoAsync(a,c,t,{signal:p});return I(o)?[]:n.queryForSnapping(e,w,o,p)},{candidates:m,spatialReference:w}=d;for(let e=0;e<m.length;++e){const a=m[e],{objectId:n}=a,t=typeof n=="number"?f==null?void 0:f.get(n):void 0;if(I(t))continue;const{graphics3DSymbol:o}=t;o.symbologySnappingSupported&&(r.push(y(a,t)),g.push(e))}if(r.length===0)return R;const i=await Promise.all(r);j(p);const l=[],u=[];for(let e=0;e<i.length;++e){const a=i[e],n=g[e];for(const t of a)l.push(t),u.push(n)}return{candidates:l,sourceCandidateIndices:u}}const R={candidates:[],sourceCandidateIndices:[]};export{M as a,L as m};
