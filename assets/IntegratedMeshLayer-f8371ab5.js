import{u as S,e as o,y as r,n as h,t as w}from"./cast-7928d7aa.js";import{a as m}from"./Error-653283ae.js";import{q as f,r as T,t as _}from"./typedArrayUtil-a8b5b3e9.js";import{O}from"./MultiOriginJSONSupport-27362d57.js";import{w as $}from"./promiseUtils-6684e352.js";import{a as L,U as x}from"./reactiveUtils-f41a4e00.js";import"./ensureType-cf29afa9.js";import{o as N}from"./Extent-69509002.js";import{g as I}from"./persistable-19c823da.js";import{b as M}from"./Layer-f0696768.js";import{i as b}from"./APIKeyMixin-34d76a46.js";import{p as A}from"./ArcGISService-ea748edf.js";import{c as j,d as U}from"./OperationalLayer-24e6fa34.js";import{v as D}from"./PortalLayer-f1a64f99.js";import{t as J}from"./ScaleRangeLayer-271178b7.js";import{N as V,L as c}from"./SceneService-30bbd426.js";import{s as K,l as P,u as E,m as R}from"./I3SLayerDefinitions-f6c057a8.js";import{j as z,U as q}from"./request-d3e98716.js";import{j as C}from"./Collection-78126e82.js";import{f as d}from"./SceneModification-17ca2be5.js";import{c as F}from"./persistableUrlUtils-a16d0f55.js";import"./string-cdf077e6.js";import"./nextTick-3ee5a785.js";import"./Ellipsoid-89682c5e.js";import"./preload-helper-41c905a7.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./uuid-73213768.js";import"./geometry-5a216427.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./Evented-515b9d9c.js";import"./Identifiable-aa6d459d.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./arcgisLayerUrl-0b2b7691.js";import"./TimeExtent-744afd75.js";import"./ElevationInfo-ce9cacc2.js";import"./fieldUtils-31bfecd2.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./lengthUtils-d2d33f94.js";import"./unitUtils-47abac71.js";import"./opacityUtils-243aae26.js";import"./asyncUtils-62e8a185.js";import"./Portal-8b65c9c4.js";import"./locale-30120714.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./PortalItem-aa42c739.js";import"./assets-0b172f07.js";import"./originUtils-1469eeaf.js";import"./HeightModelInfo-22ad72d7.js";import"./I3SIndexInfo-acc8ea15.js";import"./resourceUtils-9d46c0c7.js";import"./enumeration-3c281341.js";import"./SimpleObservable-7dcdef1d.js";import"./projection-d7b57a6c.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./mat4-44a0988f.js";import"./aaBoundingRect-4a760199.js";import"./zscale-1e1fc911.js";var n;let p=n=class extends S(C.ofType(d)){constructor(t){super(t),this.url=null}clone(){return new n({url:this.url,items:this.items.map(t=>t.clone())})}toJSON(t){return this.toArray().map(i=>i.toJSON(t)).filter(i=>!!i.geometry)}static fromJSON(t,i){const s=new n;for(const a of t)s.add(d.fromJSON(a,i));return s}static async fromUrl(t,i,s){const a={url:z(t),origin:"service"},v=await q(t,{responseType:"json",signal:f(s,"signal")}),g=i.toJSON(),y=[];for(const l of v.data)y.push(d.fromJSON({...l,geometry:{...l.geometry,spatialReference:g}},a));return new n({url:t,items:y})}};o([r({type:String})],p.prototype,"url",void 0),p=n=o([h("esri.layers.support.SceneModifications")],p);const u=p;let e=class extends V(A(j(D(J(O(b(M))))))){constructor(...t){super(...t),this._handles=new w,this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.elevationInfo=null,this.path=null}destroy(){this._handles.destroy()}initialize(){this._handles.add(L(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,x))}normalizeCtorArgs(t,i){return typeof t=="string"?{url:t,...i}:t}readModifications(t,i,s){this._modificationsSource={url:F(t,s),context:s}}async load(t){return this.addResolvingPromise(this._doLoad(t)),this}async _doLoad(t){const i=f(t,"signal");try{await this.loadFromPortal({supportedTypes:["Scene Service"]},t)}catch(s){$(s)}if(await this._fetchService(i),T(this._modificationsSource)){const s=await u.fromUrl(this._modificationsSource.url,this.spatialReference,t);this.setAtOrigin("modifications",s,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,i)}beforeSave(){if(!_(this._modificationsSource))return this.load().then(()=>{},()=>{})}async saveAs(t,i){return this._debouncedSaveOperations(c.SAVE_AS,{...i,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},t)}async save(){const t={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(c.SAVE,t)}validateLayer(t){if(t.layerType&&t.layerType!=="IntegratedMesh")throw new m("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:t.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new m("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new m("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}};o([r({type:String,readOnly:!0})],e.prototype,"geometryType",void 0),o([r({type:["show","hide"]})],e.prototype,"listMode",void 0),o([r({type:["IntegratedMeshLayer"]})],e.prototype,"operationalLayerType",void 0),o([r({json:{read:!1},readOnly:!0})],e.prototype,"type",void 0),o([r({type:K,readOnly:!0})],e.prototype,"nodePages",void 0),o([r({type:[P],readOnly:!0})],e.prototype,"materialDefinitions",void 0),o([r({type:[E],readOnly:!0})],e.prototype,"textureSetDefinitions",void 0),o([r({type:[R],readOnly:!0})],e.prototype,"geometryDefinitions",void 0),o([r({readOnly:!0})],e.prototype,"serviceUpdateTimeStamp",void 0),o([r({type:u}),I({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],e.prototype,"modifications",void 0),o([N(["web-scene","portal-item"],"modifications")],e.prototype,"readModifications",null),o([r(U)],e.prototype,"elevationInfo",void 0),o([r({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],e.prototype,"path",void 0),e=o([h("esri.layers.IntegratedMeshLayer")],e);const oe=e;export{oe as default};
