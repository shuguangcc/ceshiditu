import{e as a,y as l,n as re,m as ge,t as Ie}from"./cast-7928d7aa.js";import{r as _,i as Ee,s as v,t as k,e as W}from"./typedArrayUtil-a8b5b3e9.js";import"./ensureType-cf29afa9.js";import{c as ae,e as he,t as Ke,i as Q,u as Qe,s as Xe,a as Ze,r as Je}from"./analysisThemeUtils-eba5c5ba.js";import{n as Ye}from"./AnalysisView3D-70b48b15.js";import{l as N,U as fe,w as le}from"./reactiveUtils-f41a4e00.js";import{g as F,y as de,w as oe,A as Ue,R as et,K as Le,j as ye,z as tt}from"./projection-d7b57a6c.js";import{a as ce,u as st,I as it,p as rt,E as nt,T as ot,A as at,K as ht,O as lt}from"./unitUtils-47abac71.js";import{m as dt,s as ct}from"./mathUtils-2519596a.js";import{a as E,o as ve,v as pt,g as Se}from"./quantityFormatUtils-ba1f6cd1.js";import{r as we,m as mt,a as ut}from"./vec2-2cef68de.js";import{n as Ce,r as je}from"./vec2f64-30dc1443.js";import{o as We,u as te,g as Y,p as gt,P as $,x as Fe,r as ee,z as pe,_ as ke,j as _t,e as se}from"./vec3-a020a6f6.js";import{n as c}from"./vec3f64-2f9cef06.js";import{n as ft,r as ie}from"./vec4f64-e407da96.js";import{k as Ne,x as be,w as Lt}from"./Extent-69509002.js";import{n as yt}from"./sphere-4f5e644f.js";import{H as vt,A as St,l as wt,i as Ct,E as X,t as bt,d as Pt}from"./objectResourceUtils-ef6e3cdf.js";import{geodesicArea as At}from"./geometryEngine-62e3ccf4.js";import{v as Mt}from"./Polyline-bf268e7b.js";import{aN as qe,aO as Be,aP as $t,aQ as Pe,aR as Vt,aS as Rt,aT as Gt,ai as Dt,aj as xt,aU as zt}from"./index-455b69b8.js";import{e as Ot,f as Ae,h as Tt}from"./plane-45609588.js";import{a as Me}from"./DefaultMaterial_COLOR_GAMMA-9831d979.js";import{v as $e}from"./euclideanAreaMeasurementUtils-0db711c3.js";import{n as It}from"./Evented-515b9d9c.js";import{s as Et}from"./Error-653283ae.js";import{D as Ve,m as Ut}from"./aaBoundingRect-4a760199.js";import{a as jt,n as Wt,c as U}from"./LineVisualElement-69b2e868.js";import{l as j}from"./Color-a42a8267.js";import"./intl-f1e98361.js";import"./string-cdf077e6.js";import{j as Ft,x as kt}from"./mat4-44a0988f.js";import{e as Nt}from"./mat4f64-1e28eae0.js";import{g as Z,m as Re,l as me}from"./Segment-97608ed7.js";import{D as Ge,a as De}from"./vec4-790471c0.js";import{E as qt,d as Bt,x as Ht,j as Kt,c as D}from"./VisualVariablePassParameters-5807c7dc.js";import{O as T}from"./VertexAttribute-9c5c630d.js";import{h as xe}from"./Matrix3PassUniform-da8eddae.js";import{_ as Qt}from"./preload-helper-41c905a7.js";import{t as Xt,l as Zt,e as Jt,o as Yt,W as es,a as ts,_ as ss}from"./EvaluateSceneLighting.glsl-3bbc6edf.js";import{e as is,o as q}from"./TransparencyPassType-cd195b0e.js";import{n as rs}from"./MultipassTerrainTest.glsl-e79d40de.js";import{v as ns}from"./View.glsl-8b12b8c2.js";import{e as os}from"./Texture2DPassUniform-6e8ae673.js";import{e as ze}from"./Float4PassUniform-3a47b7b3.js";import{o as as,n as Oe}from"./ShaderBuilder-93e8045e.js";import{R as J}from"./enums-64ab819c.js";import{e as z}from"./ShaderTechniqueConfiguration-9f5b4555.js";import{s as hs}from"./DefaultTechniqueConfiguration-e8962072.js";import{s as ls}from"./locale-30120714.js";import{u as ds}from"./messages-be07754e.js";function cs(t,e){const s=e.center;We(s,0,0,0);for(let r=0;r<t.length;++r)te(s,s,t[r]);Y(s,s,1/t.length);let i=0;for(let r=0;r<t.length;++r)i=Math.max(i,gt(s,t[r]));e.radius=Math.sqrt(i)}function ps(t,e){if(t.length<3)throw new Error("need at least 3 points to fit a plane");Ot(t[0],t[1],t[2],e)}function ms(t,e){return $(t,e)+t[3]}function us(t,e,s){return F(t,V,s)&&F(e,R,s)?Fe(V,R):0}function gs(t,e){if(!de(t,V)||!de(e,R))return 0;const s=new qe;return Be(s,[V[0],V[1]],[R[0],R[1]]),s.distance}function _s(t,e,s){const i=new qe;return Be(i,[t[0],t[1]],[e[0],e[1]],s),i.distance}function fs(t,e,s,i){const r=ys;return oe(t,i,V)&&oe(e,i,R)&&oe(s,i,ue)?(r.setPoint(0,0,V),r.setPoint(0,1,R),r.setPoint(0,2,ue),Math.abs(At(r,"square-meters"))):0}function Ls(t,e=null,s=!0){const r=(n,o)=>{if(o[0]===0&&o[1]===0&&o[2]===0)return!1;for(let h=0;h<n.length;++h)if($(o,n[h])<-1e-6)return!1;return!0};if(t.length===0)return!1;if(t.length===1)return e&&ee(e,t[0]),!0;We(S,0,0,0);for(let n=0;n<t.length;++n)te(S,S,t[n]);if(pe(S,S),r(t,S))return e&&ee(e,S),!0;if(!s)return!1;for(let n=0;n<t.length;++n)for(let o=0;o<t.length;++o)if(n!==o&&(ke(S,t[n],t[o]),pe(S,S),r(t,S)))return e&&ee(e,S),!0;return!1}const V=c(),R=c(),ue=c(),ys=new Mt({rings:[[V,R,ue]],spatialReference:Ne.WGS84}),S=c();class vs{constructor(e,s){this.positionsWorldCoords=[],this.positionsRenderCoords=[],this.positionsProjectedWorldCoords=[],this.positionsFittedRenderCoords=[],this.positionsGeographic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.areaCentroidWorldCoords=c(),this.areaCentroidRenderCoords=c(),this.geodesicAreaCentroidRenderCoords=c(),this._length=0,this._centroidRenderCoords=c(),this._planeWorldCoords=ft(),this._worldUp=c(),this._worldTangent=c(),this._frame=[c(),c(),c()],this._pathVersion=-1,this._validMeasurement=!1,this._hasCursorPoint=!1,this._mode=null,this._tempU=c(),this._tempV=c(),this._tempVec3=c(),this._tempSphere={center:c(),radius:0},this._sceneView=e,this.unitNormalizer=s}update(e,s,i,r,n,o,h){const d=this.unitNormalizer,m=this._sceneView.renderSpatialReference,p=this.unitNormalizer.spatialReference,g=_(s);if(this._pathVersion===e.version&&this._validMeasurement===r&&!h&&this._hasCursorPoint===g&&this._mode===o)return!e.isValidPolygon&&(this._updateCursorSegmentLength(e,s),!0);this._pathVersion=e.version,this._validMeasurement=r,this._hasCursorPoint=g;const u=e.numVertices;this._resize(u);const y=ce(i.spatialReference),b=Ue(i.spatialReference,y)&&et(i.spatialReference),{positionsGeographic:P,positionsWorldCoords:B,positionsRenderCoords:A,positionsSpherical:x}=this;e.forEachVertexPosition((L,C)=>{Ss(i.elevationProvider,L),F(L,B[C],p),F(L,A[C],m),b&&(de(L,P[C]),F(L,x[C],y),pe(x[C],x[C]))});const H=this._updatePathLengths(r);if(this.pathLength=this._length>1?E(d.normalizeDistance(H),"meters"):null,b){const L=this._updateGeodesicPathLengths(r,p);this.geodesicPathLength=this._length>1?E(L,"meters"):null}else this.geodesicPathLength=null;return this._updateCursorSegmentLength(e,s),this._updateMode(e,o),r?(this._updateArea(i,d,m,p,n),b&&this._updateGeodesicArea(i),!0):(this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),!0)}getData(){return{positionsWorldCoords:this.positionsWorldCoords,positionsRenderCoords:this.positionsRenderCoords,positionsProjectedWorldCoords:this.positionsProjectedWorldCoords,positionsFittedRenderCoords:this.positionsFittedRenderCoords,positionsGeographic:this.positionsGeographic,positionsSpherical:this.positionsSpherical,positionsStereographic:this.positionsStereographic,pathSegmentLengths:this.pathSegmentLengths,geodesicPathSegmentLengths:this.geodesicPathSegmentLengths,perimeterSegmentLengths:this.perimeterSegmentLengths,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidWorldCoords:this.areaCentroidWorldCoords,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,fittingMode:this.fittingMode,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,cursorSegmentLength:this.cursorSegmentLength,geodesicCursorSegmentLength:this.geodesicCursorSegmentLength,unitNormalizer:this.unitNormalizer,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorldCoords.length=e,this.positionsRenderCoords.length=e,this.positionsProjectedWorldCoords.length=e,this.positionsFittedRenderCoords.length=e,this.positionsGeographic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorldCoords.push(c()),this.positionsRenderCoords.push(c()),this.positionsProjectedWorldCoords.push(Ce()),this.positionsFittedRenderCoords.push(c()),this.positionsGeographic.push(c()),this.positionsSpherical.push(c()),this.positionsStereographic.push(Ce()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const s=this.positionsWorldCoords,i=this.pathSegmentLengths;let r=0;for(let n=0;n<this._length;++n){const o=i[n]=Fe(s[n],s[(n+1)%this._length]);(n<this._length-1||e)&&(r+=o)}return r}_updateGeodesicPathLengths(e,s){const i=this.positionsGeographic,r=this.geodesicPathSegmentLengths;let n=0;for(let o=0;o<this._length;++o){const h=r[o]=_s(i[o],i[(o+1)%this._length],s);(o<this._length-1||e)&&(n+=h)}return n}_updateArea(e,s,i,r,n){const o=e.renderCoordsHelper,h=this.positionsWorldCoords,d=this.positionsRenderCoords,m=this.positionsProjectedWorldCoords,p=this.positionsFittedRenderCoords,g=this._planeWorldCoords,u=this._centroidRenderCoords;ae(d,u),o.worldUpAtPosition(u,this._worldUp),o.worldBasisAtPosition(u,yt.X,this._worldTangent),Le(u,this._worldUp,i,this._worldUp,r),Le(u,this._worldTangent,i,this._worldTangent,r),h.length>2&&ps(h,g),this.fittingMode=this._selectFittingMode(g,h,this._worldUp,n);let y=0;if(this.fittingMode==="horizontal"){let L=-1/0;d.forEach((C,K)=>{const _e=o.getAltitude(d[K]);_e>L&&(L=_e,y=K)})}const b=h[y];let P=g,B=this._worldTangent;this.fittingMode==="horizontal"?P=this._worldUp:this.fittingMode==="vertical"&&(P=this._tempVec3,B=this._worldUp,Ae(g,this._worldUp,P)),ee(this._frame[2],P),Ae(B,P,this._frame[0]),ke(this._frame[1],this._frame[0],this._frame[2]),_t(this._frame[1],this._frame[1]);const A=this._tempVec3,x=this._tempU,H=this._tempV;for(let L=0;L<this._length;++L){const C=m[L],K=p[L];se(A,h[L],b),we(C,$(this._frame[0],A),$(this._frame[1],A)),Y(x,this._frame[0],C[0]),Y(H,this._frame[1],C[1]),te(A,x,H),te(A,A,b),ye(A,r,K,i)}this.perimeterLength=this._length>0?E(s.normalizeDistance(this._updatePerimeterLengths()),"meters"):null,ae(p,this.areaCentroidRenderCoords),ye(this.areaCentroidRenderCoords,i,this.areaCentroidWorldCoords,r),this._updateIntersectingSegments(),this.area=this.intersectingSegments.size===0?ve(s.normalizeArea(this._computeArea()),"square-meters"):null}_updateGeodesicArea(e){const{renderCoordsHelper:s,spatialReference:i}=e,{positionsSpherical:r,positionsStereographic:n}=this,o=this._tempVec3,h=Ls(r,o);if(!h)return void(this.geodesicArea=null);const d=this._tempU,m=this._tempV;Tt(o,d,m);for(let p=0;p<this._length;++p){const g=$(r[p],d),u=$(r[p],m),y=$(r[p],o);we(n[p],g/y,u/y)}Y(o,o,st(i).radius),s.toRenderCoords(o,ce(i),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=h&&this.geodesicIntersectingSegments.size===0?ve(this._computeGeodesicArea(),"square-meters"):null}_updatePerimeterLengths(){const e=this.positionsProjectedWorldCoords,s=this.perimeterSegmentLengths;let i=0;for(let r=0;r<this._length;++r)i+=s[r]=mt(e[r],e[(r+1)%this._length]);return i}_updateIntersectingSegments(){const e=this.positionsProjectedWorldCoords,s=this.intersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];be(n,o,h,d)&&(s.add(i),s.add(r))}}_computeArea(){const e=this.positionsProjectedWorldCoords,s=this.triangleIndices=Me($e(e));let i=0;for(let r=0;r<s.length;r+=3)i+=vt(e[s[r]],e[s[r+1]],e[s[r+2]]);return i}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,s=this.geodesicIntersectingSegments;s.clear();for(let i=0;i<this._length;++i)for(let r=i+2;r<this._length;++r){if((r+1)%this._length===i)continue;const n=e[i],o=e[(i+1)%this._length],h=e[r],d=e[(r+1)%this._length];be(n,o,h,d)&&(s.add(i),s.add(r))}}_computeGeodesicArea(){const e=this.positionsGeographic,s=this.positionsStereographic,i=this.geodesicTriangleIndices=Me($e(s));let r=0;for(let n=0;n<i.length;n+=3)r+=fs(e[i[n]],e[i[n+1]],e[i[n+2]],Ne.WGS84);return r}_selectFittingMode(e,s,i,r){const n=s.map(p=>Math.abs(ms(e,p))).reduce((p,g)=>Math.max(p,g),0);cs(s,this._tempSphere);const o=n/(2*this._tempSphere.radius),h=o<r.maxRelativeErrorCoplanar,d=o<r.maxRelativeErrorAlmostCoplanar;let m="horizontal";return h?m="oblique":d&&(m=Math.abs($(i,e))>Math.cos(dt(r.verticalAngleThreshold))?"horizontal":"vertical"),m}_updateCursorSegmentLength(e,s){const i=e.lastPoint;!e.isValidPolygon&&_(i)&&_(s)?(this.geodesicCursorSegmentLength=E(gs(i,s),"meters"),this.cursorSegmentLength=E(this.unitNormalizer.normalizeDistance(us(i,s,this.unitNormalizer.spatialReference)),"meters")):(this.geodesicCursorSegmentLength=null,this.cursorSegmentLength=null)}_updateMode(e,s){if(s===he.Auto){this.actualMeasurementMode="euclidean";let i=0;this.geodesicPathLength!=null&&(i+=this.geodesicPathLength.value),!e.isValidPolygon&&_(this.geodesicCursorSegmentLength)&&(i+=this.geodesicCursorSegmentLength.value),i>ws&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=s===he.Euclidean?"euclidean":"geodesic";this.geodesicPathLength==null&&(this.actualMeasurementMode="euclidean"),this._mode=s}}function Ss(t,e){e.hasZ||(e.z=Ee($t(t,e,"ground"),0))}const ws=1e5;let O=class extends ge{constructor(e){super(e)}initialize(){const{spatialReference:e}=this.view,s=ce(e),i=s===it?rt:s,r=!e||Ue(e,i)?i:e,n=new Ke(r);this._measurementDataManager=new vs(this.view,n),this.addHandles([this.analysisViewData.path.on("change",()=>this._update()),N(()=>this.analysisViewData.cursorPoint,()=>this._update(),fe),N(()=>this.analysisViewData.mode,()=>this._update(),fe)]),this._update()}_update(e=!1){const{analysisViewData:s,view:i}=this,r={maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80};this._measurementDataManager.update(s.path,s.cursorPoint,i,s.validMeasurement,r,s.mode,e)&&(s.measurementData=this._measurementDataManager.getData())}};a([l({constructOnly:!0})],O.prototype,"view",void 0),a([l({constructOnly:!0})],O.prototype,"analysis",void 0),a([l({constructOnly:!0})],O.prototype,"analysisViewData",void 0),O=a([re("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],O);const He="esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurement3DPathHelper",Cs=Et.getLogger(He);let M=class extends It.EventedAccessor{constructor(t={}){super(t),this._handles=new Ie,this._version=0,this._internalGeometryChange=!1,this._extent=Ve()}destroy(){this._handles=v(this._handles)}set areaMeasurement(t){this._set("areaMeasurement",t),_(t)&&_(this.view)&&this._initialize(t,this.view)}set view(t){this._set("view",t),_(t)&&_(this.areaMeasurement)&&this._initialize(this.areaMeasurement,t)}get constructed(){return _(this.areaMeasurement)&&_(this.view)}get version(){return this._version}get isValidPolygon(){return this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const t=Ve(this._extent);return this.forEachVertex(e=>{Ut(t,e.pos)}),t}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(t,e){this._handles.removeAll(),this._handles.add(N(()=>t.geometry,()=>{this._updateEditGeometryFromModelGeometry(t,e)},le)),this._makeDirty(!0)}_makeDirty(t=!1){this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),t&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(t,e){if(this._version++,this._internalGeometryChange)return;this._handles.remove("EditGeometry");let s=t.geometry;if(_(s)){const i=tt(s,e.spatialReference);k(i)&&jt(t,s.spatialReference,Cs),s=i}_(s)?this._editGeometryOperations=Pe.fromGeometry(s,e.state.viewingMode):this._editGeometryOperations=new Pe(new Vt("polygon",Rt(!0,!1,e.spatialReference))),this._makeDirty(!0),this.emit("change"),this._handles.add(this._editGeometry.on("change",i=>{this._makeDirty(i.addedVertices!=null||i.removedVertices!=null),this._internalGeometryChange=!0,t.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1}),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const t=[];return this.forEachVertex(e=>{t.push(e)}),t}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const t=this._editGeometry.components[0].getLastVertex();if(_(t))return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}return null}getVertex(t){if(!this.constructed||this._editGeometry.components.length===0||this._editGeometry.components[0].vertices.length===0)return null;const e=this._editGeometry.components[0].vertices[0];let s=e;do{if(s.index===t)return s;s=s.rightEdge.rightVertex}while(s!==e&&s!=null);return null}getVertexPositionAsPoint(t){return this._editGeometry.coordinateHelper.vectorToPoint(t.pos)}getVertexPositionAsPointFromIndex(t){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(t).pos)}forEachVertex(t){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(t)}forEachVertexPosition(t){const e=this._editGeometry.coordinateHelper;this.forEachVertex((s,i)=>{e.vectorToPoint(s.pos,Te),t(Te,i)})}clear(){_(this.areaMeasurement)&&(this.areaMeasurement.geometry=null)}add(t){if(!this.constructed)return null;if(this._editGeometry.components.length===0){const s=W(this.view);this._editGeometry.components.push(new Gt(s.spatialReference,s.state.viewingMode))}const e=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),e}close(){if(!this.constructed||this._editGeometry.components.length===0)return null;const t=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),t}ensureContains(t,e=""){let s=!1;if(this._editGeometry.components.forEach(i=>{i.iterateVertices(r=>{r===t&&(s=!0)})}),!s)throw new Error(`vertex doesnt exist ${e}`);return s}setVertexPosition(t,e){if(!this.constructed)return null;const s=this._editGeometryOperations.setVertexPosition(t,this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),s}equals(t){if(this.numVertices!==t.numVertices)return!1;let e=!0;return this.forEachVertexPosition((s,i)=>{const r=t.getVertexPositionAsPointFromIndex(i);s.equals(r)||(e=!1)}),!!e}};a([l({value:null})],M.prototype,"areaMeasurement",null),a([l({value:null})],M.prototype,"view",null),a([l()],M.prototype,"isValidPolygon",null),a([l()],M.prototype,"extent",null),a([l()],M.prototype,"spatialReference",null),a([l()],M.prototype,"numVertices",null),M=a([re(He)],M);const Te=new Lt;function bs(t){const e=new as;e.extensions.add("GL_OES_standard_derivatives");const{vertex:s,fragment:i}=e;return ns(s,t),e.attributes.add(T.POSITION,"vec3"),e.attributes.add(T.UV0,"vec2"),e.varyings.add("vUV","vec2"),t.hasMultipassTerrain&&e.varyings.add("depth","float"),s.code.add(Oe`
    void main(void) {
      vUV = uv0;
      ${t.hasMultipassTerrain?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),e.include(rs,t),i.uniforms.add(new os("size",r=>r.size)),i.uniforms.add(new ze("color1",r=>r.color1)),i.uniforms.add(new ze("color2",r=>r.color2)),i.include(is),i.code.add(Oe`
    void main() {
      ${t.hasMultipassTerrain?"terrainDepthTest(gl_FragCoord, depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      gl_FragColor = mix(color2, color1, t);
      ${t.transparencyPassType===q.Color?"gl_FragColor = premultiplyAlpha(gl_FragColor);":""}
    }
  `),e}const Ps=Object.freeze(Object.defineProperty({__proto__:null,build:bs},Symbol.toStringTag,{value:"Module"}));class ne extends Jt{initializeProgram(e){return new Yt(e.rctx,ne.shader.get().build(this.configuration),qt)}_setPipelineState(e){const s=this.configuration,i=e===q.NONE,r=e===q.FrontFace;return es({blending:s.transparent?i?Ms:St(e):null,depthTest:{func:wt(e)},depthWrite:i?s.writeDepth&&ts:Ct(e),colorWrite:ss,polygonOffset:i||r?s.polygonOffset&&As:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}ne.shader=new Xt(Ps,()=>Qt(()=>import("./CheckerBoard.glsl-8f6d3c4d.js"),["./CheckerBoard.glsl-8f6d3c4d.js","./ShaderBuilder-93e8045e.js","./typedArrayUtil-a8b5b3e9.js","./Error-653283ae.js","./string-cdf077e6.js","./vec2-2cef68de.js","./common-c186b691.js","./vec2f64-30dc1443.js","./Texture2DPassUniform-6e8ae673.js","./View.glsl-8b12b8c2.js","./mat4-44a0988f.js","./vec3f64-2f9cef06.js","./mat4f32-77b3d8ac.js","./vec3-a020a6f6.js","./TransparencyPassType-cd195b0e.js","./VertexAttribute-9c5c630d.js","./cast-7928d7aa.js","./ensureType-cf29afa9.js","./nextTick-3ee5a785.js","./promiseUtils-6684e352.js","./analysisThemeUtils-eba5c5ba.js","./unitUtils-47abac71.js","./jsonMap-c1f958cf.js","./Extent-69509002.js","./Ellipsoid-89682c5e.js","./screenUtils-410d12c0.js","./Color-a42a8267.js","./colorUtils-639f4d25.js","./mathUtils-2519596a.js","./vec4-790471c0.js","./colorUtils-4aa5b1d6.js","./AnalysisView3D-70b48b15.js","./Promise-dfdee8ba.js","./reactiveUtils-f41a4e00.js","./projection-d7b57a6c.js","./preload-helper-41c905a7.js","./SimpleObservable-7dcdef1d.js","./Polyline-bf268e7b.js","./assets-0b172f07.js","./request-d3e98716.js","./aaBoundingRect-4a760199.js","./zscale-1e1fc911.js","./quantityFormatUtils-ba1f6cd1.js","./index-455b69b8.js","./Basemap-a8f7f439.js","./Collection-78126e82.js","./Evented-515b9d9c.js","./collectionUtils-3831b7c4.js","./deprecate-b9088bd3.js","./Loadable-48bc1293.js","./loadAll-7fd968fe.js","./asyncUtils-62e8a185.js","./Portal-8b65c9c4.js","./locale-30120714.js","./PortalGroup-bfe93c76.js","./PortalUser-4c8e1adc.js","./PortalItem-aa42c739.js","./messages-be07754e.js","./writeUtils-067c4f82.js","./layerUtils-034678f6.js","./compilerUtils-034cacb8.js","./enumeration-3c281341.js","./opacityUtils-243aae26.js","./CollectionFlattener-3dd1f479.js","./TablesMixin-e7a6aab1.js","./Layer-f0696768.js","./geometry-5a216427.js","./typeUtils-eb9416d0.js","./Identifiable-aa6d459d.js","./Graphic-b46e2684.js","./PopupTemplate-6eb885db.js","./Clonable-ba795b08.js","./fieldUtils-31bfecd2.js","./arcadeOnDemand-c6d1b9f2.js","./number-347a3a44.js","./symbols-fa594797.js","./CIMSymbol-1379245a.js","./Symbol-fc4312a4.js","./symbolLayerUtils3D-1f8d4478.js","./aaBoundingBox-fc742a4e.js","./persistableUrlUtils-a16d0f55.js","./Symbol3DAnchorPosition2D-c0f4a14d.js","./jsonUtils-03c4af61.js","./Cyclical-b66238c6.js","./workers-898a7c4c.js","./Connection-a681777e.js","./Queue-3a0c055d.js","./intl-f1e98361.js","./TileInfo-34f80a8e.js","./widget-f7489a3f.js","./uuid-73213768.js","./dom-5b7af1bf.js","./HandleOwner-e1406413.js","./byteSizeEstimations-f0cab514.js","./executeQueryJSON-bcd96e1a.js","./normalizeUtils-ee4bf39f.js","./query-922e6fbf.js","./pbfQueryUtils-72f9b45b.js","./pbf-e1a6c35b.js","./OptimizedFeature-3de538c1.js","./OptimizedFeatureSet-1d1ac4b9.js","./queryZScale-d9d8ef40.js","./FeatureSet-0573546e.js","./Field-f5fc9f6b.js","./fieldType-b1002185.js","./Query-ff8c2cfb.js","./TimeExtent-744afd75.js","./RelationshipQuery-db5fcd0c.js","./LegendOptions-e65e7a9c.js","./utils-725f8b4e.js","./BlendLayer-d8293c8d.js","./parser-2b40deea.js","./ItemCache-ee28c7ba.js","./MemCache-4b976a8b.js","./cimSymbolUtils-2e4dde89.js","./utils-c81a5c52.js","./jsonUtils-c56f8821.js","./UniqueValueRenderer-103ec66d.js","./diffUtils-1ac65748.js","./colorRamps-3a8ac20b.js","./sizeVariableUtils-d4870b0d.js","./visualVariableUtils-c59ab38d.js","./lengthUtils-d2d33f94.js","./jsonUtils-d7db3dc7.js","./styleUtils-4adfed9e.js","./DictionaryLoader-2cf5144e.js","./LRUCache-14115d91.js","./heatmapUtils-84e8c43b.js","./vec4f64-e407da96.js","./featureConversionUtils-01cdde8a.js","./TopFeaturesQuery-785f5453.js","./FeatureLayer-a9f3e6ec.js","./MultiOriginJSONSupport-27362d57.js","./LayerFloorInfo-2cd5e8ae.js","./FeatureLayerBase-aebdf2da.js","./HeightModelInfo-22ad72d7.js","./arcgisLayerUrl-0b2b7691.js","./OperationalLayer-24e6fa34.js","./ElevationInfo-ce9cacc2.js","./editsZScale-2015e7db.js","./APIKeyMixin-34d76a46.js","./ArcGISService-ea748edf.js","./CustomParametersMixin-807d2055.js","./EditBusLayer-40671d1a.js","./FeatureReductionLayer-4077b2ae.js","./labelingInfo-5c3a46f6.js","./labelUtils-a194a22a.js","./defaultsJSON-59981e75.js","./OrderedLayer-e7edf19c.js","./PortalLayer-f1a64f99.js","./RefreshableLayer-1c078c47.js","./ScaleRangeLayer-271178b7.js","./TemporalLayer-39c07299.js","./TimeInfo-c89d0ef4.js","./FeatureTemplate-746d033e.js","./FeatureType-c83c5f49.js","./fieldProperties-7547b373.js","./FieldsIndex-aa6dd3fa.js","./versionUtils-92993d41.js","./styleUtils-da81b13f.js","./popupUtils-07fe66a7.js","./colorUtils-82440b70.js","./mat2d-d0b91e3e.js","./Scheduler-8433672d.js","./GraphicsLayer-10573c27.js","./ViewingMode-5d7d590b.js","./enums-0fc02184.js","./mat3-3fc68e72.js","./mat3f32-d3d088e8.js","./vec2f32-461e65a9.js","./TileStrategy-4189758f.js","./TileStore-787dbea4.js","./TileKey-0750ad58.js","./rbush-8e36784a.js","./quickselect-322ec8e1.js","./capabilities-3636c6a4.js","./context-util-1e3c8cfc.js","./sphere-4f5e644f.js","./mat3f64-c6305894.js","./mat4f64-1e28eae0.js","./quatf64-7fd38d64.js","./lineSegment-e6f72ff2.js","./plane-45609588.js","./scaleUtils-b32a50d8.js","./ElevationSamplerData-7decf898.js","./PhysicallyBasedRendering.glsl-a986c926.js","./FloatPassUniform-d2dfc562.js","./Float4PassUniform-3a47b7b3.js","./RgbaFloatEncoding.glsl-6036ca34.js","./vec3f32-c9aa289f.js","./Texture2DDrawUniform-22924c6f.js","./basicInterfaces-19ed850e.js","./PiUtils.glsl-0c0898f0.js","./ReadLinearDepth.glsl-7ff30f7d.js","./WaterSurface.glsl-fc8a5726.js","./ForwardLinearDepth.glsl-36f9eb3b.js","./Matrix3PassUniform-da8eddae.js","./Slice.glsl-a612de15.js","./Transform.glsl-f15542a7.js","./OutputHighlight.glsl-7364b03b.js","./MultipassTerrainTest.glsl-e79d40de.js","./NormalUtils.glsl-a59958d7.js","./AlphaCutoff-96178e0d.js","./EvaluateSceneLighting.glsl-3bbc6edf.js","./VisualVariablePassParameters-5807c7dc.js","./enums-64ab819c.js","./VertexElementDescriptor-2925c6af.js","./FramebufferObject-50e1b68f.js","./Texture-e79b14e7.js","./Util-a48361c6.js","./SSAOBlur.glsl-c6f142fc.js","./ScreenSpacePass-00f8c8a4.js","./SSAO.glsl-6f3b4065.js","./ShaderTechniqueConfiguration-9f5b4555.js","./HUD.glsl-80cf9a21.js","./VerticalOffset.glsl-86460edb.js","./objectResourceUtils-ef6e3cdf.js","./devEnvironmentUtils-5002a058.js","./BufferView-646ba1de.js","./vec33-ce3aa99b.js","./DefaultMaterial_COLOR_GAMMA-9831d979.js","./types-e1c0a5bf.js","./Version-9baeb7ac.js","./quat-5b263584.js","./Texture-bbae5d9d.js","./TextureOnly.glsl-18701a3b.js","./InterleavedLayout-5e9cf734.js","./MixExternalColor.glsl-25f0049c.js","./symbolColorUtils-604c5345.js","./ObjectAndLayerIdColor.glsl-73c19386.js","./OutputDepth.glsl-179f1d8f.js","./VisualVariables.glsl-b8290512.js","./DiscardOrAdjustAlphaBlend.glsl-5f837994.js","./Normals.glsl-90e28525.js","./DefaultMaterial.glsl-b4f4cbc5.js","./VertexColor.glsl-db21b96c.js","./DefaultTechniqueConfiguration-e8962072.js","./RealisticTree.glsl-2b30ed32.js","./edgeProcessing-3ca548e1.js","./deduplicate-b0bc48cc.js","./projection-aa2a8986.js","./Octree-1a841545.js","./HUDMaterial.glsl-4bf3c7df.js","./sdfPrimitives-a24e9cb2.js","./floatRGBA-fa8308d2.js","./dehydratedFeatures-4eeb381a.js","./quantizationUtils-33aba427.js","./labelFormatUtils-4d730eaa.js","./I3SUtil-3ffd3baa.js","./I3SBinaryReader-3d2c2faa.js","./LineCallout.glsl-a0056465.js","./earcut-58237617.js","./QueryEngineResult-665bf7fb.js","./WhereClause-2b5b05b2.js","./utils-30a9a7e0.js","./generateRendererUtils-a996108f.js","./utils-1f4fcfec.js","./json-48e3ea08.js","./MeshComponent-f50df6af.js","./MarkerSizing.glsl-c6fa192a.js","./RibbonLine.glsl-2a3b4d4e.js","./LineStipple.glsl-de782d6a.js","./callExpressionWithFeature-a7532499.js","./LineMarker.glsl-8f444621.js","./NativeLine.glsl-cdbbf172.js","./Path.glsl-60b36878.js","./ColorMaterial.glsl-8310ffb3.js","./Pattern.glsl-d3388745.js","./EffectView-d3bf37ed.js","./LercDecoder-73115fd2.js","./config-1337d16e.js","./workerHelper-c6d4a8cb.js","./Subtype-5b01b21f.js","./datetime-4f774298.js","./elevationInfoUtils-427916a5.js","./ExportImageParameters-f328a234.js","./sublayerUtils-ba7f61bc.js","./webStyleSymbolUtils-55ed91cd.js","./enums-4b2a86a0.js","./index-8e3f441a.css","./geometryEngine-62e3ccf4.js","./geometryEngineBase-3dd302e0.js","./hydrated-be86c8b3.js","./euclideanAreaMeasurementUtils-0db711c3.js","./measurementUtils-c86e49dc.js","./LineVisualElement-69b2e868.js","./Segment-97608ed7.js","./TextOverlayItem-a6091360.js"],import.meta.url));const As={factor:0,units:-25},Ms=Zt(J.SRC_ALPHA,J.ONE,J.ONE_MINUS_SRC_ALPHA,J.ONE_MINUS_SRC_ALPHA);class G extends hs{constructor(){super(...arguments),this.transparencyPassType=q.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1}}a([z({count:q.COUNT})],G.prototype,"transparencyPassType",void 0),a([z()],G.prototype,"transparent",void 0),a([z()],G.prototype,"writeDepth",void 0),a([z()],G.prototype,"polygonOffset",void 0),a([z()],G.prototype,"hasMultipassTerrain",void 0),a([z()],G.prototype,"cullAboveGround",void 0);let $s=class extends Bt{constructor(e){super(e,new Rs),this._configuration=new G}dispose(){}getConfiguration(e,s){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=s.transparencyPassType,this._configuration.hasMultipassTerrain=s.multipassTerrain.enabled,this._configuration.cullAboveGround=s.multipassTerrain.cullAboveGround,this._configuration}intersect(e,s,i,r,n,o,h){return Ht(e,s,r,n,o,void 0,h)}requiresSlot(e,s){return s===xe.Color||s===xe.Alpha?e===(this.parameters.transparent?this.parameters.writeDepth?X.TRANSPARENT_MATERIAL:X.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL:X.OPAQUE_MATERIAL)||e===X.DRAPED_MATERIAL:!1}createGLMaterial(e){return new Vs(e)}createBufferWriter(){return new Dt(xt)}};class Vs extends bt{beginSlot(e){return this.ensureTechnique(ne,e)}}class Rs extends Kt{constructor(){super(...arguments),this.size=je(1,1),this.color1=ie(.75,.75,.75,1),this.color2=ie(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class Gs extends Wt{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=D.OccludeAndTransparent,this._geometry=null,this._size=je(1,1),this._color1=ie(1,.5,0,.5),this._color2=ie(1,1,1,.5),this.applyProps(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this._geometryChanged()}get size(){return this._size}set size(e){ut(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){Ge(e,this._color1)||(De(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){Ge(e,this._color2)||(De(this._color2,e),this._updateMaterial())}_updateMaterial(){_(this._checkerBoardMaterial)&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new $s({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){_(this._checkerBoardMaterial)&&e(this._checkerBoardMaterial)}createGeometries(e){if(k(this._geometry)||k(this._checkerBoardMaterial))return;const s=Ds;Ft(s,this.transform);const i=this._geometry,r=[],n=c();i.position.forEach(d=>{se(n,d,s),r.push(n[0],n[1],n[2])});const o=[];i.uv.forEach(d=>{o.push(d[0],d[1])});const h=new Pt([[T.POSITION,{size:3,data:r,exclusive:!0}],[T.UV0,{size:2,data:o,exclusive:!0}]],[[T.POSITION,i.triangleIndices],[T.UV0,i.triangleIndices]]);e.addGeometry(h,this._checkerBoardMaterial)}_geometryChanged(){this.recreateGeometry()}}const Ds=c();let w=class extends ge{constructor(t){super(t),this._handles=new Ie,this._params={pathLineColor:j.toUnitRGBA(Q()),pathLineWidth:3,intersectingLineColor:[1,.2,0,1],perimeterLineColor:j.toUnitRGBA(Q()),perimeterLineWidth:2,projectionLineColor:j.toUnitRGBA(Q()),projectionLineWidth:2,projectionLineStippleSize:5,areaColor1:j.toUnitRGBA(Q(.5)),areaColor2:j.toUnitRGBA(Qe(.5)),labelDistance:25},this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._pathLengthLabel=null,this._cursorSegmentLengthLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._cursorSegment=null,this._origin=c(),this._originTransform=Nt(),this._cursorPositionRenderSpace=c(),this.messages=null,this.viewData=xs,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}get visible(){return this.analysisViewData.visible}get testData(){return{labels:{area:this._areaLabel,pathLength:this._pathLengthLabel,cursorSegmentLength:this._cursorSegmentLengthLabel,perimeterLength:this._perimeterLengthLabel}}}initialize(){const{analysisViewData:t,_params:e,view:s}=this;this._path=new U({view:s,attached:!0,width:e.pathLineWidth,color:e.pathLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._intersectedPath=new U({view:s,attached:!0,width:e.pathLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._perimeter=new U({view:s,attached:!0,width:e.perimeterLineWidth,color:e.perimeterLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._intersectedPerimeter=new U({view:s,attached:!0,width:e.perimeterLineWidth,color:e.intersectingLineColor,polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._projectionLines=new U({view:s,attached:!0,width:e.projectionLineWidth,color:e.projectionLineColor,stipplePattern:zt(e.projectionLineStippleSize),polygonOffset:!0,renderOccluded:D.OccludeAndTransparent}),this._measurementArea=new Gs({view:s,attached:!0,color1:e.areaColor1,color2:e.areaColor2});const i={attached:!0,backgroundColor:Xe(.6),textColor:Ze(),view:s};this._areaLabel=new Z({...i,fontSize:I.Large}),this._pathLengthLabel=new Z({...i,fontSize:I.Small}),this._cursorSegmentLengthLabel=new Z({...i,fontSize:I.Small}),this._perimeterLengthLabel=new Z({...i,fontSize:I.Small}),this._handles.add([N(()=>[t.mode,this.visible,t.unit,t.measurementData,t.cursorPoint],()=>this._update(),le),N(()=>{var r;return(r=s.state)==null?void 0:r.camera},()=>this._updateLabels(),le),ls(()=>this._updateMessageBundle())]),this._updateMessageBundle()}destroy(){this._measurementArea=v(this._measurementArea),this._path=v(this._path),this._intersectedPath=v(this._intersectedPath),this._perimeter=v(this._perimeter),this._intersectedPerimeter=v(this._intersectedPerimeter),this._areaLabel=v(this._areaLabel),this._pathLengthLabel=v(this._pathLengthLabel),this._cursorSegmentLengthLabel=v(this._cursorSegmentLengthLabel),this._perimeterLengthLabel=v(this._perimeterLengthLabel),this._projectionLines=v(this._projectionLines),this._handles=v(this._handles),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:t},analysisViewData:e}=this;k(t)||(this._updateViewData(t,e.path,e.cursorPoint),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(t,e,s){const i=e.isValidPolygon,r=t.actualMeasurementMode==="geodesic",n=r?t.geodesicArea:t.area;let o=1;if(n){const d=this._toPreferredAreaUnit(n,this.analysisViewData.unit);o=ct(Math.sqrt(d.value)/Math.sqrt(300)),o*=Math.sqrt(nt(1,d.unit,"square-meters")),o/=t.unitNormalizer.normalizeDistance(1)}const h={validMeasurement:i,path:e,pathVersion:e.version,cursorPoint:s,measurementData:t,mode:t.actualMeasurementMode,positionsGeographic:t.positionsGeographic,positionsRenderCoords:t.positionsRenderCoords,positionsProjected:t.positionsProjectedWorldCoords,positionsFittedRenderCoords:t.positionsFittedRenderCoords,intersectingSegments:r?t.geodesicIntersectingSegments:t.intersectingSegments,triangleIndices:r?t.geodesicTriangleIndices:t.triangleIndices,fittingMode:t.fittingMode,areaCentroid:r?t.geodesicAreaCentroidRenderCoords:t.areaCentroidRenderCoords,pathLengthLabelSegmentIndex:i?0:e.numVertices-2,perimeterLengthLabelSegmentIndex:0,checkerSize:o};this._set("viewData",h)}_updateOrigin(){const t=this.viewData;ae(t.positionsRenderCoords,this._origin),kt(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(t){const e=this.viewData,s=e.path,i=this.view.renderCoordsHelper.spatialReference,r=e.mode,n=[],o=[],h=[],d=e.validMeasurement?s.numVertices:s.numVertices-1;for(let m=0;m<d;++m){const p=e[t][m],g=e[t][(m+1)%s.numVertices];let u=null;switch(r){case"euclidean":u=new me(p,g);break;case"geodesic":u=new Re(p,g,i)}e.intersectingSegments.has(m)?h.push(u):o.push(u),n.push(u)}return{all:n,nonIntersecting:o,intersecting:h}}_updatePathSegments(){const{view:{renderCoordsHelper:t},viewData:e,visible:s}=this,i=this._createSegments("positionsRenderCoords"),{cursorPoint:r,mode:n,path:o}=e,h=!o.isValidPolygon,d=t.spatialReference;if(this._cursorSegment=null,o.numVertices>0&&h&&_(r)&&t.toRenderCoords(r,this._cursorPositionRenderSpace)){const m=e.positionsRenderCoords[o.numVertices-1],p=this._cursorPositionRenderSpace;let g=null;switch(n){case"euclidean":g=new me(m,p);break;case"geodesic":g=new Re(m,p,d)}i.nonIntersecting.push(g),this._cursorSegment=g}this._path.setGeometryFromSegments(i.nonIntersecting,this._origin),this._path.visible=s,this._intersectedPath.setGeometryFromSegments(i.intersecting,this._origin),this._intersectedPath.visible=s,this._pathSegments=i.all}_updatePerimeterSegments(){const t=this.visible&&this.viewData.mode==="euclidean",e=this._createSegments("positionsFittedRenderCoords");this._perimeter.setGeometryFromSegments(e.nonIntersecting,this._origin),this._perimeter.visible=t,this._intersectedPerimeter.setGeometryFromSegments(e.intersecting,this._origin),this._intersectedPerimeter.visible=t,this._perimeterSegments=e.all}_updateArea(){const t=this.viewData;switch(t.mode){case"euclidean":this._updateAreaEuclidean(t);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(t){const e=this.visible;t.validMeasurement&&t.intersectingSegments.size===0&&t.triangleIndices?(this._measurementArea.geometry={uv:t.positionsProjected,position:t.positionsFittedRenderCoords,triangleIndices:t.triangleIndices},this._measurementArea.size=[t.checkerSize,t.checkerSize],this._measurementArea.visible=e):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const t=this.viewData,e=this.visible,s=t.path,i=t.mode;if(s.numVertices>0&&t.validMeasurement&&i==="euclidean"){const r=[];for(let n=0;n<s.numVertices;++n){const o=c();se(o,t.positionsRenderCoords[n],this._origin);const h=c();se(h,t.positionsFittedRenderCoords[n],this._origin),r.push([o,h])}this._projectionLines.geometry=r,this._projectionLines.visible=e}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:t}=this,{measurementData:e,mode:s,path:i}=t;if(!i)return;const r=!i.isValidPolygon,n=this.visible,o=this._formatAreaLabel(this.messages,s==="geodesic"?e.geodesicArea:e.area,this.analysisViewData.unit);_(o)?(this._areaLabel.geometry={type:"point",point:t.areaCentroid},this._areaLabel.text=o,this._areaLabel.visible=t.validMeasurement&&t.intersectingSegments.size===0&&n):this._areaLabel.visible=!1,this._set("areaLabel",W(o));const h=this._formatLengthLabel(this.messages,s==="geodesic"?e.geodesicPathLength:e.pathLength,this.analysisViewData.unit);if(_(h)&&t.pathLengthLabelSegmentIndex>=0&&t.pathLengthLabelSegmentIndex<this._pathSegments.length){const u=this._pathSegments[t.pathLengthLabelSegmentIndex],y=_(this._cursorSegment)?this._cursorSegment:zs;this._pathLengthLabel.distance=this._params.labelDistance,this._pathLengthLabel.geometry={type:"corner",left:u,right:y},this._pathLengthLabel.text=h,this._pathLengthLabel.visible=r&&i.numVertices>0&&n}else this._pathLengthLabel.visible=!1;const d=s==="geodesic"?t.measurementData.geodesicCursorSegmentLength:t.measurementData.cursorSegmentLength;if(_(d)){const u=this._formatLengthLabel(this.messages,d,this.analysisViewData.unit);this._cursorSegmentLengthLabel.distance=this._params.labelDistance,this._cursorSegmentLengthLabel.geometry=_(this._cursorSegment)?{type:"segment",segment:this._cursorSegment,sampleLocation:"end"}:null,this._cursorSegmentLengthLabel.anchor="bottom",this._cursorSegmentLengthLabel.text=W(u),this._cursorSegmentLengthLabel.visible=r&&d.value!==0&&n}else this._cursorSegmentLengthLabel.visible=!1;this._cursorSegmentLengthLabel.overlaps(this._pathLengthLabel)&&(this._cursorSegmentLengthLabel.visible=!1),this._pathLengthLabel.overlaps(this._areaLabel)&&(this._pathLengthLabel.visible=!1);const m=t.mode==="geodesic",p=m?e.geodesicPathLength:e.perimeterLength,g=this._formatLengthLabel(this.messages,p,this.analysisViewData.unit);if(this._set("perimeterLengthLabel",W(g)),t.validMeasurement&&t.intersectingSegments.size===0){this._perimeterLengthLabel.distance=this._params.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=W(g),this._perimeterLengthLabel.visible=!0;let u=!0;for(let y=0;y<t.path.numVertices;++y){const b=(t.perimeterLengthLabelSegmentIndex+y)%t.path.numVertices,P=m?this._pathSegments[b]:this._perimeterSegments[b];if(u=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:P,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;u=!1}this._perimeterLengthLabel.visible=u&&n}else this._perimeterLengthLabel.visible=!1}_toPreferredAreaUnit(t,e){return pt(t,this._preferredAreaUnit(t,e))}_preferredAreaUnit(t,e){switch(e){case"metric":return at(t.value,t.unit);case"imperial":return ot(t.value,t.unit);default:return e}}_preferredLengthUnit(t,e){const s=this._deriveLengthUnitFromAreaUnit(e);switch(s){case"metric":return lt(t.value,t.unit);case"imperial":return ht(t.value,t.unit);default:return s}}_deriveLengthUnitFromAreaUnit(t){switch(t){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}_formatAreaLabel(t,e,s){return t&&e&&Se(t,e,this._preferredAreaUnit(e,s))}_formatLengthLabel(t,e,s){return t&&e&&Se(t,e,this._preferredLengthUnit(e,s))}_updateMessageBundle(){this.loadingMessages=!0,ds("esri/core/t9n/Units").then(t=>{this.messages=t,this.view&&this._update()}).finally(()=>{this.loadingMessages=!1})}};var I;a([l()],w.prototype,"view",void 0),a([l()],w.prototype,"messages",void 0),a([l()],w.prototype,"analysis",void 0),a([l()],w.prototype,"viewData",void 0),a([l()],w.prototype,"analysisViewData",void 0),a([l({readOnly:!0})],w.prototype,"areaLabel",void 0),a([l({readOnly:!0})],w.prototype,"perimeterLengthLabel",void 0),a([l()],w.prototype,"loadingMessages",void 0),a([l()],w.prototype,"visible",null),w=a([re("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],w),function(t){t[t.Small=12]="Small",t[t.Large=16]="Large"}(I||(I={}));const xs={validMeasurement:!1,path:null,pathVersion:-1,cursorPoint:null,measurementData:null,mode:null,positionsGeographic:null,positionsRenderCoords:null,positionsProjected:null,positionsFittedRenderCoords:null,intersectingSegments:null,triangleIndices:null,fittingMode:null,areaCentroid:null,pathLengthLabelSegmentIndex:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null},zs=new me(c(),c());let f=class extends Ye(ge){constructor(t){super(t),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.cursorPoint=null,this.mode=he.Auto}initialize(){const{analysis:t,view:e}=this;this.path=new M({view:e,areaMeasurement:t}),this.analysisVisualization=new w({view:e,analysis:t,analysisViewData:this}),this.analysisController=new O({view:e,analysis:t,analysisViewData:this})}destroy(){this.analysisController=v(this.analysisController),this.analysisVisualization=v(this.analysisVisualization),this.path.destroy()}get updating(){var t;return!!((t=this.analysisVisualization)!=null&&t.loadingMessages)}get result(){const{measurementData:t}=this;return k(t)?{area:null,mode:null,perimeter:null}:t.actualMeasurementMode==="euclidean"?{area:t.area,perimeter:t.perimeterLength,mode:"euclidean"}:{area:t.geodesicArea,perimeter:t.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return Ee(this.analysis.unit,this._defaultUnit)}get testData(){return{visualization:this.analysisVisualization,controller:this.analysisController}}};a([l({readOnly:!0})],f.prototype,"type",void 0),a([l({constructOnly:!0,nonNullable:!0})],f.prototype,"analysis",void 0),a([l()],f.prototype,"updating",null),a([l()],f.prototype,"analysisVisualization",void 0),a([l()],f.prototype,"analysisController",void 0),a([l()],f.prototype,"result",null),a([l()],f.prototype,"measurementData",void 0),a([l()],f.prototype,"viewData",null),a([l()],f.prototype,"validMeasurement",null),a([l()],f.prototype,"path",void 0),a([l()],f.prototype,"lastDraggedVertex",void 0),a([l()],f.prototype,"cursorPoint",void 0),a([l()],f.prototype,"mode",void 0),a([l()],f.prototype,"unit",null),a([l(Je)],f.prototype,"_defaultUnit",void 0),f=a([re("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],f);const Os=f,Oi=Object.freeze(Object.defineProperty({__proto__:null,default:Os},Symbol.toStringTag,{value:"Module"}));export{Oi as A,bs as n};
