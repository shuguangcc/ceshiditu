import{e as o,y as n,n as _,m as O,t as z,c as M,X as T}from"./cast-7928d7aa.js";import{d as P,a as R}from"./HandleOwner-e1406413.js";import{r as d,t as k,o as N,b as x}from"./typedArrayUtil-a8b5b3e9.js";import{y as U,f as $}from"./promiseUtils-6684e352.js";import{l as g,U as F,h as w}from"./reactiveUtils-f41a4e00.js";import"./ensureType-cf29afa9.js";import{t as A,p as j}from"./Scheduler-8433672d.js";import{y as D,E as J}from"./elevationInfoUtils-427916a5.js";import{t as H,j as V,p as Z}from"./TileInfo-34f80a8e.js";import{o as L}from"./vec3-a020a6f6.js";import{n as q}from"./vec4f64-e407da96.js";import{bS as G,dz as W,dA as B,U as Q,dB as X}from"./index-455b69b8.js";import{r as K,a as Y}from"./queryEngineUtils-db3552dc.js";import{v as tt}from"./Polyline-bf268e7b.js";import{f as et,o as it}from"./aaBoundingRect-4a760199.js";import{b as rt}from"./TileTreeDebugger-5ce82b98.js";import{h as ot}from"./LercDecoder-73115fd2.js";import{i as nt}from"./typeUtils-eb9416d0.js";import{w as st}from"./Extent-69509002.js";import"./string-cdf077e6.js";import"./Error-653283ae.js";import"./nextTick-3ee5a785.js";import"./SimpleObservable-7dcdef1d.js";import"./ElevationInfo-ce9cacc2.js";import"./jsonMap-c1f958cf.js";import"./fieldUtils-31bfecd2.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./geometry-5a216427.js";import"./lengthUtils-d2d33f94.js";import"./unitUtils-47abac71.js";import"./Ellipsoid-89682c5e.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./Basemap-a8f7f439.js";import"./Collection-78126e82.js";import"./Evented-515b9d9c.js";import"./collectionUtils-3831b7c4.js";import"./deprecate-b9088bd3.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./loadAll-7fd968fe.js";import"./asyncUtils-62e8a185.js";import"./request-d3e98716.js";import"./Portal-8b65c9c4.js";import"./locale-30120714.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./PortalItem-aa42c739.js";import"./assets-0b172f07.js";import"./messages-be07754e.js";import"./writeUtils-067c4f82.js";import"./layerUtils-034678f6.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./mathUtils-2519596a.js";import"./vec4-790471c0.js";import"./compilerUtils-034cacb8.js";import"./enumeration-3c281341.js";import"./opacityUtils-243aae26.js";import"./CollectionFlattener-3dd1f479.js";import"./TablesMixin-e7a6aab1.js";import"./Layer-f0696768.js";import"./Identifiable-aa6d459d.js";import"./Graphic-b46e2684.js";import"./PopupTemplate-6eb885db.js";import"./Clonable-ba795b08.js";import"./number-347a3a44.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./screenUtils-410d12c0.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./jsonUtils-03c4af61.js";import"./Cyclical-b66238c6.js";import"./workers-898a7c4c.js";import"./Connection-a681777e.js";import"./Queue-3a0c055d.js";import"./intl-f1e98361.js";import"./projection-d7b57a6c.js";import"./mat4-44a0988f.js";import"./zscale-1e1fc911.js";import"./widget-f7489a3f.js";import"./uuid-73213768.js";import"./dom-5b7af1bf.js";import"./byteSizeEstimations-f0cab514.js";import"./executeQueryJSON-bcd96e1a.js";import"./normalizeUtils-ee4bf39f.js";import"./query-922e6fbf.js";import"./pbfQueryUtils-72f9b45b.js";import"./pbf-e1a6c35b.js";import"./OptimizedFeature-3de538c1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-d9d8ef40.js";import"./FeatureSet-0573546e.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./Query-ff8c2cfb.js";import"./TimeExtent-744afd75.js";import"./RelationshipQuery-db5fcd0c.js";import"./LegendOptions-e65e7a9c.js";import"./utils-725f8b4e.js";import"./BlendLayer-d8293c8d.js";import"./parser-2b40deea.js";import"./mat4f32-77b3d8ac.js";import"./ItemCache-ee28c7ba.js";import"./MemCache-4b976a8b.js";import"./cimSymbolUtils-2e4dde89.js";import"./utils-c81a5c52.js";import"./jsonUtils-c56f8821.js";import"./UniqueValueRenderer-103ec66d.js";import"./diffUtils-1ac65748.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./DictionaryLoader-2cf5144e.js";import"./LRUCache-14115d91.js";import"./heatmapUtils-84e8c43b.js";import"./featureConversionUtils-01cdde8a.js";import"./TopFeaturesQuery-785f5453.js";import"./FeatureLayer-a9f3e6ec.js";import"./MultiOriginJSONSupport-27362d57.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./FeatureLayerBase-aebdf2da.js";import"./HeightModelInfo-22ad72d7.js";import"./arcgisLayerUrl-0b2b7691.js";import"./OperationalLayer-24e6fa34.js";import"./editsZScale-2015e7db.js";import"./APIKeyMixin-34d76a46.js";import"./ArcGISService-ea748edf.js";import"./CustomParametersMixin-807d2055.js";import"./EditBusLayer-40671d1a.js";import"./FeatureReductionLayer-4077b2ae.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-e7edf19c.js";import"./PortalLayer-f1a64f99.js";import"./RefreshableLayer-1c078c47.js";import"./ScaleRangeLayer-271178b7.js";import"./TemporalLayer-39c07299.js";import"./TimeInfo-c89d0ef4.js";import"./FeatureTemplate-746d033e.js";import"./FeatureType-c83c5f49.js";import"./fieldProperties-7547b373.js";import"./FieldsIndex-aa6dd3fa.js";import"./versionUtils-92993d41.js";import"./styleUtils-da81b13f.js";import"./popupUtils-07fe66a7.js";import"./colorUtils-82440b70.js";import"./mat2d-d0b91e3e.js";import"./GraphicsLayer-10573c27.js";import"./ViewingMode-5d7d590b.js";import"./enums-0fc02184.js";import"./vec2-2cef68de.js";import"./vec2f64-30dc1443.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./TileStrategy-4189758f.js";import"./TileStore-787dbea4.js";import"./TileKey-0750ad58.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./capabilities-3636c6a4.js";import"./context-util-1e3c8cfc.js";import"./sphere-4f5e644f.js";import"./mat3f64-c6305894.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./lineSegment-e6f72ff2.js";import"./plane-45609588.js";import"./scaleUtils-b32a50d8.js";import"./ElevationSamplerData-7decf898.js";import"./PhysicallyBasedRendering.glsl-a986c926.js";import"./View.glsl-8b12b8c2.js";import"./ShaderBuilder-93e8045e.js";import"./FloatPassUniform-d2dfc562.js";import"./Float4PassUniform-3a47b7b3.js";import"./RgbaFloatEncoding.glsl-6036ca34.js";import"./Texture2DPassUniform-6e8ae673.js";import"./vec3f32-c9aa289f.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-22924c6f.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-0c0898f0.js";import"./ReadLinearDepth.glsl-7ff30f7d.js";import"./WaterSurface.glsl-fc8a5726.js";import"./ForwardLinearDepth.glsl-36f9eb3b.js";import"./Matrix3PassUniform-da8eddae.js";import"./Slice.glsl-a612de15.js";import"./Transform.glsl-f15542a7.js";import"./OutputHighlight.glsl-7364b03b.js";import"./MultipassTerrainTest.glsl-e79d40de.js";import"./NormalUtils.glsl-a59958d7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-cd195b0e.js";import"./EvaluateSceneLighting.glsl-3bbc6edf.js";import"./VisualVariablePassParameters-5807c7dc.js";import"./enums-64ab819c.js";import"./VertexElementDescriptor-2925c6af.js";import"./FramebufferObject-50e1b68f.js";import"./Texture-e79b14e7.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-c6f142fc.js";import"./ScreenSpacePass-00f8c8a4.js";import"./SSAO.glsl-6f3b4065.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-80cf9a21.js";import"./VerticalOffset.glsl-86460edb.js";import"./objectResourceUtils-ef6e3cdf.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-646ba1de.js";import"./vec33-ce3aa99b.js";import"./DefaultMaterial_COLOR_GAMMA-9831d979.js";import"./types-e1c0a5bf.js";import"./Version-9baeb7ac.js";import"./quat-5b263584.js";import"./Texture-bbae5d9d.js";import"./TextureOnly.glsl-18701a3b.js";import"./InterleavedLayout-5e9cf734.js";import"./MixExternalColor.glsl-25f0049c.js";import"./symbolColorUtils-604c5345.js";import"./ObjectAndLayerIdColor.glsl-73c19386.js";import"./OutputDepth.glsl-179f1d8f.js";import"./VisualVariables.glsl-b8290512.js";import"./DiscardOrAdjustAlphaBlend.glsl-5f837994.js";import"./Normals.glsl-90e28525.js";import"./DefaultMaterial.glsl-b4f4cbc5.js";import"./VertexColor.glsl-db21b96c.js";import"./DefaultTechniqueConfiguration-e8962072.js";import"./RealisticTree.glsl-2b30ed32.js";import"./edgeProcessing-3ca548e1.js";import"./deduplicate-b0bc48cc.js";import"./projection-aa2a8986.js";import"./Octree-1a841545.js";import"./HUDMaterial.glsl-4bf3c7df.js";import"./sdfPrimitives-a24e9cb2.js";import"./floatRGBA-fa8308d2.js";import"./dehydratedFeatures-4eeb381a.js";import"./quantizationUtils-33aba427.js";import"./labelFormatUtils-4d730eaa.js";import"./I3SUtil-3ffd3baa.js";import"./I3SBinaryReader-3d2c2faa.js";import"./LineCallout.glsl-a0056465.js";import"./earcut-58237617.js";import"./QueryEngineResult-665bf7fb.js";import"./WhereClause-2b5b05b2.js";import"./utils-30a9a7e0.js";import"./generateRendererUtils-a996108f.js";import"./utils-1f4fcfec.js";import"./json-48e3ea08.js";import"./MeshComponent-f50df6af.js";import"./MarkerSizing.glsl-c6fa192a.js";import"./RibbonLine.glsl-2a3b4d4e.js";import"./LineStipple.glsl-de782d6a.js";import"./callExpressionWithFeature-a7532499.js";import"./LineMarker.glsl-8f444621.js";import"./NativeLine.glsl-cdbbf172.js";import"./Path.glsl-60b36878.js";import"./ColorMaterial.glsl-8310ffb3.js";import"./Pattern.glsl-d3388745.js";import"./EffectView-d3bf37ed.js";import"./config-1337d16e.js";import"./workerHelper-c6d4a8cb.js";import"./Subtype-5b01b21f.js";import"./datetime-4f774298.js";import"./ExportImageParameters-f328a234.js";import"./sublayerUtils-ba7f61bc.js";import"./webStyleSymbolUtils-55ed91cd.js";import"./enums-4b2a86a0.js";import"./VertexSnappingCandidate-6fb04b2b.js";function S(t,e){return W(e.extent,C),B(C,L(at,t.x,t.y,0))}const C=G(),at=q();let h=class extends O{constructor(e){super(e),this.pointOfInterest=null}get tiles(){const e=this.tilesCoveringView,r=d(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort((a,i)=>S(r,a)-S(r,i)),e}_scaleEnabled(){return Q(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||k(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:r}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:a}=r,i=[];for(const{row:s,colFrom:p,colTo:l}of e)for(let v=p;v<=l;v++){const y=r.normalizeCol(v),I=new H(null,a,s,y);this.tileInfo.updateTileInfo(I),i.push(I)}return i}get tileInfo(){var e;return((e=this.view.featuresTilingScheme)==null?void 0:e.tileInfo)??null}get tileSize(){return d(this.tileInfo)?this.tileInfo.size[0]:256}initialize(){this.addHandles(g(()=>{var e,r;return(r=(e=this.view)==null?void 0:e.state)==null?void 0:r.viewpoint},()=>this.notifyChange("tilesCoveringView"),F))}};o([n({readOnly:!0})],h.prototype,"tiles",null),o([n({readOnly:!0})],h.prototype,"_scaleEnabled",null),o([n({readOnly:!0})],h.prototype,"tilesCoveringView",null),o([n({readOnly:!0})],h.prototype,"tileInfo",null),o([n({readOnly:!0})],h.prototype,"tileSize",null),o([n({constructOnly:!0})],h.prototype,"view",void 0),o([n({constructOnly:!0})],h.prototype,"layer",void 0),o([n()],h.prototype,"pointOfInterest",void 0),h=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],h);let c=class extends P{constructor(t){super(t),this.pointOfInterest=null}get tiles(){const t=this.tilesCoveringView,e=this._effectivePointOfInterest;if(d(e)){const r=t.map(a=>S(e,a));for(let a=1;a<r.length;a++)if(r[a-1]>r[a])return t.sort((i,s)=>S(e,i)-S(e,s)),t.slice()}return t}get tilesCoveringView(){var t,e;return this._filterTiles((e=(t=this.view.featureTiles)==null?void 0:t.tiles)==null?void 0:e.toArray()).map(pt)}get tileInfo(){var t;return((t=this.view.featureTiles)==null?void 0:t.tilingScheme.toTileInfo())??null}get tileSize(){var t;return((t=this.view.featureTiles)==null?void 0:t.tileSize)??256}get _effectivePointOfInterest(){var e;const t=this.pointOfInterest;return d(t)?t:(e=this.view.pointsOfInterest)==null?void 0:e.focus.location}initialize(){this.handles.add(g(()=>this.view.featureTiles,t=>{this.handles.remove(E),t&&this.handles.add(t.addClient(),E)},w))}_filterTiles(t){return k(t)?[]:t.filter(e=>Math.abs(e.measures.screenRect[3]-e.measures.screenRect[1])>lt&&e.measures.visibility===X.VISIBLE_ON_SURFACE)}};function pt({lij:[t,e,r],extent:a}){return new H(`${t}/${e}/${r}`,t,e,r,a)}o([n({readOnly:!0})],c.prototype,"tiles",null),o([n({readOnly:!0})],c.prototype,"tilesCoveringView",null),o([n({readOnly:!0})],c.prototype,"tileInfo",null),o([n({readOnly:!0})],c.prototype,"tileSize",null),o([n({constructOnly:!0})],c.prototype,"view",void 0),o([n()],c.prototype,"pointOfInterest",void 0),o([n()],c.prototype,"_effectivePointOfInterest",null),c=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],c);const lt=50,E="feature-tiles";let b=class extends rt{constructor(t){super(t),this._handles=new z}initialize(){const t=setInterval(()=>this._fetchDebugInfo(),2e3);this._handles.add(M(()=>clearInterval(t)))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const t=new Map,e=new Map;this._debugInfo.storedTiles.forEach(i=>{t.set(i.data.id,i.featureCount)}),this._debugInfo.pendingTiles.forEach(i=>{t.set(i.data.id,i.featureCount),e.set(i.data.id,i.state)});const r=i=>{const s=e.get(i),p=t.get(i)??"?";return s?`${s}:${p}
${i}`:`store:${p}
${i}`},a=new Map;return this._debugInfo.storedTiles.forEach(i=>{a.set(i.data.id,i.data)}),this._debugInfo.pendingTiles.forEach(i=>{a.set(i.data.id,i.data)}),Array.from(a.values()).map(i=>({lij:[i.level,i.row,i.col],geometry:tt.fromExtent(et(i.extent,this.view.spatialReference)),label:r(i.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(t=>{this._debugInfo=t,this.update()})}};o([n({constructOnly:!0})],b.prototype,"handle",void 0),b=o([_("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],b);let m=class extends P{constructor(t){super(t),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async e=>{const r=[];for(const{points:a}of e)for(const{z:i}of a)r.push(i);return{elevations:r,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new mt(this.schedule,{alignElevation:async(t,{signal:e})=>({result:await this.elevationAlignPointsInFeatures(t.points,e)}),getSymbologyCandidates:async(t,{signal:e})=>({result:await this.queryForSymbologySnapping(t,e)})}),this.handles.add([this._workerHandle.on("notify-updating",({updating:t})=>this._workerHandleUpdating=t),this._workerHandle.on("notify-availability",({availability:t})=>this._set("availability",t))])}async setup(t,e){var i;const r=this._serviceInfoFromLayer(t.layer);if(k(r))return;const a={configuration:this._convertConfiguration(t.configuration),serviceInfo:r,spatialReference:t.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(i=t.layer.elevationInfo)==null?void 0:i.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async configure(t,e){const r=this._convertConfiguration(t);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",r,e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async refresh(t){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async fetchCandidates(t,e){const r={distance:t.distance,point:t.coordinateHelper.vectorToPoint(t.point).toJSON(),types:t.types,filter:d(t.filter)?t.filter.toJSON():null};return this._workerHandle.invoke(r,e)}async updateTiles(t,e){const r={tiles:t.tiles,tileInfo:d(t.tileInfo)?t.tileInfo.toJSON():null,tileSize:t.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",r,e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async applyEdits(t,e){var p,l,v;const r=this._editId++,a={id:r};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",a,e));const i=await this.updatingHandles.addPromise(U(t.result,e)),s={id:r,edits:{addedFeatures:((p=i.addedFeatures)==null?void 0:p.map(({objectId:y})=>y).filter(d))??[],deletedFeatures:((l=i.deletedFeatures)==null?void 0:l.map(({objectId:y,globalId:I})=>({objectId:y,globalId:I})))??[],updatedFeatures:((v=i.updatedFeatures)==null?void 0:v.map(({objectId:y})=>y).filter(d))??[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",s,e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}getDebugInfo(t){return this._workerHandle.invokeMethod("getDebugInfo",{},t)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(t){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",t)}_convertConfiguration(t){return{filter:d(t.filter)?t.filter.toJSON():null,customParameters:t.customParameters,viewType:t.viewType}}_serviceInfoFromLayer(t){var e,r;return t.geometryType==="multipatch"||t.geometryType==="mesh"?null:{url:((e=t.parsedUrl)==null?void 0:e.path)??"",fields:t.fields.map(a=>a.toJSON()),geometryType:nt.toJSON(t.geometryType),capabilities:t.capabilities,objectIdField:t.objectIdField,globalIdField:t.globalIdField,spatialReference:t.spatialReference.toJSON(),timeInfo:(r=t.timeInfo)==null?void 0:r.toJSON()}}};o([n({constructOnly:!0})],m.prototype,"schedule",void 0),o([n({constructOnly:!0})],m.prototype,"hasZ",void 0),o([n({constructOnly:!0})],m.prototype,"elevationAlignPointsInFeatures",void 0),o([n({constructOnly:!0})],m.prototype,"queryForSymbologySnapping",void 0),o([n({readOnly:!0})],m.prototype,"updating",null),o([n({readOnly:!0})],m.prototype,"availability",void 0),o([n()],m.prototype,"_workerHandleUpdating",void 0),m=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],m);class mt extends ot{constructor(e,r){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:r})}}let f=class extends O{constructor(t){super(t),this.pointOfInterest=null}get tiles(){return[new H("0/0/0",0,0,0,it(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new V({origin:new st({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new Z({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}};o([n({readOnly:!0})],f.prototype,"tiles",null),o([n({readOnly:!0})],f.prototype,"tileInfo",null),o([n({readOnly:!0})],f.prototype,"tileSize",null),o([n({constructOnly:!0})],f.prototype,"layer",void 0),o([n()],f.prototype,"pointOfInterest",void 0),f=o([_("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],f);let u=class extends R(O){constructor(t){super(t)}get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){return this._workerHandle.updating||this.updatingHandles.updating}get configuration(){const{view:t}=this,e=d(t)?t.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:e}}get availability(){return this._workerHandle.availability}get _layer(){return this.layerSource.layer}initialize(){const t=this.view;if(d(t))switch(t.type){case"2d":this._tilesOfInterest=new h({view:t,layer:this._layer}),this._workerHandle=new m;break;case"3d":{const{resourceController:e}=t,r=this._layer,a=t.whenLayerView(r);this._tilesOfInterest=new c({view:t}),this._workerHandle=new m({schedule:s=>e.schedule(s),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(s,p)=>{const l=await a;return $(p),l.elevationAlignPointsInFeatures(s,p)},queryForSymbologySnapping:async(s,p)=>{const l=await a;return $(p),l.queryForSymbologySnapping(s,p)}});const i=new A(null);a.then(s=>i.set(s)),this.addHandles([t.elevationProvider.on("elevation-change",({context:s})=>{var l;const{elevationInfo:p}=r;D(s,p)&&((l=this._workerHandle)==null||l.notifyElevationSourceChange())}),g(()=>r.elevationInfo,()=>{var s;return(s=this._workerHandle)==null?void 0:s.notifyElevationSourceChange()},w),g(()=>N(i.get(),({processor:s})=>s==null?void 0:s.renderer),()=>{var s;return(s=this._workerHandle)==null?void 0:s.notifySymbologyChange()},w),g(()=>x(i.get(),!1,s=>s.symbologySnappingSupported),s=>{var p;return(p=this._workerHandle)==null?void 0:p.setSymbologySnappingSupported(s)},w)]);break}}else this._tilesOfInterest=new f({layer:this._layer}),this._workerHandle=new m;this.handles.add([T(this._workerHandle)]),this._workerHandle.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null),this.updatingHandles.add(()=>this._updateTilesParameters,()=>this._workerHandle.updateTiles(this._updateTilesParameters,null),w),this.handles.add([g(()=>this.configuration,e=>this._workerHandle.configure(e,null),F)]),d(t)&&this.handles.add(g(()=>j.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,e=>{e&&!this._debug?(this._debug=new b({view:t,handle:this._workerHandle}),this.handles.add(T(this._debug),"debug")):!e&&this._debug&&this.handles.remove("debug")},w)),this.handles.add(this.layerSource.layer.on("apply-edits",e=>{this._workerHandle.applyEdits(e,null)}))}refresh(){this._workerHandle.refresh(null)}async fetchCandidates(t,e){const{coordinateHelper:r,elevationInfo:a,point:i}=t;this._tilesOfInterest.pointOfInterest=r.vectorToPoint(i);const s=r.hasZ()?J:a,p=this._getGroundElevation;return(await this._workerHandle.fetchCandidates({...t},e)).candidates.map(l=>K(l,r,s,p))}getDebugInfo(t){return this._workerHandle.getDebugInfo(t)}get _getGroundElevation(){return Y(this.view)}};o([n({constructOnly:!0})],u.prototype,"spatialReference",void 0),o([n({constructOnly:!0})],u.prototype,"layerSource",void 0),o([n({constructOnly:!0})],u.prototype,"view",void 0),o([n()],u.prototype,"_tilesOfInterest",void 0),o([n({readOnly:!0})],u.prototype,"_updateTilesParameters",null),o([n({readOnly:!0})],u.prototype,"updating",null),o([n({readOnly:!0})],u.prototype,"configuration",null),o([n({readOnly:!0})],u.prototype,"availability",null),o([n()],u.prototype,"_getGroundElevation",null),u=o([_("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],u);export{u as FeatureServiceSnappingSource};
