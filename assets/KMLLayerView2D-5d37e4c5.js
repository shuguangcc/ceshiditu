import{e as f,y as x,n as O}from"./cast-7928d7aa.js";import{U as z,a as F,g as $,h as W}from"./request-d3e98716.js";import{j as Y}from"./Collection-78126e82.js";import{r as S,t as H}from"./typedArrayUtil-a8b5b3e9.js";import{l as K}from"./reactiveUtils-f41a4e00.js";import"./ensureType-cf29afa9.js";import{w as U,a as A,k as L}from"./Extent-69509002.js";import{r as T,t as J}from"./projection-d7b57a6c.js";import{b as C,g as Q,d as X}from"./kmlUtils-8fb30744.js";import{f as Z}from"./normalizeUtils-ee4bf39f.js";import{i as I}from"./GraphicsLayer-10573c27.js";import{S as tt,T as it,R as rt}from"./Bitmap-c332c5e6.js";import{a as et}from"./BitmapContainer-e31790f9.js";import{y as ot}from"./LayerView2D-9c021b91.js";import{i as D}from"./GraphicContainer-66edeaa1.js";import{o as R}from"./BaseGraphicContainer-aa7dd916.js";import{u as at}from"./LayerView-b83ced89.js";import{C as pt,$ as st}from"./rasterProjectionHelper-967d22a7.js";import{a as mt}from"./WGLContainer-14075e1a.js";import{o as nt}from"./MaterialPrograms-42724b3b.js";import{P as M,G as P,D as j,L as q,Y as lt,V as ht,f as G}from"./enums-64ab819c.js";import{x as ct}from"./FramebufferObject-50e1b68f.js";import{c as dt}from"./EffectView-d3bf37ed.js";import{y as gt}from"./index-455b69b8.js";import{E as N}from"./Texture-e79b14e7.js";import"./string-cdf077e6.js";import"./Error-653283ae.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-6684e352.js";import"./preload-helper-41c905a7.js";import"./Evented-515b9d9c.js";import"./SimpleObservable-7dcdef1d.js";import"./Ellipsoid-89682c5e.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./unitUtils-47abac71.js";import"./jsonMap-c1f958cf.js";import"./mat4-44a0988f.js";import"./Polyline-bf268e7b.js";import"./assets-0b172f07.js";import"./aaBoundingRect-4a760199.js";import"./zscale-1e1fc911.js";import"./PopupTemplate-6eb885db.js";import"./Clonable-ba795b08.js";import"./fieldUtils-31bfecd2.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./geometry-5a216427.js";import"./typeUtils-eb9416d0.js";import"./enumeration-3c281341.js";import"./number-347a3a44.js";import"./locale-30120714.js";import"./Identifiable-aa6d459d.js";import"./aaBoundingBox-fc742a4e.js";import"./jsonUtils-c56f8821.js";import"./UniqueValueRenderer-103ec66d.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./collectionUtils-3831b7c4.js";import"./Portal-8b65c9c4.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./LegendOptions-e65e7a9c.js";import"./diffUtils-1ac65748.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./Graphic-b46e2684.js";import"./jsonUtils-03c4af61.js";import"./compilerUtils-034cacb8.js";import"./lengthUtils-d2d33f94.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./DictionaryLoader-2cf5144e.js";import"./LRUCache-14115d91.js";import"./MemCache-4b976a8b.js";import"./deprecate-b9088bd3.js";import"./heatmapUtils-84e8c43b.js";import"./vec4f64-e407da96.js";import"./FeatureSet-0573546e.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./HandleOwner-e1406413.js";import"./Layer-f0696768.js";import"./BlendLayer-d8293c8d.js";import"./parser-2b40deea.js";import"./mat4f32-77b3d8ac.js";import"./ScaleRangeLayer-271178b7.js";import"./ElevationInfo-ce9cacc2.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./vec2f32-461e65a9.js";import"./context-util-1e3c8cfc.js";import"./enums-4ca4641f.js";import"./utils-26560131.js";import"./MaterialKey-406a59ab.js";import"./alignmentUtils-ae955d28.js";import"./Utils-b2b4cf0c.js";import"./number-954e4ab6.js";import"./enums-4b2a86a0.js";import"./VertexElementDescriptor-2925c6af.js";import"./definitions-2d0dd0cd.js";import"./cimAnalyzer-721530a4.js";import"./fontUtils-b94d5e06.js";import"./BidiEngine-836b7ef6.js";import"./utils-c81a5c52.js";import"./mat2d-d0b91e3e.js";import"./vec2-2cef68de.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-a7532499.js";import"./quantizationUtils-33aba427.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-fa8308d2.js";import"./normalizeUtilsSync-9c84b89e.js";import"./utils-1f4fcfec.js";import"./featureConversionUtils-01cdde8a.js";import"./OptimizedFeature-3de538c1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./json-48e3ea08.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./FeatureContainer-f14037ae.js";import"./Queue-3a0c055d.js";import"./visualVariablesUtils-8295a400.js";import"./visualVariablesUtils-496ec144.js";import"./TileContainer-07bccb79.js";import"./capabilities-3636c6a4.js";import"./Matcher-1892b043.js";import"./TileStrategy-4189758f.js";import"./TileStore-787dbea4.js";import"./TileKey-0750ad58.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-ff8c2cfb.js";import"./TimeExtent-744afd75.js";import"./tileUtils-caf0c827.js";import"./TileClipper-5dae42c4.js";import"./Geometry-daada628.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./ExpandedCIM-676cf2ac.js";import"./devEnvironmentUtils-5002a058.js";import"./schemaUtils-615a0d3f.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./createSymbolSchema-41fdd7db.js";import"./rendererUtils-3275688e.js";import"./FeatureReductionLayer-4077b2ae.js";import"./OperationalLayer-24e6fa34.js";import"./util-38c30a14.js";import"./ComputedAttributeStorage-58146ac4.js";import"./FeatureSetReader-2d27cc52.js";import"./centroid-13995b22.js";import"./FieldsIndex-aa6dd3fa.js";import"./GraphicsView-935faaa9.js";import"./vec3f32-c9aa289f.js";import"./WGLBrushVTLSymbol-dcfd88b4.js";import"./StyleDefinition-7d58136b.js";import"./config-1337d16e.js";import"./pixelUtils-c27b13a1.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-afbd57f8.js";import"./heatmapTextureUtils-d1d96768.js";import"./vec2f64-30dc1443.js";import"./programUtils-f035fe8a.js";import"./Basemap-a8f7f439.js";import"./loadAll-7fd968fe.js";import"./asyncUtils-62e8a185.js";import"./PortalItem-aa42c739.js";import"./messages-be07754e.js";import"./writeUtils-067c4f82.js";import"./layerUtils-034678f6.js";import"./CollectionFlattener-3dd1f479.js";import"./TablesMixin-e7a6aab1.js";import"./Cyclical-b66238c6.js";import"./workers-898a7c4c.js";import"./Connection-a681777e.js";import"./intl-f1e98361.js";import"./TileInfo-34f80a8e.js";import"./widget-f7489a3f.js";import"./uuid-73213768.js";import"./dom-5b7af1bf.js";import"./byteSizeEstimations-f0cab514.js";import"./executeQueryJSON-bcd96e1a.js";import"./query-922e6fbf.js";import"./pbfQueryUtils-72f9b45b.js";import"./pbf-e1a6c35b.js";import"./queryZScale-d9d8ef40.js";import"./RelationshipQuery-db5fcd0c.js";import"./utils-725f8b4e.js";import"./ItemCache-ee28c7ba.js";import"./cimSymbolUtils-2e4dde89.js";import"./TopFeaturesQuery-785f5453.js";import"./FeatureLayer-a9f3e6ec.js";import"./MultiOriginJSONSupport-27362d57.js";import"./FeatureLayerBase-aebdf2da.js";import"./HeightModelInfo-22ad72d7.js";import"./arcgisLayerUrl-0b2b7691.js";import"./editsZScale-2015e7db.js";import"./APIKeyMixin-34d76a46.js";import"./ArcGISService-ea748edf.js";import"./CustomParametersMixin-807d2055.js";import"./EditBusLayer-40671d1a.js";import"./OrderedLayer-e7edf19c.js";import"./PortalLayer-f1a64f99.js";import"./RefreshableLayer-1c078c47.js";import"./TemporalLayer-39c07299.js";import"./TimeInfo-c89d0ef4.js";import"./FeatureTemplate-746d033e.js";import"./FeatureType-c83c5f49.js";import"./fieldProperties-7547b373.js";import"./versionUtils-92993d41.js";import"./styleUtils-da81b13f.js";import"./popupUtils-07fe66a7.js";import"./colorUtils-82440b70.js";import"./Scheduler-8433672d.js";import"./ViewingMode-5d7d590b.js";import"./enums-0fc02184.js";import"./sphere-4f5e644f.js";import"./mat3f64-c6305894.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./lineSegment-e6f72ff2.js";import"./plane-45609588.js";import"./scaleUtils-b32a50d8.js";import"./ElevationSamplerData-7decf898.js";import"./PhysicallyBasedRendering.glsl-a986c926.js";import"./View.glsl-8b12b8c2.js";import"./ShaderBuilder-93e8045e.js";import"./FloatPassUniform-d2dfc562.js";import"./Float4PassUniform-3a47b7b3.js";import"./RgbaFloatEncoding.glsl-6036ca34.js";import"./Texture2DPassUniform-6e8ae673.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-22924c6f.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-0c0898f0.js";import"./ReadLinearDepth.glsl-7ff30f7d.js";import"./WaterSurface.glsl-fc8a5726.js";import"./ForwardLinearDepth.glsl-36f9eb3b.js";import"./Matrix3PassUniform-da8eddae.js";import"./Slice.glsl-a612de15.js";import"./Transform.glsl-f15542a7.js";import"./OutputHighlight.glsl-7364b03b.js";import"./MultipassTerrainTest.glsl-e79d40de.js";import"./NormalUtils.glsl-a59958d7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-cd195b0e.js";import"./EvaluateSceneLighting.glsl-3bbc6edf.js";import"./VisualVariablePassParameters-5807c7dc.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-c6f142fc.js";import"./ScreenSpacePass-00f8c8a4.js";import"./SSAO.glsl-6f3b4065.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-80cf9a21.js";import"./VerticalOffset.glsl-86460edb.js";import"./objectResourceUtils-ef6e3cdf.js";import"./BufferView-646ba1de.js";import"./vec33-ce3aa99b.js";import"./DefaultMaterial_COLOR_GAMMA-9831d979.js";import"./types-e1c0a5bf.js";import"./Version-9baeb7ac.js";import"./quat-5b263584.js";import"./Texture-bbae5d9d.js";import"./TextureOnly.glsl-18701a3b.js";import"./InterleavedLayout-5e9cf734.js";import"./MixExternalColor.glsl-25f0049c.js";import"./symbolColorUtils-604c5345.js";import"./ObjectAndLayerIdColor.glsl-73c19386.js";import"./OutputDepth.glsl-179f1d8f.js";import"./VisualVariables.glsl-b8290512.js";import"./DiscardOrAdjustAlphaBlend.glsl-5f837994.js";import"./Normals.glsl-90e28525.js";import"./DefaultMaterial.glsl-b4f4cbc5.js";import"./VertexColor.glsl-db21b96c.js";import"./DefaultTechniqueConfiguration-e8962072.js";import"./RealisticTree.glsl-2b30ed32.js";import"./edgeProcessing-3ca548e1.js";import"./deduplicate-b0bc48cc.js";import"./projection-aa2a8986.js";import"./Octree-1a841545.js";import"./HUDMaterial.glsl-4bf3c7df.js";import"./sdfPrimitives-a24e9cb2.js";import"./dehydratedFeatures-4eeb381a.js";import"./labelFormatUtils-4d730eaa.js";import"./I3SUtil-3ffd3baa.js";import"./I3SBinaryReader-3d2c2faa.js";import"./LineCallout.glsl-a0056465.js";import"./QueryEngineResult-665bf7fb.js";import"./WhereClause-2b5b05b2.js";import"./utils-30a9a7e0.js";import"./generateRendererUtils-a996108f.js";import"./MeshComponent-f50df6af.js";import"./MarkerSizing.glsl-c6fa192a.js";import"./RibbonLine.glsl-2a3b4d4e.js";import"./LineStipple.glsl-de782d6a.js";import"./LineMarker.glsl-8f444621.js";import"./NativeLine.glsl-cdbbf172.js";import"./Path.glsl-60b36878.js";import"./ColorMaterial.glsl-8310ffb3.js";import"./Pattern.glsl-d3388745.js";import"./LercDecoder-73115fd2.js";import"./workerHelper-c6d4a8cb.js";import"./Subtype-5b01b21f.js";import"./datetime-4f774298.js";import"./elevationInfoUtils-427916a5.js";import"./ExportImageParameters-f328a234.js";import"./sublayerUtils-ba7f61bc.js";import"./webStyleSymbolUtils-55ed91cd.js";class l{constructor(t){if(t)this._ownsRctx=!1,this._rctx=t;else{if(l._instance)return l._instanceRefCount++,l._instance;l._instanceRefCount=1,l._instance=this,this._ownsRctx=!0;const r=document.createElement("canvas").getContext("webgl");r.getExtension("OES_texture_float"),this._rctx=new gt(r,{})}const e={applyProjection:!0,bilinear:!1,bicubic:!1},a=nt("raster/reproject","raster/reproject",new Map([["a_position",0]]),e);this._program=this._rctx.programCache.acquire(a.shaders.vertexShader,a.shaders.fragmentShader,a.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new mt(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,e,a=!1){const r=T(t.extent,e),o=new U({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:p,y:h}=pt(o,e,t.extent);let n=(p+h)/2;const s=Math.round((r.xmax-r.xmin)/n),c=Math.round((r.ymax-r.ymin)/n);n=(r.width/s+r.height/c)/2;const b=new U({x:n,y:n,spatialReference:r.spatialReference}),w=st({projectedExtent:r,srcBufferExtent:t.extent,pixelSize:b,hasWrapAround:!0,spacing:[16,16]}),y=dt(this._rctx,w),g=new N(this._rctx,{width:s,height:c,pixelFormat:M.RGBA,dataType:P.UNSIGNED_BYTE,wrapMode:j.CLAMP_TO_EDGE,samplingMode:q.LINEAR,hasMipmap:!1}),m=new ct(this._rctx,{colorTarget:lt.TEXTURE,depthStencilTarget:ht.NONE,width:s,height:c},g);if(this._rctx.bindFramebuffer(m),this._rctx.setViewport(0,0,s,c),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(y,1),this._quad.bind(),this._program.setUniform2f("u_srcImageSize",t.texture.descriptor.width,t.texture.descriptor.height),this._program.setUniform2fv("u_transformSpacing",w.spacing),this._program.setUniform2fv("u_transformGridSize",w.size),this._program.setUniform2f("u_targetImageSize",s,c),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),y.dispose(),a){const u=new ImageData(m.descriptor.width,m.descriptor.height);return m.readPixels(0,0,m.descriptor.width,m.descriptor.height,M.RGBA,P.UNSIGNED_BYTE,u.data),m.detachColorTexture(G.COLOR_ATTACHMENT0),m.dispose(),{texture:g,extent:r,imageData:u}}return m.detachColorTexture(G.COLOR_ATTACHMENT0),m.dispose(),{texture:g,extent:r}}reprojectBitmapData(t,e){const a=tt(t.bitmapData)?it(t.bitmapData):t.bitmapData,r=new N(this._rctx,{width:t.bitmapData.width,height:t.bitmapData.height,pixelFormat:M.RGBA,dataType:P.UNSIGNED_BYTE,wrapMode:j.CLAMP_TO_EDGE,samplingMode:q.LINEAR,hasMipmap:!1},a),o=this.reprojectTexture({texture:r,extent:t.extent},e,!0);o.texture.dispose();const p=document.createElement("canvas");return p.width=o.imageData.width,p.height=o.imageData.height,p.getContext("2d").putImageData(o.imageData,0,0),{bitmapData:p,extent:o.extent}}async loadAndReprojectBitmapData(t,e,a){const r=(await z(t,{responseType:"image"})).data,o=document.createElement("canvas");o.width=r.width,o.height=r.height;const p=o.getContext("2d");p.drawImage(r,0,0);const h=p.getImageData(0,0,o.width,o.height);if(e.spatialReference.equals(a))return{bitmapData:h,extent:e};const n=this.reprojectBitmapData({bitmapData:h,extent:e},a);return{bitmapData:n.bitmapData,extent:n.extent}}destroy(){this._ownsRctx?(l._instanceRefCount--,l._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),l._instance=null)):(this._quad.dispose(),this._program.dispose())}}l._instanceRefCount=0;class B{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let d=class extends ot(at){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new et,this._kmlVisualData=new B,this.allVisiblePoints=new I,this.allVisiblePolylines=new I,this.allVisiblePolygons=new I,this.allVisibleMapImages=new Y}async hitTest(i,t){var a,r,o;const e=this.layer;return[(a=this._pointsView)==null?void 0:a.hitTest(i),(r=this._polylinesView)==null?void 0:r.hitTest(i),(o=this._polygonsView)==null?void 0:o.hitTest(i)].flat().filter(Boolean).map(p=>(p.layer=e,p.sourceLayer=e,{type:"graphic",graphic:p,layer:e,mapPoint:i}))}update(i){this._polygonsView&&this._polygonsView.processUpdate(i),this._polylinesView&&this._polylinesView.processUpdate(i),this._pointsView&&this._pointsView.processUpdate(i)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new R({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new D(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new R({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new D(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new R({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new D(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.handles.add([this.allVisibleMapImages.on("change",i=>{i.added.forEach(t=>this._addMapImage(t)),i.removed.forEach(t=>this._removeMapImage(t))}),K(()=>this.layer.visibleSublayers,i=>{for(const[t,e]of this._kmlVisualData.allSublayers)e.visibility=0;for(const t of i){const e=this._kmlVisualData.allSublayers.get(t.id);e&&(e.visibility=1)}this._refreshCollections()})]),this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new l}detach(){this._fetchController.abort(),this._fetchController=null,this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null),this._imageReprojector&&(this._imageReprojector.destroy(),this._imageReprojector=null)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(i){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(i.href,A.fromJSON(i.extent),this.view.spatialReference).then(t=>{const e=new rt(t.bitmapData,{immutable:!1,requestRenderOnSourceChangedEnabled:!0});e.x=t.extent.xmin,e.y=t.extent.ymax,e.resolution=t.extent.width/t.bitmapData.width,e.rotation=i.rotation,this._mapImageContainer.addChild(e),this._bitmapIndex.set(i,e)})}async _getViewDependentUrl(i,t){const{viewFormat:e,viewBoundScale:a,httpQuery:r}=i;if(S(e)){if(H(t))throw new Error("Loading this network link requires a view state.");let o;if(await J(),S(a)&&a!==1){const _=new A(t.extent);_.expand(a),o=_}else o=t.extent;o=T(o,L.WGS84);const p=T(o,L.WebMercator),h=o.xmin,n=o.xmax,s=o.ymin,c=o.ymax,b=t.size[0]*t.pixelRatio,w=t.size[1]*t.pixelRatio,y=Math.max(p.width,p.height),g={"[bboxWest]":h.toString(),"[bboxEast]":n.toString(),"[bboxSouth]":s.toString(),"[bboxNorth]":c.toString(),"[lookatLon]":o.center.x.toString(),"[lookatLat]":o.center.y.toString(),"[lookatRange]":y.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":o.center.x.toString(),"[lookatTerrainLat]":o.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":o.center.x.toString(),"[cameraLat]":o.center.y.toString(),"[cameraAlt]":y.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":b.toString(),"[vertPixels]":w.toString(),"[terrainEnabled]":"0","[clientVersion]":F,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},m=_=>{for(const E in _)for(const k in g)_[E]=_[E].replace(k,g[k])},u=$(e);m(u);let V={};S(r)&&(V=$(r),m(V));const v=Z(i.href);return v.query={...v.query,...u,...V},`${v.path}?${W(u)}`}return i.href}async _fetchService(i){const t=new B;await this._loadVisualData(this.layer.url,t,i),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i))}_isSublayerVisible(i){const t=this._kmlVisualData.allSublayers.get(i);return!!t.visibility&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(i,t,e){return this._fetchParsedKML(i,e).then(async a=>{for(const r of a.sublayers){t.allSublayers.set(r.id,r);const o=r.points?await C(r.points):[],p=r.polylines?await C(r.polylines):[],h=r.polygons?await C(r.polygons):[],n=r.mapImages||[];if(t.allPoints.push(...o.map(s=>({item:s,sublayerId:r.id}))),t.allPolylines.push(...p.map(s=>({item:s,sublayerId:r.id}))),t.allPolygons.push(...h.map(s=>({item:s,sublayerId:r.id}))),t.allMapImages.push(...n.map(s=>({item:s,sublayerId:r.id}))),r.networkLink){const s=await this._getViewDependentUrl(r.networkLink,this.view.state);await this._loadVisualData(s,t,e)}}})}_fetchParsedKML(i,t){return Q(i,this.layer.spatialReference,this.layer.refreshInterval,t).then(e=>X(e.data))}_removeMapImage(i){const t=this._bitmapIndex.get(i);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(i))}};f([x()],d.prototype,"_pointsView",void 0),f([x()],d.prototype,"_polylinesView",void 0),f([x()],d.prototype,"_polygonsView",void 0),f([x()],d.prototype,"updating",void 0),d=f([O("esri.views.2d.layers.KMLLayerView2D")],d);const gp=d;export{gp as default};
