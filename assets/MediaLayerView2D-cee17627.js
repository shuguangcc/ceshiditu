import{e as T,y as D,n as it}from"./cast-7928d7aa.js";import"./geometry-5a216427.js";import{j as ot}from"./Collection-78126e82.js";import{s as K,a as st}from"./Error-653283ae.js";import{r as mt}from"./ensureType-cf29afa9.js";import{r as j,t as g}from"./typedArrayUtil-a8b5b3e9.js";import{r as pt,j as at}from"./promiseUtils-6684e352.js";import{l as H,h as P,f as nt,a as lt}from"./reactiveUtils-f41a4e00.js";import{u as ht}from"./aaBoundingRect-4a760199.js";import{b as ct,z as dt,a as ut}from"./Extent-69509002.js";import{a as ft}from"./mediaUtils-d2f5e3a2.js";import{y as yt,r as _t}from"./TileStrategy-4189758f.js";import"./TileStore-787dbea4.js";import"./TileKey-0750ad58.js";import{c as E}from"./mathUtils-2519596a.js";import{i as L,c as X,s as k,o as vt,r as wt,M as gt,f as $t,h as Rt}from"./mat3-3fc68e72.js";import{e as C}from"./mat3f64-c6305894.js";import{r as Mt}from"./vec2-2cef68de.js";import{o as xt,S as Tt}from"./vec3-a020a6f6.js";import{n as Et}from"./vec3f64-2f9cef06.js";import{n as Ct}from"./vec2f64-30dc1443.js";import{e as bt}from"./EffectView-d3bf37ed.js";import{E as B,b as Vt}from"./FramebufferObject-50e1b68f.js";import{P as qt,G as St,L as At,D as Dt,F}from"./enums-64ab819c.js";import{n as N,E as Pt}from"./Texture-e79b14e7.js";import{c as It}from"./screenUtils-410d12c0.js";import{e as Ot}from"./mat3f32-d3d088e8.js";import{t as jt}from"./vec2f32-461e65a9.js";import{r as Lt}from"./vec3f32-c9aa289f.js";import{U as Ut}from"./normalizeUtils-ee4bf39f.js";import{a0 as Wt}from"./index-455b69b8.js";import{o as Gt,b as zt}from"./WGLContainer-14075e1a.js";import{I as Qt}from"./enums-4ca4641f.js";import{y as Ht}from"./LayerView2D-9c021b91.js";import{u as kt}from"./LayerView-b83ced89.js";import"./string-cdf077e6.js";import"./nextTick-3ee5a785.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./Evented-515b9d9c.js";import"./SimpleObservable-7dcdef1d.js";import"./Ellipsoid-89682c5e.js";import"./projection-d7b57a6c.js";import"./preload-helper-41c905a7.js";import"./unitUtils-47abac71.js";import"./mat4-44a0988f.js";import"./common-c186b691.js";import"./assets-0b172f07.js";import"./request-d3e98716.js";import"./zscale-1e1fc911.js";import"./normalizeUtilsSync-9c84b89e.js";import"./jsonUtils-03c4af61.js";import"./Queue-3a0c055d.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-ff8c2cfb.js";import"./TimeExtent-744afd75.js";import"./enumeration-3c281341.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./Clonable-ba795b08.js";import"./vec4-790471c0.js";import"./context-util-1e3c8cfc.js";import"./VertexElementDescriptor-2925c6af.js";import"./parser-2b40deea.js";import"./colorUtils-639f4d25.js";import"./mat4f32-77b3d8ac.js";import"./Basemap-a8f7f439.js";import"./collectionUtils-3831b7c4.js";import"./deprecate-b9088bd3.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./loadAll-7fd968fe.js";import"./asyncUtils-62e8a185.js";import"./Portal-8b65c9c4.js";import"./locale-30120714.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./PortalItem-aa42c739.js";import"./messages-be07754e.js";import"./writeUtils-067c4f82.js";import"./layerUtils-034678f6.js";import"./Color-a42a8267.js";import"./compilerUtils-034cacb8.js";import"./opacityUtils-243aae26.js";import"./CollectionFlattener-3dd1f479.js";import"./TablesMixin-e7a6aab1.js";import"./Layer-f0696768.js";import"./Identifiable-aa6d459d.js";import"./Graphic-b46e2684.js";import"./PopupTemplate-6eb885db.js";import"./fieldUtils-31bfecd2.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./number-347a3a44.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./Cyclical-b66238c6.js";import"./workers-898a7c4c.js";import"./Connection-a681777e.js";import"./intl-f1e98361.js";import"./TileInfo-34f80a8e.js";import"./widget-f7489a3f.js";import"./uuid-73213768.js";import"./dom-5b7af1bf.js";import"./HandleOwner-e1406413.js";import"./byteSizeEstimations-f0cab514.js";import"./executeQueryJSON-bcd96e1a.js";import"./query-922e6fbf.js";import"./pbfQueryUtils-72f9b45b.js";import"./pbf-e1a6c35b.js";import"./OptimizedFeature-3de538c1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-d9d8ef40.js";import"./FeatureSet-0573546e.js";import"./RelationshipQuery-db5fcd0c.js";import"./LegendOptions-e65e7a9c.js";import"./utils-725f8b4e.js";import"./BlendLayer-d8293c8d.js";import"./ItemCache-ee28c7ba.js";import"./MemCache-4b976a8b.js";import"./cimSymbolUtils-2e4dde89.js";import"./utils-c81a5c52.js";import"./jsonUtils-c56f8821.js";import"./UniqueValueRenderer-103ec66d.js";import"./diffUtils-1ac65748.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./lengthUtils-d2d33f94.js";import"./jsonUtils-d7db3dc7.js";import"./styleUtils-4adfed9e.js";import"./DictionaryLoader-2cf5144e.js";import"./LRUCache-14115d91.js";import"./heatmapUtils-84e8c43b.js";import"./vec4f64-e407da96.js";import"./featureConversionUtils-01cdde8a.js";import"./TopFeaturesQuery-785f5453.js";import"./FeatureLayer-a9f3e6ec.js";import"./MultiOriginJSONSupport-27362d57.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./FeatureLayerBase-aebdf2da.js";import"./HeightModelInfo-22ad72d7.js";import"./arcgisLayerUrl-0b2b7691.js";import"./OperationalLayer-24e6fa34.js";import"./ElevationInfo-ce9cacc2.js";import"./editsZScale-2015e7db.js";import"./APIKeyMixin-34d76a46.js";import"./ArcGISService-ea748edf.js";import"./CustomParametersMixin-807d2055.js";import"./EditBusLayer-40671d1a.js";import"./FeatureReductionLayer-4077b2ae.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./OrderedLayer-e7edf19c.js";import"./PortalLayer-f1a64f99.js";import"./RefreshableLayer-1c078c47.js";import"./ScaleRangeLayer-271178b7.js";import"./TemporalLayer-39c07299.js";import"./TimeInfo-c89d0ef4.js";import"./FeatureTemplate-746d033e.js";import"./FeatureType-c83c5f49.js";import"./fieldProperties-7547b373.js";import"./FieldsIndex-aa6dd3fa.js";import"./versionUtils-92993d41.js";import"./styleUtils-da81b13f.js";import"./popupUtils-07fe66a7.js";import"./colorUtils-82440b70.js";import"./mat2d-d0b91e3e.js";import"./Scheduler-8433672d.js";import"./GraphicsLayer-10573c27.js";import"./ViewingMode-5d7d590b.js";import"./enums-0fc02184.js";import"./capabilities-3636c6a4.js";import"./sphere-4f5e644f.js";import"./mat4f64-1e28eae0.js";import"./quatf64-7fd38d64.js";import"./lineSegment-e6f72ff2.js";import"./plane-45609588.js";import"./scaleUtils-b32a50d8.js";import"./ElevationSamplerData-7decf898.js";import"./PhysicallyBasedRendering.glsl-a986c926.js";import"./View.glsl-8b12b8c2.js";import"./ShaderBuilder-93e8045e.js";import"./FloatPassUniform-d2dfc562.js";import"./Float4PassUniform-3a47b7b3.js";import"./RgbaFloatEncoding.glsl-6036ca34.js";import"./Texture2DPassUniform-6e8ae673.js";import"./VertexAttribute-9c5c630d.js";import"./Texture2DDrawUniform-22924c6f.js";import"./basicInterfaces-19ed850e.js";import"./PiUtils.glsl-0c0898f0.js";import"./ReadLinearDepth.glsl-7ff30f7d.js";import"./WaterSurface.glsl-fc8a5726.js";import"./ForwardLinearDepth.glsl-36f9eb3b.js";import"./Matrix3PassUniform-da8eddae.js";import"./Slice.glsl-a612de15.js";import"./Transform.glsl-f15542a7.js";import"./OutputHighlight.glsl-7364b03b.js";import"./MultipassTerrainTest.glsl-e79d40de.js";import"./NormalUtils.glsl-a59958d7.js";import"./AlphaCutoff-96178e0d.js";import"./TransparencyPassType-cd195b0e.js";import"./EvaluateSceneLighting.glsl-3bbc6edf.js";import"./VisualVariablePassParameters-5807c7dc.js";import"./Util-a48361c6.js";import"./SSAOBlur.glsl-c6f142fc.js";import"./ScreenSpacePass-00f8c8a4.js";import"./SSAO.glsl-6f3b4065.js";import"./ShaderTechniqueConfiguration-9f5b4555.js";import"./HUD.glsl-80cf9a21.js";import"./VerticalOffset.glsl-86460edb.js";import"./objectResourceUtils-ef6e3cdf.js";import"./devEnvironmentUtils-5002a058.js";import"./BufferView-646ba1de.js";import"./vec33-ce3aa99b.js";import"./DefaultMaterial_COLOR_GAMMA-9831d979.js";import"./types-e1c0a5bf.js";import"./Version-9baeb7ac.js";import"./quat-5b263584.js";import"./Texture-bbae5d9d.js";import"./TextureOnly.glsl-18701a3b.js";import"./InterleavedLayout-5e9cf734.js";import"./MixExternalColor.glsl-25f0049c.js";import"./symbolColorUtils-604c5345.js";import"./ObjectAndLayerIdColor.glsl-73c19386.js";import"./OutputDepth.glsl-179f1d8f.js";import"./VisualVariables.glsl-b8290512.js";import"./DiscardOrAdjustAlphaBlend.glsl-5f837994.js";import"./Normals.glsl-90e28525.js";import"./DefaultMaterial.glsl-b4f4cbc5.js";import"./VertexColor.glsl-db21b96c.js";import"./DefaultTechniqueConfiguration-e8962072.js";import"./RealisticTree.glsl-2b30ed32.js";import"./edgeProcessing-3ca548e1.js";import"./deduplicate-b0bc48cc.js";import"./projection-aa2a8986.js";import"./Octree-1a841545.js";import"./HUDMaterial.glsl-4bf3c7df.js";import"./sdfPrimitives-a24e9cb2.js";import"./floatRGBA-fa8308d2.js";import"./dehydratedFeatures-4eeb381a.js";import"./quantizationUtils-33aba427.js";import"./labelFormatUtils-4d730eaa.js";import"./I3SUtil-3ffd3baa.js";import"./I3SBinaryReader-3d2c2faa.js";import"./LineCallout.glsl-a0056465.js";import"./earcut-58237617.js";import"./QueryEngineResult-665bf7fb.js";import"./WhereClause-2b5b05b2.js";import"./utils-30a9a7e0.js";import"./generateRendererUtils-a996108f.js";import"./utils-1f4fcfec.js";import"./json-48e3ea08.js";import"./MeshComponent-f50df6af.js";import"./MarkerSizing.glsl-c6fa192a.js";import"./RibbonLine.glsl-2a3b4d4e.js";import"./LineStipple.glsl-de782d6a.js";import"./callExpressionWithFeature-a7532499.js";import"./LineMarker.glsl-8f444621.js";import"./NativeLine.glsl-cdbbf172.js";import"./Path.glsl-60b36878.js";import"./ColorMaterial.glsl-8310ffb3.js";import"./Pattern.glsl-d3388745.js";import"./LercDecoder-73115fd2.js";import"./config-1337d16e.js";import"./workerHelper-c6d4a8cb.js";import"./Subtype-5b01b21f.js";import"./datetime-4f774298.js";import"./elevationInfoUtils-427916a5.js";import"./ExportImageParameters-f328a234.js";import"./sublayerUtils-ba7f61bc.js";import"./webStyleSymbolUtils-55ed91cd.js";import"./enums-4b2a86a0.js";import"./WGLBrushVTLSymbol-dcfd88b4.js";import"./definitions-2d0dd0cd.js";import"./number-954e4ab6.js";import"./StyleDefinition-7d58136b.js";import"./GeometryUtils-c093d234.js";import"./pixelUtils-c27b13a1.js";import"./Utils-b2b4cf0c.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-afbd57f8.js";import"./MaterialKey-406a59ab.js";import"./alignmentUtils-ae955d28.js";import"./utils-26560131.js";import"./heatmapTextureUtils-d1d96768.js";const I=Et(),_=C(),O=C(),Y=C();function Bt(i,e,t){return J(O,e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7]),J(Y,t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7]),L(i,X(O,O),Y)}function J(i,e,t,r,s,o,m,n,c){k(i,e,r,o,t,s,m,1,1,1),xt(I,n,c,1),X(_,i);const[p,a,l]=Tt(I,I,vt(_,_));return k(_,p,0,0,0,a,0,0,0,l),L(i,_,i)}const v=C();class Ft extends bt{constructor(e){super(),this.elementView=e,this.isWrapAround=!1,this.perspectiveTransform=Ct(),this._vertices=new Float32Array(20),this._handles=[],this._handles.push(H(()=>this.elementView.element.opacity,t=>this.opacity=t,P),H(()=>[this.elementView.coords],()=>{this.requestRender()},P),nt(()=>this.elementView.element.loaded,()=>{const t=this.elementView.element;this.ready(),t.type==="video"&&j(t.content)&&this._handles.push(pt(t.content,"play",()=>this.requestRender()))},P)),e.element.load().catch(t=>{K.getLogger("esri.views.2d.layers.MediaLayerView2D").error(new st("element-load-error","Element cannot be displayed",{element:e,error:t}))})}destroy(){var e;this._handles.forEach(t=>t.remove()),(e=this.texture)==null||e.dispose(),this.texture=null}get dvsMat3(){return this.parent.dvsMat3}beforeRender(e){const{context:t}=e,r=this.elementView.element.content;if(j(r)){const s=r instanceof HTMLImageElement,o=r instanceof HTMLVideoElement,m=s?r.naturalWidth:o?r.videoWidth:r.width,n=s?r.naturalHeight:o?r.videoHeight:r.height;this._updatePerspectiveTransform(m,n),this.texture?o&&!r.paused&&(this.texture.setData(r),this.requestRender(),(N(t.gl)||E(m)&&E(n))&&this.texture.generateMipmap()):(this.texture=new Pt(t,{pixelFormat:qt.RGBA,dataType:St.UNSIGNED_BYTE,samplingMode:At.LINEAR,wrapMode:Dt.CLAMP_TO_EDGE,width:m,height:n,preMultiplyAlpha:!0},r),(N(t.gl)||E(m)&&E(n))&&this.texture.generateMipmap(),o&&!r.paused&&this.requestRender())}super.beforeRender(e)}_createTransforms(){return null}updateDrawCoords(e,t){const r=this.elementView.coords;if(g(r))return;const[s,o,m,n]=r.rings[0],c=this._vertices,{x:p,y:a}=e,l=t!==0;l?c.set([o[0]-p,o[1]-a,s[0]-p,s[1]-a,m[0]-p,m[1]-a,n[0]-p,n[1]-a,n[0]-p,n[1]-a,o[0]+t-p,o[1]-a,o[0]+t-p,o[1]-a,s[0]+t-p,s[1]-a,m[0]+t-p,m[1]-a,n[0]+t-p,n[1]-a]):c.set([o[0]-p,o[1]-a,s[0]-p,s[1]-a,m[0]-p,m[1]-a,n[0]-p,n[1]-a]),this.isWrapAround=l}getVAO(e,t,r){if(g(this.elementView.coords))return null;const s=this._vertices;if(this._vao)this._geometryVbo.setData(s);else{this._geometryVbo=B.createVertex(e,F.DYNAMIC_DRAW,s);const o=B.createVertex(e,F.STATIC_DRAW,new Uint16Array([0,0,0,1,1,0,1,1,1,1,0,0,0,0,0,1,1,0,1,1]));this._vao=new Vt(e,r,t,{geometry:this._geometryVbo,tex:o})}return this._vao}_updatePerspectiveTransform(e,t){const r=this._vertices;Bt(v,[0,0,e,0,0,t,e,t],[r[0],r[1],r[4],r[5],r[2],r[3],r[6],r[7]]),Mt(this.perspectiveTransform,v[6]/v[8]*e,v[7]/v[8]*t)}}class Nt extends Gt{constructor(){super(...arguments),this._localOrigin=It(0,0),this._viewStateId=-1,this._dvsMat3=Ot(),this.requiresDedicatedFBO=!1}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"overlay",brushes:[zt.overlay],target:()=>this.children,drawPhase:Qt.MAP});return[...super.prepareRenderPasses(e),t]}_updateMatrices(e){const{state:t}=e,{id:r,size:s,pixelRatio:o,resolution:m,rotation:n,viewpoint:c,displayMat3:p}=t;if(this._viewStateId===r)return;const a=Math.PI/180*n,l=o*s[0],f=o*s[1],{x:$,y:b}=c.targetGeometry,V=Ut($,t.spatialReference);this._localOrigin.x=V,this._localOrigin.y=b;const R=m*l,y=m*f,h=wt(this._dvsMat3);L(h,h,p),gt(h,h,jt(l/2,f/2)),$t(h,h,Lt(l/R,-f/y,1)),Rt(h,h,-a),this._viewStateId=r}_updateOverlays(e,t){const{state:r}=e,{rotation:s,spatialReference:o,worldScreenWidth:m,size:n,viewpoint:c}=r,p=this._localOrigin;let a=0;if(o.isWrappable){const l=n[0],f=n[1],$=180/Math.PI*s,b=Math.abs(Math.cos($)),V=Math.abs(Math.sin($)),R=Math.round(l*b+f*V),[y,h]=ct(o).valid,d=Wt(o),{x:U,y:Z}=c.targetGeometry,tt=[U,Z],q=[0,0];r.toScreen(q,tt);const M=[0,0];let S;S=R>m?.5*m:.5*R;const W=Math.floor((U+.5*d)/d),et=y+W*d,rt=h+W*d,A=[q[0]+S,0];r.toMap(M,A),M[0]>rt&&(a=d),A[0]=q[0]-S,r.toMap(M,A),M[0]<et&&(a=-d);for(const x of t){const G=x.elementView.bounds;if(g(G))continue;const[z,,Q]=G;z<y&&Q>y?x.updateDrawCoords(p,d):Q>h&&z<h?x.updateDrawCoords(p,-d):x.updateDrawCoords(p,a)}}else for(const l of t)l.updateDrawCoords(p,a)}}let u=class extends Ht(kt){constructor(){super(...arguments),this._overlayContainer=null,this._fetchQueue=null,this._tileStrategy=null,this._elementReferences=new Map,this.layer=null,this.elements=new ot}attach(){this.handles.add(lt(()=>this.layer.source,"refresh",()=>{for(const i of this._tileStrategy.tiles)this._updateTile(i);this.requestUpdate()})),this._overlayContainer=new Nt,this.container.addChild(this._overlayContainer),this._fetchQueue=new yt({tileInfoView:this.view.featuresTilingScheme,concurrency:10,process:(i,e)=>this._queryElements(i,e)}),this._tileStrategy=new _t({cachePolicy:"purge",resampling:!0,acquireTile:i=>this._acquireTile(i),releaseTile:i=>this._releaseTile(i),tileInfoView:this.view.featuresTilingScheme}),this.requestUpdate()}detach(){this.handles.removeAll(),this.elements.removeAll(),this._tileStrategy.destroy(),this._fetchQueue.destroy(),this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this._elementReferences.clear()}supportsSpatialReference(i){return!0}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}update(i){this._tileStrategy.update(i)}async hitTest(i,e){const t=[],r=i.normalize(),s=[r.x,r.y];for(const{projectedElement:{normalizedCoords:o,element:m}}of this._elementReferences.values())j(o)&&dt(o.rings,s)&&t.push({type:"media",element:m,layer:this.layer,mapPoint:i});return t.reverse()}canResume(){return this.layer.source!=null&&super.canResume()}async doRefresh(){}_acquireTile(i){const e=new Yt(i.clone());return this._updateTile(e),e}_updateTile(i){this.updatingHandles.addPromise(this._fetchQueue.push(i.key).then(e=>{const[t,r]=i.setElements(e);this._acquireElements(i,t),this._releaseElements(i,r),this.requestUpdate()},e=>{at(e)||K.getLogger(this.declaredClass).error(e)}))}_releaseTile(i){this._fetchQueue.abort(i.key.id),i.elements&&this._releaseElements(i,i.elements),this.requestUpdate()}async _queryElements(i,e){const t=this.layer.source;if(g(t))return[];this.view.featuresTilingScheme.getTileBounds(w,i,!0);const r=new ut({xmin:w[0],ymin:w[1],xmax:w[2],ymax:w[3],spatialReference:this.view.spatialReference});return t.queryElements(r,e)}_acquireElements(i,e){const t=this.layer.source,r=this.view.spatialReference;if(!g(t))for(const s of e)mt(this._elementReferences,s.uid,()=>{const o=new ft({element:s,spatialReference:r}),m=new Ft(o);return this._overlayContainer.addChild(m),this.elements.add(s),{tiles:new Set,projectedElement:o,overlay:m}}).tiles.add(i)}_releaseElements(i,e){for(const t of e){const r=this._elementReferences.get(t.uid);r.tiles.delete(i),r.tiles.size||(this._overlayContainer.removeChild(r.overlay),r.overlay.destroy(),r.projectedElement.destroy(),this._elementReferences.delete(t.uid),this.elements.remove(t))}}};T([D()],u.prototype,"_fetchQueue",void 0),T([D()],u.prototype,"layer",void 0),T([D({readOnly:!0})],u.prototype,"elements",void 0),u=T([it("esri.views.2d.layers.MediaLayerView2D")],u);const w=ht();class Yt{constructor(e){this.key=e,this.elements=null,this.isReady=!1,this.visible=!0}setElements(e){const t=[],r=new Set(this.elements);this.elements=e;for(const s of e)r.has(s)?r.delete(s):t.push(s);return this.isReady=!0,[t,Array.from(r)]}}const gm=u;export{gm as default};
