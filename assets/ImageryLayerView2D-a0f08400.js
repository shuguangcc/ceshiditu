import{e as a,y as o,n as x,m as R}from"./cast-7928d7aa.js";import{g}from"./Graphic-b46e2684.js";import{j as S}from"./Collection-78126e82.js";import{l as c,w as b,U as V}from"./reactiveUtils-f41a4e00.js";import{r as _,t as k,e as B}from"./typedArrayUtil-a8b5b3e9.js";import"./ensureType-cf29afa9.js";import{i as C}from"./GraphicsLayer-10573c27.js";import{y as D,d as I}from"./RasterVFDisplayObject-96332116.js";import{y as T}from"./LayerView2D-9c021b91.js";import{o as U}from"./BaseGraphicContainer-aa7dd916.js";import{n as A}from"./HighlightGraphicContainer-c5f26b65.js";import{s as P}from"./Error-653283ae.js";import{j as $,x as z}from"./promiseUtils-6684e352.js";import{A as F}from"./pixelUtils-c27b13a1.js";import{a as M}from"./BitmapContainer-e31790f9.js";import{i as O}from"./utils-26560131.js";import{i as j}from"./Bitmap-c332c5e6.js";import{v as J}from"./ExportStrategy-94329c70.js";import{U as L}from"./request-d3e98716.js";import{d as G}from"./HandleOwner-e1406413.js";import{a as q}from"./Extent-69509002.js";import{J as H}from"./rasterProjectionHelper-967d22a7.js";import{x as N,d as W}from"./dataUtils-a4eff43b.js";import{o as K,d as Q}from"./WGLContainer-14075e1a.js";import{I as E}from"./enums-4ca4641f.js";import{m as X}from"./ImageryLayerView-a754e4c1.js";import{u as Y}from"./LayerView-b83ced89.js";import{i as Z}from"./RefreshableLayerView-1faf24ee.js";import"./string-cdf077e6.js";import"./nextTick-3ee5a785.js";import"./geometry-5a216427.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./PopupTemplate-6eb885db.js";import"./Clonable-ba795b08.js";import"./fieldUtils-31bfecd2.js";import"./preload-helper-41c905a7.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./enumeration-3c281341.js";import"./number-347a3a44.js";import"./locale-30120714.js";import"./Identifiable-aa6d459d.js";import"./symbols-fa594797.js";import"./CIMSymbol-1379245a.js";import"./Symbol-fc4312a4.js";import"./Color-a42a8267.js";import"./colorUtils-639f4d25.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./screenUtils-410d12c0.js";import"./opacityUtils-243aae26.js";import"./symbolLayerUtils3D-1f8d4478.js";import"./aaBoundingBox-fc742a4e.js";import"./aaBoundingRect-4a760199.js";import"./persistableUrlUtils-a16d0f55.js";import"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./collectionUtils-3831b7c4.js";import"./Portal-8b65c9c4.js";import"./Loadable-48bc1293.js";import"./Promise-dfdee8ba.js";import"./PortalGroup-bfe93c76.js";import"./PortalUser-4c8e1adc.js";import"./Ellipsoid-89682c5e.js";import"./jsonUtils-03c4af61.js";import"./Evented-515b9d9c.js";import"./SimpleObservable-7dcdef1d.js";import"./Layer-f0696768.js";import"./BlendLayer-d8293c8d.js";import"./parser-2b40deea.js";import"./mat4f32-77b3d8ac.js";import"./mat4-44a0988f.js";import"./ScaleRangeLayer-271178b7.js";import"./ElevationInfo-ce9cacc2.js";import"./lengthUtils-d2d33f94.js";import"./unitUtils-47abac71.js";import"./FramebufferObject-50e1b68f.js";import"./enums-64ab819c.js";import"./Texture-e79b14e7.js";import"./context-util-1e3c8cfc.js";import"./VertexElementDescriptor-2925c6af.js";import"./mat3-3fc68e72.js";import"./mat3f32-d3d088e8.js";import"./EffectView-d3bf37ed.js";import"./TileKey-0750ad58.js";import"./vec2f64-30dc1443.js";import"./vec2f32-461e65a9.js";import"./Utils-b2b4cf0c.js";import"./number-954e4ab6.js";import"./enums-4b2a86a0.js";import"./cimAnalyzer-721530a4.js";import"./fontUtils-b94d5e06.js";import"./BidiEngine-836b7ef6.js";import"./utils-c81a5c52.js";import"./alignmentUtils-ae955d28.js";import"./definitions-2d0dd0cd.js";import"./mat2d-d0b91e3e.js";import"./vec2-2cef68de.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-a7532499.js";import"./quantizationUtils-33aba427.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-fa8308d2.js";import"./normalizeUtilsSync-9c84b89e.js";import"./normalizeUtils-ee4bf39f.js";import"./utils-1f4fcfec.js";import"./projection-d7b57a6c.js";import"./assets-0b172f07.js";import"./zscale-1e1fc911.js";import"./featureConversionUtils-01cdde8a.js";import"./OptimizedFeature-3de538c1.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./json-48e3ea08.js";import"./labelingInfo-5c3a46f6.js";import"./labelUtils-a194a22a.js";import"./defaultsJSON-59981e75.js";import"./jsonUtils-d7db3dc7.js";import"./FeatureContainer-f14037ae.js";import"./Queue-3a0c055d.js";import"./visualVariablesUtils-8295a400.js";import"./visualVariablesUtils-496ec144.js";import"./TileContainer-07bccb79.js";import"./capabilities-3636c6a4.js";import"./MaterialKey-406a59ab.js";import"./Matcher-1892b043.js";import"./TileStrategy-4189758f.js";import"./TileStore-787dbea4.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-ff8c2cfb.js";import"./TimeExtent-744afd75.js";import"./Field-f5fc9f6b.js";import"./fieldType-b1002185.js";import"./tileUtils-caf0c827.js";import"./TileClipper-5dae42c4.js";import"./Geometry-daada628.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./LRUCache-14115d91.js";import"./MemCache-4b976a8b.js";import"./ExpandedCIM-676cf2ac.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-4adfed9e.js";import"./schemaUtils-615a0d3f.js";import"./LayerFloorInfo-2cd5e8ae.js";import"./diffUtils-1ac65748.js";import"./createSymbolSchema-41fdd7db.js";import"./rendererUtils-3275688e.js";import"./FeatureReductionLayer-4077b2ae.js";import"./UniqueValueRenderer-103ec66d.js";import"./LegendOptions-e65e7a9c.js";import"./colorRamps-3a8ac20b.js";import"./sizeVariableUtils-d4870b0d.js";import"./visualVariableUtils-c59ab38d.js";import"./compilerUtils-034cacb8.js";import"./jsonUtils-c56f8821.js";import"./DictionaryLoader-2cf5144e.js";import"./deprecate-b9088bd3.js";import"./heatmapUtils-84e8c43b.js";import"./vec4f64-e407da96.js";import"./OperationalLayer-24e6fa34.js";import"./util-38c30a14.js";import"./ComputedAttributeStorage-58146ac4.js";import"./FeatureSetReader-2d27cc52.js";import"./centroid-13995b22.js";import"./FieldsIndex-aa6dd3fa.js";import"./GraphicsView-935faaa9.js";import"./vec3f32-c9aa289f.js";import"./TileInfo-34f80a8e.js";import"./WGLBrushVTLSymbol-dcfd88b4.js";import"./StyleDefinition-7d58136b.js";import"./config-1337d16e.js";import"./ShaderCompiler-77d0dcb6.js";import"./ProgramTemplate-afbd57f8.js";import"./heatmapTextureUtils-d1d96768.js";import"./popupUtils-e8f3d062.js";let m=class extends R{constructor(){super(...arguments),this.attached=!1,this.container=new O,this.updateRequested=!1,this.type="imagery",this._bitmapView=new M}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{$(e)||P.getLogger(this.declaredClass).error(e)})}hitTest(t){return new g({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new J({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{if(t.source instanceof HTMLImageElement)return;const e=await this.layer.applyRenderer({extent:t.source.extent,pixelBlock:t.source.originalPixelBlock??t.source.pixelBlock}),i=t.source;i.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...e,extent:i.extent}}).catch(t=>{$(t)||P.getLogger(this.declaredClass).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(s=>s.source).filter(s=>s.extent&&s.extent.intersects(e)).map(s=>({extent:s.extent,pixelBlock:s.originalPixelBlock})),r=F(i,e);return _(r)?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}_fetchImage(t,e,i,r){return(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,this.layer.fetchImage(t,e,i,r).then(s=>s.imageOrCanvasElement?s.imageOrCanvasElement:this.layer.applyRenderer(s.pixelData,{signal:r.signal}).then(n=>{const p=new j(n.pixelBlock,n.extent.clone(),s.pixelData.pixelBlock);return p.filter=u=>this.layer.applyFilter(u),p}))}};a([o()],m.prototype,"attached",void 0),a([o()],m.prototype,"container",void 0),a([o()],m.prototype,"layer",void 0),a([o()],m.prototype,"strategy",void 0),a([o()],m.prototype,"timeExtent",void 0),a([o()],m.prototype,"view",void 0),a([o()],m.prototype,"updateRequested",void 0),a([o()],m.prototype,"updating",null),a([o()],m.prototype,"type",void 0),m=a([x("esri.views.2d.layers.imagery.ImageryView2D")],m);const tt=m;class et extends K{constructor(){super(...arguments),this.symbolTypes=["triangle"]}get requiresDedicatedFBO(){return!1}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[Q],target:()=>this.children,drawPhase:E.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===E.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let h=class extends R{constructor(t){super(t),this.update=z((e,i)=>this._update(e,i).catch(r=>{$(r)||P.getLogger(this.declaredClass).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:s}=t.state,n=new q({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:s}),[p,u]=t.state.size;this._loading=this.fetchPixels(n,p,u,i);const w=await this._loading;this._addToDisplay(w,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(k(t.pixelBlock))return this.container.children.forEach(p=>p.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:s}=t,n=new D(s);n.offset=[0,0],n.symbolizerParameters=e,n.rawPixelData=t,n.invalidateVAO(),n.x=r.xmin,n.y=r.ymax,n.pixelRatio=i.pixelRatio,n.rotation=i.rotation,n.resolution=i.resolution,n.width=s.width*e.symbolTileSize,n.height=s.height*e.symbolTileSize,this.container.children.forEach(p=>p.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(n)}};a([o()],h.prototype,"fetchPixels",void 0),a([o()],h.prototype,"container",void 0),a([o()],h.prototype,"_loading",void 0),a([o()],h.prototype,"updating",null),h=a([x("esri.views.2d.layers.imagery.ImageryVFStrategy")],h);const it=h;let l=class extends G{constructor(){super(...arguments),this.attached=!1,this.container=new et,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const s=await this._projectFullExtentPromise,{symbolTileSize:n}=this.layer.renderer,{extent:p,width:u,height:w}=N(t,e,i,n,s);if(_(s)&&!s.intersects(t))return{extent:p,pixelBlock:null};const v={bbox:`${p.xmin}, ${p.ymin}, ${p.xmax}, ${p.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:n,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(v)){const d=this.getPixelData();if(_(d)&&`${d.extent.xmin}, ${d.extent.ymin}, ${d.extent.xmax}, ${d.extent.ymax}`===v.bbox)return d}const{pixelData:f}=await this.layer.fetchImage(p,u,w,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});return this._dataParameters=v,k(f.pixelBlock)?{extent:p,pixelBlock:null}:{extent:p,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?B(W(f.pixelBlock,"vector-uv")):f.pixelBlock}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new it({container:this.container,fetchPixels:this._fetchpixels}),this.handles.add(c(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),b),"vector-field-view-update")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.handles.remove("vector-field-view-update"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){if(this.updating||!this.container.children.length)return null;const{extent:t,pixelBlock:e}=this.container.children[0].rawPixelData;return{extent:t,pixelBlock:e}}hitTest(t){return new g({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams)}redraw(){this._updateSymbolizerParams(this.layer.renderer),this._strategy.redraw(this._symbolizerParams)}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,s=this._dataParameters.bbox===t.bbox;return e&&i&&r&&s}async _getProjectedFullExtent(t){try{return await H(this.layer.fullExtent,t)}catch{try{const i=(await L(this.layer.url,{query:{option:"footprints",outSR:t.wkid||JSON.stringify(t.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return i?q.fromJSON(i):null}catch{return null}}}_updateSymbolizerParams(t){t.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};a([o()],l.prototype,"attached",void 0),a([o()],l.prototype,"container",void 0),a([o()],l.prototype,"layer",void 0),a([o()],l.prototype,"timeExtent",void 0),a([o()],l.prototype,"type",void 0),a([o()],l.prototype,"view",void 0),a([o()],l.prototype,"updating",null),l=a([x("esri.views.2d.layers.imagery.VectorFieldView2D")],l);const rt=l;let y=class extends X(Z(T(Y))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new C,this.subview=null}get pixelData(){return this.updating?null:"getPixelData"in this.subview?this.subview.getPixelData():null}async hitTest(t,e){return this.subview?[{type:"graphic",graphic:this.subview.hitTest(t),layer:this.layer,mapPoint:t}]:null}update(t){var e;(e=this.subview)==null||e.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new A(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.handles.add([c(()=>this.layer.blendMode??"normal",t=>this.subview.container.blendMode=t,b),c(()=>this.layer.effect??null,t=>this.subview.container.effect=t,b),c(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},V),c(()=>this.timeExtent,t=>{this.subview.timeExtent=t,"redraw"in this.subview?this.requestUpdate():this.subview.redrawOrRefetch()},V),this.layer.on("redraw",()=>{"redraw"in this.subview?this.subview.redraw():this.subview.redrawOrRefetch()}),c(()=>this.layer.renderer,()=>this._setSubView())],"imagerylayerview-update")}detach(){var t,e;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),(t=this.subview)==null||t.destroy(),this.handles.remove("imagerylayerview-update"),this.subview=null,(e=this._highlightView)==null||e.destroy(),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:S.isCollection(t)?t.getItemAt(0):t)instanceof g))return{remove:()=>{}};let i=[];return Array.isArray(t)||S.isCollection(t)?i=t.map(r=>r.clone()):t instanceof g&&(i=[t.clone()]),this._highlightGraphics.addMany(i),{remove:()=>{this._highlightGraphics.removeMany(i)}}}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||this.subview.updating}_setSubView(){var i,r;if(!this.view)return;const t=(i=this.layer.renderer)==null?void 0:i.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:s}=this.subview;if(s===e)return this._attachSubview(this.subview),void(s==="flow"?this.subview.redrawOrRefetch():s==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),(r=this.subview)==null||r.destroy()}this.subview=e==="imagery"?new tt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new rt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new I({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0),t.container.blendMode=this.layer.blendMode,t.container.effect=this.layer.effect)}_detachSubview(t){t!=null&&t.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};a([o()],y.prototype,"pixelData",null),a([o()],y.prototype,"subview",void 0),y=a([x("esri.views.2d.layers.ImageryLayerView2D")],y);const br=y;export{br as default};
