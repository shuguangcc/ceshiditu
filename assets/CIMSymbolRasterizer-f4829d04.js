import{l as L}from"./Color-a42a8267.js";import{U as j}from"./request-d3e98716.js";import{f as X}from"./typedArrayUtil-a8b5b3e9.js";import{f as q}from"./promiseUtils-6684e352.js";import{u as A}from"./screenUtils-410d12c0.js";import{s as B,i as K,b as W,W as Q,T as V,m as Z,O as $}from"./cimAnalyzer-721530a4.js";import{o as tt,c as et}from"./Rasterizer-c5722a70.js";import{G as at,c as it,t as u,r as N}from"./utils-c81a5c52.js";import{m as rt}from"./cimSymbolUtils-2e4dde89.js";import{p as ot}from"./Symbol3DAnchorPosition2D-c0f4a14d.js";import"./colorUtils-639f4d25.js";import"./mathUtils-2519596a.js";import"./vec3-a020a6f6.js";import"./vec3f64-2f9cef06.js";import"./common-c186b691.js";import"./vec4-790471c0.js";import"./ensureType-cf29afa9.js";import"./string-cdf077e6.js";import"./Error-653283ae.js";import"./preload-helper-41c905a7.js";import"./fontUtils-b94d5e06.js";import"./arcadeOnDemand-c6d1b9f2.js";import"./geometry-5a216427.js";import"./Extent-69509002.js";import"./cast-7928d7aa.js";import"./nextTick-3ee5a785.js";import"./Ellipsoid-89682c5e.js";import"./Polyline-bf268e7b.js";import"./typeUtils-eb9416d0.js";import"./jsonMap-c1f958cf.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-4a760199.js";import"./jsonUtils-03c4af61.js";import"./enums-4b2a86a0.js";import"./alignmentUtils-ae955d28.js";import"./definitions-2d0dd0cd.js";import"./mat2d-d0b91e3e.js";import"./vec2-2cef68de.js";import"./vec2f32-461e65a9.js";import"./number-954e4ab6.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-a7532499.js";import"./quantizationUtils-33aba427.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-fa8308d2.js";import"./_commonjsHelpers-a430e9ea.js";import"./imageutils-b39249d8.js";import"./rasterizingUtils-133923fb.js";var J;(function(d){d.Legend="legend",d.Preview="preview"})(J||(J={}));const Y=d=>d&&d.scaleFactor?d.scaleFactor:1,st=96/72;class ie{constructor(e,t){this._spatialReference=e,this._avoidSDF=t,this._resourceCache=new Map,this._imageDataCanvas=null,this._pictureMarkerCache=new Map,this._textRasterizer=new B,this._cimResourceManager=new tt,this._rasterizer=new et(this._cimResourceManager)}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(e,t,o,i,a,r,h,s){if(!e)return null;const{data:c}=e;if(!c||c.type!=="CIMSymbolReference"||!c.symbol)return null;const{symbol:_}=c;r||(r=at(_));const v=await K.resolveSymbolOverrides(c,t,this._spatialReference,a,r,h,s);this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const g=this._imageDataCanvas,l=this._cimResourceManager,f=[];W.fetchResources(v,l,f),f.length>0&&await Promise.all(f);const{width:m,height:p}=o,C=nt(r,m,p,i),n=W.getEnvelope(v,C,l);if(!n)return null;const D=(window.devicePixelRatio||1)*st;let z=1,k=0,x=0;switch(_.type){case"CIMPointSymbol":case"CIMTextSymbol":{let M=1;n.width>m&&(M=m/n.width);let P=1;n.height>p&&(P=p/n.height),i==="preview"&&(n.width<m&&(M=m/n.width),n.height<p&&(P=p/n.height)),z=Math.min(M,P),k=n.x+n.width/2,x=n.y+n.height/2}break;case"CIMLineSymbol":{let M=1;n.height>p&&(M=p/n.height),z=M,x=n.y+n.height/2;const P=n.x*z+m/2,y=(n.x+n.width)*z+m/2;if(P<0){const{paths:w}=C;w[0][0][0]-=P}if(y>m){const{paths:w}=C;w[0][2][0]-=y-m}}break;case"CIMPolygonSymbol":{k=n.x+n.width/2,x=n.y+n.height/2;const M=n.x*z+m/2,P=(n.x+n.width)*z+m/2,y=n.y*z+p/2,w=(n.y+n.height)*z+p/2,{rings:R}=C;M<0&&(R[0][0][0]-=M,R[0][3][0]-=M,R[0][4][0]-=M),y<0&&(R[0][0][1]+=y,R[0][1][1]+=y,R[0][4][1]+=y),P>m&&(R[0][1][0]-=P-m,R[0][2][0]-=P-m),w>p&&(R[0][2][1]+=w-p,R[0][3][1]+=w-p)}}g.width=m*D,g.height=p*D;const I=1;g.width+=2*I,g.height+=2*I;const S=g.getContext("2d"),b=$.createIdentity();return b.translate(-k,-x),b.scale(z*D,-z*D),b.translate(m*D/2+I,p*D/2+I),S.clearRect(0,0,g.width,g.height),new Q(S,l,b,!0).drawSymbol(v,C),S.getImageData(0,0,g.width,g.height)}async analyzeCIMSymbol(e,t,o,i,a){const r=[],h=t?{geometryType:i,spatialReference:this._spatialReference,fields:t}:null;let s;await V(e.data,h,this._cimResourceManager,r,this._avoidSDF),q(a);for(const c of r)c.cim.type!=="CIMPictureMarker"&&c.cim.type!=="CIMPictureFill"&&c.cim.type!=="CIMPictureStroke"||(s||(s=[]),s.push(this._fetchPictureMarkerResource(c,a))),o&&c.type==="text"&&typeof c.text=="string"&&c.text.includes("[")&&(c.text=it(o,c.text,c.cim.textCase));return s&&await Promise.all(s),r}rasterizeCIMSymbol3D(e,t,o,i,a,r){const h=[];for(const s of e){i&&typeof i.scaleFactor=="function"&&(i.scaleFactor=i.scaleFactor(t,a,r));const c=this._getRasterizedResource(s,t,o,i,a,r);if(!c)continue;let _=0,v=c.anchorX||0,g=c.anchorY||0,l=!1,f=0,m=0;if(o==="esriGeometryPoint"){const p=Y(i);if(f=u(s.offsetX,t,a,r)*p||0,m=u(s.offsetY,t,a,r)*p||0,s.type==="marker")_=u(s.rotation,t,a,r)||0,l=!!s.rotateClockwise&&s.rotateClockwise;else if(s.type==="text"){if(_=u(s.angle,t,a,r)||0,s.horizontalAlignment!==void 0)switch(s.horizontalAlignment){case"left":v=-.5;break;case"right":v=.5;break;default:v=0}if(s.verticalAlignment!==void 0)switch(s.verticalAlignment){case"top":g=.5;break;case"bottom":g=-.5;break;case"baseline":g=-.25;break;default:g=0}}}c!=null&&h.push({angle:_,rotateClockWise:l,anchorX:v,anchorY:g,offsetX:f,offsetY:m,rasterizedResource:c})}return this.getSymbolImage(h)}getSymbolImage(e){const t=document.createElement("canvas"),o=X(t.getContext("2d"));let i=0,a=0,r=0,h=0;const s=[];for(let g=0;g<e.length;g++){const l=e[g],f=l.rasterizedResource;if(!f)continue;const m=f.size,p=l.offsetX,C=l.offsetY,n=l.anchorX,D=l.anchorY,z=l.rotateClockWise||!1;let k=l.angle,x=A(p)-m[0]*(.5+n),I=A(C)-m[1]*(.5+D),S=x+m[0],b=I+m[1];if(k){z&&(k=-k);const y=Math.sin(k*Math.PI/180),w=Math.cos(k*Math.PI/180),R=x*w-I*y,T=x*y+I*w,F=x*w-b*y,O=x*y+b*w,H=S*w-b*y,E=S*y+b*w,G=S*w-I*y,U=S*y+I*w;x=Math.min(R,F,H,G),I=Math.min(T,O,E,U),S=Math.max(R,F,H,G),b=Math.max(T,O,E,U)}i=x<i?x:i,a=I<a?I:a,r=S>r?S:r,h=b>h?b:h;const M=o.createImageData(f.size[0],f.size[1]);M.data.set(new Uint8ClampedArray(f.image.buffer));const P={offsetX:p,offsetY:C,rotateClockwise:z,angle:k,rasterizedImage:M,anchorX:n,anchorY:D};s.push(P)}t.width=r-i,t.height=h-a;const c=-i,_=h;for(let g=0;g<s.length;g++){const l=s[g],f=this._imageDataToCanvas(l.rasterizedImage),m=l.rasterizedImage.width,p=l.rasterizedImage.height,C=c-m*(.5+l.anchorX),n=_-p*(.5-l.anchorY);if(l.angle){const D=(360-l.angle)*Math.PI/180;o.save(),o.translate(A(l.offsetX),-A(l.offsetY)),o.translate(c,_),o.rotate(D),o.translate(-c,-_),o.drawImage(f,C,n),o.restore()}else o.drawImage(f,C+A(l.offsetX),n-A(l.offsetY))}const v=new ot({x:c/t.width-.5,y:_/t.height-.5});return{imageData:t.width!==0&&t.height!==0?o.getImageData(0,0,t.width,t.height):o.createImageData(1,1),anchorPosition:v}}async _fetchPictureMarkerResource(e,t){const o=e.materialHash;if(!this._pictureMarkerCache.get(o)){const i=(await j(e.cim.url,{responseType:"image",signal:t&&t.signal})).data;this._pictureMarkerCache.set(o,i)}}_imageDataToCanvas(e){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const t=this._imageDataCanvas,o=X(t.getContext("2d"));return t.width=e.width,t.height=e.height,o.putImageData(e,0,0),t}_imageTo32Array(e,t,o,i){this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas"));const a=this._imageDataCanvas,r=X(a.getContext("2d"));if(a.width=t,a.height=o,r.drawImage(e,0,0,t,o),i){r.save();const h=new L(i);r.fillStyle=h.toHex(),r.globalCompositeOperation="multiply",r.fillRect(0,0,t,o),r.globalCompositeOperation="destination-atop",r.drawImage(e,0,0,t,o),r.restore()}return new Uint32Array(r.getImageData(0,0,t,o).data.buffer)}_getRasterizedResource(e,t,o,i,a,r){let h,s,c;if(e.type==="text")return this._rasterizeTextResource(e,t,i,a,r);({analyzedCIM:h,hash:s}=ct(e,t,a,r));const g=Y(i);if(e.cim.type==="CIMPictureMarker"){const m=u(e.size,t,a,r)*g,{image:p,width:C,height:n}=X(this._getPictureResource(e,m,u(e.color,t,a,r)));return c={image:p,size:[C,n],sdf:!1,simplePattern:!1,anchorX:e.anchorPoint?e.anchorPoint.x:0,anchorY:e.anchorPoint?e.anchorPoint.y:0},c}rt(h,g,{preserveOutlineWidth:!1});const l=h;s+=o,i&&(s+=JSON.stringify(i));const f=this._resourceCache;return f.has(s)?f.get(s):(c=this._rasterizer.rasterizeJSONResource({cim:l,type:e.type,url:e.url,mosaicHash:s,size:null,path:null},window.devicePixelRatio||1,this._avoidSDF),f.set(s,c),c)}_rasterizeTextResource(e,t,o,i,a){const r=Y(o),h=u(e.text,t,i,a);if(!h||h.length===0)return null;const s=u(e.fontName,t,i,a),c=u(e.style,t,i,a),_=u(e.weight,t,i,a),v=u(e.decoration,t,i,a),g=u(e.size,t,i,a)*r,l=u(e.horizontalAlignment,t,i,a),f=u(e.verticalAlignment,t,i,a),m=N(u(e.color,t,i,a)),p=N(u(e.outlineColor,t,i,a)),C={color:m,size:g,horizontalAlignment:l,verticalAlignment:f,font:{family:s,style:c,weight:_,decoration:v},halo:{size:u(e.outlineSize,t,i,a)||0,color:p,style:c},pixelRatio:1,premultiplyColors:!this._avoidSDF};return this._textRasterizer.rasterizeText(h,C)}_getPictureResource(e,t,o){const i=this._pictureMarkerCache.get(e.materialHash);if(!i)return null;const a=i.height/i.width,r=t?a>1?A(t):A(t)/a:i.width,h=t?a>1?A(t)*a:A(t):i.height;return{image:this._imageTo32Array(i,r,h,o),width:r,height:h}}}function nt(d,e,t,o){const a=-e/2+1,r=e/2-1,h=t/2-1,s=-t/2+1;switch(d){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[a,0],[0,0],[r,0]]]};default:return o==="legend"?{rings:[[[a,h],[r,0],[r,s],[a,s],[a,h]]]}:{rings:[[[a,h],[r,h],[r,s],[a,s],[a,h]]]}}}function ct(d,e,t,o){let i,a;return typeof d.materialHash=="function"?(i=(0,d.materialHash)(e,t,o),a=Z(d.cim,d.materialOverrides)):(i=d.materialHash,a=d.cim),{analyzedCIM:a,hash:i}}export{ie as CIMSymbolRasterizer,J as GeometryStyle};
