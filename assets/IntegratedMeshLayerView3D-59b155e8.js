import{bn as m,h as p,H as n,B as l,e as i,y as o,bi as d,b as h}from"./index-74d49a87.js";import{v as u}from"./I3SMeshView3D-5d828d13.js";import{n as c}from"./LayerView3D-3838457e.js";import{u as g}from"./LayerView-7b372130.js";import"./I3SOverrides-327a726d.js";import"./I3SNode-724578f8.js";import"./I3SUtil-20c4030b.js";import"./I3SBinaryReader-fdd4f4f3.js";import"./RenderTexture-32de94fb.js";import"./FeatureLayerView3D-9a1b15f8.js";import"./FeatureLayerViewBase3D-420db4f4.js";import"./FeatureLikeLayerView3D-ba396373.js";import"./dehydratedFeatureComparison-4083c3a5.js";import"./queryForSymbologySnapping-1a4edcba.js";import"./elevationInfoUtils-3c9457ff.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-135fd699.js";import"./optimizedFeatureQueryEngineAdapter-dc9b72d8.js";import"./centroid-d1553553.js";import"./PooledRBush-83d0be85.js";import"./floorFilterUtils-080a7cd2.js";import"./QueryEngine-a3138f9c.js";import"./QueryEngineResult-10a77c28.js";import"./WhereClause-d3d68e94.js";import"./executionError-fb3f283a.js";import"./utils-2505602d.js";import"./generateRendererUtils-dce0e007.js";import"./projectionSupport-23b402d8.js";import"./json-48e3ea08.js";import"./utils-7cfc8659.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-6a05419e.js";import"./FeatureStore-7c5009b6.js";import"./BoundsStore-b6bb441e.js";import"./heatmapTextureUtils-0aa3a2bc.js";import"./projectExtentUtils-2ba254ff.js";import"./EventedSet-c37e86c7.js";import"./FeatureLayerView-2dcca551.js";import"./popupUtils-8b1a1adb.js";import"./RefreshableLayerView-cb757f22.js";import"./SceneModification-fe8b9220.js";import"./persistable-f8f00ae1.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceExtension-6d3251a6.js";import"./SceneLayerWorker-4cd3d6b3.js";const y=.2;let r=class extends u(c(g)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=m.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){var t;return((t=this._controller)==null?void 0:t.updatingProgress)??0}get lodFactor(){var t,e,a,s;return((s=(a=(e=(t=this.view)==null?void 0:t.qualitySettings)==null?void 0:e.sceneService)==null?void 0:a.integratedMesh)==null?void 0:s.lodFactor)??1}get progressiveLoadFactor(){return this.lodFactor>=1?y:1}get layerPopupEnabled(){return!1}initialize(){this.updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),p),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const t=new n;return t.layer=this.layer,t.sourceLayer=this.layer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.handles.remove("modifications"),l(this.layer.modifications))return void(this._modifications=[]);const t=this.layer.modifications;this.handles.add(this.updatingHandles.addOnCollectionChange(()=>t,()=>this._modifications=t.toArray(),p),"modifications")}};i([o()],r.prototype,"layer",void 0),i([o()],r.prototype,"i3slayer",null),i([o(d)],r.prototype,"updatingProgress",void 0),i([o()],r.prototype,"updatingProgressValue",null),i([o()],r.prototype,"lodFactor",null),i([o({readOnly:!0})],r.prototype,"progressiveLoadFactor",null),r=i([h("esri.views.3d.layers.SceneLayerView3D")],r);const mt=r;export{mt as default};
